commit bee437d7639fae7de03a0aabb53d33042116a446
Author: shubh@3ai <shubh@thirdai.com>
Date:   Wed Apr 5 12:54:50 2023 +0000

    Specify range and everything here

commit d41c3af7508e35606b5e2a60c66d9194e9684061
Merge: 45de2a9d 7572bc4c
Author: shubh@3ai <shubh@thirdai.com>
Date:   Wed Apr 5 09:20:21 2023 +0000

    Merge with main

commit 7572bc4c0348dca1a920adda3cfaa9eb26d9577a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Apr 4 17:21:31 2023 -0500

    Decay LR on Plateau (#1326)
    
    * Reduce LR on Plateau
    
    * python bindings
    
    * cmake format
    
    * resolve comments

commit 51b093134388e159a9f44eae17a47c108be8cc3e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Apr 4 16:46:41 2023 -0500

    Share parameters in embedding node (#1301)
    
    * bump version
    
    * fix bug
    
    * py format
    
    * cpp foramt
    
    * fix builds
    
    * fix tests
    
    * const ref
    
    * facepalm
    
    * facepalm
    
    * last one?
    
    * phase 1: without rca adjustments yet
    
    * rename functions and cleanup
    
    * remove todo
    
    * reorder functions
    
    * reorder
    
    * NGramTextBlock
    
    * NGramTextBlock and builds now
    
    * split into .h and .cc files, add documentation, move from class to namespace
    
    * reorg and add unit tests
    
    * tests
    
    * logic update
    
    * move split into words to string manipulation
    
    * rename namespace
    
    * remove base value
    
    * shorten names for compute*
    
    * remove HashUtils class and place functions in namespace
    
    * includes and fixes for string manipulation
    
    * cmake format
    
    * fix builds and tests
    
    * remove part from old merge
    
    * Next word prediction batch processor
    
    * Text generation processor tests
    
    * remove newlines
    
    * Update interface
    
    * python bindings
    
    * Update comments
    
    * Update featurizer
    
    * Average embedding reduction
    
    * Fix embedding layer grad
    
    * Logic to get embeddings from model
    
    * Fix output zeroing in avg
    
    * remove changes
    
    * Add last n tokens
    
    * Fix dataset ordering
    
    * Fix num datasets
    
    * Distributed LM Data Loader (#1208)
    
    * adds distributed-data-loader
    
    * re-update the dataloader.py
    
    * adds tokens to initializer
    
    * adds semicolon to pybind
    
    * some more merge issues
    
    * adds last_n_tokens to featurizer
    
    * solves save issue
    
    * adds empty lines
    
    * adds empty lines
    
    * Update dataset/src/featurizers/TextGenerationFeaturizer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    ---------
    
    Co-authored-by: Pratik Pranav <pratkpranav>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * unigram option
    
    * Fix inference featurizer
    
    * header
    
    * new newline
    
    * text generation featurizer
    
    * Fix args
    
    * Fix args
    
    * python format
    
    * Make unigrams consistent between lrc and irc
    
    * add vocab arg
    
    * Share parameters in embedding node
    
    * Fix generation featurizer test
    
    * Add more to comments
    
    * Resolve comments
    
    * Add optional context
    
    * Add optional prompt
    
    * Fix comment
    
    * Fix check for string
    
    * Fix num datasets
    
    * Inference featurization
    
    * Add test
    
    * Fix assert
    
    ---------
    
    Co-authored-by: David Torres <david@thirdai.com>
    Co-authored-by: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>

commit 614087d41fa18233b45ccbb9a36feddf4059cc66
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Apr 4 13:41:26 2023 -0500

    Bolt metadata (#1334)
    
    * Save model metadata
    
    * Save model metadata
    
    * Fix pybind
    
    * Add UUID
    
    * Fix comment
    
    * Add test
    
    * python format

commit 5441e57aa368f23d361a888e82b35ab159034310
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Apr 4 12:07:14 2023 -0500

    slack releases (#1336)

commit e1407e2734a71d8c39d7ac417f8bb01187d4b688
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Apr 4 09:12:00 2023 -0500

    max_in_memory_batches for coldstar() (#1335)

commit 9a49a839f402190371d11c0158c9c106ed1c374b
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Apr 4 08:15:11 2023 -0500

    new mach decoding (#1333)

commit b004bd9c22154fb9ade0f9e33aed7d8f5663b0ec
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Mar 31 17:34:45 2023 -0500

    Removing version restrictions (#1317)
    
    * Do we really need this restriction?
    
    * Removing other version restrictions
    
    * Trying this restriction
    
    * Formatting
    
    * Flattening
    
    * Removing distributed extras too

commit eb054c977874fb3eff9198ef5330ab48fa9d803e
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Fri Mar 31 10:51:46 2023 +0530

    adds tolerance (#1324)
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit 8c983d5b8e1e79b79e47d4b9db75c313802d58e0
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Mar 30 13:58:54 2023 -0500

    Bolt v2 Distributed Support (#1312)
    
    * Basic trainer wrapper
    
    * Get/Set gradients
    
    * Add python bindings
    
    * Use std::vector<float>* in gradients() method
    
    * Python tests for bolt v2 distributed
    
    * Python tests for bolt v2 distributed
    
    * Remove mnist
    
    * cpp format
    
    * remove unused imports
    
    * Fix test
    
    * Resolve comments
    
    * Resolve comments
    
    * Add logging

commit 5911379e46a76190347b66835b1327589add13c6
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Mar 30 13:58:33 2023 -0500

    Convert bolt vector to tensor (#1323)

commit c95e46143ee80e50f16906ee35a0a358e6476c2c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Mar 30 12:26:57 2023 -0500

    Text Generation Data Loader (#1178)
    
    * bump version
    
    * fix bug
    
    * py format
    
    * cpp foramt
    
    * fix builds
    
    * fix tests
    
    * const ref
    
    * facepalm
    
    * facepalm
    
    * last one?
    
    * phase 1: without rca adjustments yet
    
    * rename functions and cleanup
    
    * remove todo
    
    * reorder functions
    
    * reorder
    
    * NGramTextBlock
    
    * NGramTextBlock and builds now
    
    * split into .h and .cc files, add documentation, move from class to namespace
    
    * reorg and add unit tests
    
    * tests
    
    * logic update
    
    * move split into words to string manipulation
    
    * rename namespace
    
    * remove base value
    
    * shorten names for compute*
    
    * remove HashUtils class and place functions in namespace
    
    * includes and fixes for string manipulation
    
    * cmake format
    
    * fix builds and tests
    
    * remove part from old merge
    
    * Next word prediction batch processor
    
    * Text generation processor tests
    
    * remove newlines
    
    * Update interface
    
    * python bindings
    
    * Update comments
    
    * Update featurizer
    
    * Average embedding reduction
    
    * Fix embedding layer grad
    
    * Logic to get embeddings from model
    
    * Fix output zeroing in avg
    
    * remove changes
    
    * Add last n tokens
    
    * Fix dataset ordering
    
    * Fix num datasets
    
    * Distributed LM Data Loader (#1208)
    
    * adds distributed-data-loader
    
    * re-update the dataloader.py
    
    * adds tokens to initializer
    
    * adds semicolon to pybind
    
    * some more merge issues
    
    * adds last_n_tokens to featurizer
    
    * solves save issue
    
    * adds empty lines
    
    * adds empty lines
    
    * Update dataset/src/featurizers/TextGenerationFeaturizer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    ---------
    
    Co-authored-by: Pratik Pranav <pratkpranav>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * unigram option
    
    * Fix inference featurizer
    
    * header
    
    * new newline
    
    * text generation featurizer
    
    * Fix args
    
    * Fix args
    
    * python format
    
    * Make unigrams consistent between lrc and irc
    
    * add vocab arg
    
    * Fix generation featurizer test
    
    * Add more to comments
    
    * Add optional context
    
    * Add optional prompt
    
    * Fix comment
    
    * Fix check for string
    
    * Fix num datasets
    
    * Add test
    
    * Resolve comments
    
    * add comment and fix arg name
    
    * cpp format
    
    ---------
    
    Co-authored-by: David Torres <david@thirdai.com>
    Co-authored-by: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>

commit ef9d022405f6e1d8f65a13d9bfd676a2cf1ef689
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Mar 30 12:11:58 2023 -0500

    Freeze nodes (#1264)
    
    * Freeze nodes
    
    * node freeze and unfreeze
    
    * frozen in summary
    
    ---------
    
    Co-authored-by: Benito Geordie <benito@thirdai.com>
    Co-authored-by: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>

commit 3f462e3b5a4af36077f365207eb6271c791c2247
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Mar 30 18:38:48 2023 +0530

    [BOLT]Adds model checkpointing (#1290)
    
    * changes retrived from Fault Tolerance PR
    
    * implementation done
    
    * adds test; not passing :(
    
    * found the issue
    
    * improves testing oheckpointing
    
    * some changes
    
    * adds udt checkpointing
    
    * cleanup code
    
    * more changes
    
    * resolves comments
    
    * formatting
    
    * adds getModel to UDTGraph
    
    * adds getModel function in SVM
    
    * formatting
    
    ---------
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit 26b1d91dd7a60b339a5f870ca9ccb4b12a8a29c4
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Mar 30 16:39:17 2023 +0530

    adds boto3 (#1322)
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit c5854ec9ce8087fa90fcaecc5375e2e77755668c
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Mar 29 13:31:28 2023 -0500

    Rename slack channels for benchmarks (#1320)

commit 21e5e42546409e6104258651a2a05835503dd49a
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Mar 29 13:10:02 2023 -0500

    Version bump (#1321)

commit 6204215d68fa4b3adb40a1eb23f564cd5b40039e
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Wed Mar 29 15:34:23 2023 +0530

    Adds More Logging To Distributed (#1318)

commit d8d581ca4e8dab1f775a6ce724be19951da4cad7
Author: tharunkr24 <88212258+tharunkr24@users.noreply.github.com>
Date:   Tue Mar 28 17:11:26 2023 -0500

    added agnews data loader (#1315)
    
    * added agnews data loader
    
    * fixed python formatting
    
    * Formatting
    
    * formatting
    
    * removed fw.close()
    
    ---------
    
    Co-authored-by: anshu <anshu@thirdai.com>

commit a2752c14dabd53c000e40b10cdc333554946cf02
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Mar 28 16:12:01 2023 -0500

    Add methods to access model outputs (#1316)

commit 8a5783db37c0ba0a229daf554d16e27ea3e7ccc3
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Mar 27 13:37:41 2023 -0500

    Licensing system v2 (#1302)
    
    * Making udt test better
    
    * Initial commit
    
    * Refactor working so far
    
    * License file entitlements working
    
    * License file tests working
    
    * Seeing if removing this works
    
    * Formatting
    
    * Adding new checks to graph and flash
    
    * Adding entitlement tree
    
    * Adding extra licenses and cleaning up entitlement tree
    
    * Updating license files
    
    * Moving function bodys out of file
    
    * Updating license files
    
    * File tests passing
    
    * Adding pragma once
    
    * Fixing a few problems
    
    * Adding try catch to set working license
    
    * Responding to comments
    
    * Modifying EntitlementTree to RestrictionTree
    
    * Adding some todos and comments
    
    * Adding optional in include
    
    * Missed removing this
    
    * Fixing cmake
    
    * Adding keygen licensing test and better counting of entitlements

commit 3fc4225ab84b4ba17b8d15e67b060e1d87627728
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sun Mar 26 16:53:41 2023 -0500

    changed docker license path (#1311)

commit 8127f03183f01ab4fe8d482dd1ad72f69f38692c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sat Mar 25 12:28:00 2023 -0500

    Test op sharing Bolt v2 (#1309)

commit d14fde41d1e6a4471f732fd39d65277afde7cf36
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sat Mar 25 12:27:08 2023 -0500

    Fix BoltV2 summary (#1308)

commit f119084d3a1516c1f9f6f5494b3b42b8404e8817
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Mar 24 16:56:17 2023 -0500

    Fix upload wheel (#1310)

commit 3eeaa12f4b4d2c59f2decc97826dfc0c60287e85
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Mar 24 11:51:12 2023 -0500

    bumpetybump (#1306)

commit 7f643d065555ec810705effcaa0d06577a6cd48f
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Mar 24 11:16:11 2023 -0500

    char k gram encoding (#1307)
    
    * char k gram encoding
    
    * geordies comments
    
    * format

commit 609a94f747d635b9499f42f99fc572fb433e20b1
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Mar 23 15:53:36 2023 -0500

    Udt train batch (#1304)
    
    * make
    
    * udt pickle
    
    * add train_batch to udt
    
    * fix wrong call
    
    * Fixing other errors
    
    * fixed train batch data loading
    
    * Fix train batch metrics
    
    * Added train batch test
    
    * Update auto_ml/src/udt/UDTBackend.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Resolved comments + formatted
    
    ---------
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit c5bd9823d519518e6ed9e29316d031ffab56d758
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Mar 23 11:23:06 2023 -0500

    Fix typo in benchmarks action yaml file (#1305)

commit ac30ed6a7fee67dd8ca1548dd422cad3685bc4d5
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Mar 22 16:02:07 2023 -0500

    Update github actions configs for daily benchmarks (#1295)
    
    * Update benchmarks suite actions file
    
    * Fix path to benchmarks file
    
    * Fix call to benchmarks
    
    * Fix udt path script
    
    * Add timeout for benchmarks suite
    
    * Add run_name arguments
    
    * Reduce number of epochs for wayfair udt
    
    * Add official benchmark label to bolt benchmarks config
    
    * Add fix for wayfair benchmark
    
    * Update times to run benchmark actions
    
    * Add comments
    
    * Remove learning rate scheduler for wayfair udt benchmark

commit 0a101ee878a7d9ff890e53ffdfbb8686be472f2d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Mar 22 15:37:15 2023 -0500

    Save/load license check (#1300)

commit bb5aa06aa695608cbb06336a0e119923827db997
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Mar 22 14:54:40 2023 -0500

    fix slack notifications to happen on any failure in building/uploading wheels, not just an upload to  pypi failure (#1284)

commit 50092730f8b77bf7061228bbf8e5acdfdfa24639
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Mar 22 00:55:45 2023 -0500

    Support for multiple inputs and outputs in Bolt V2 trainer  (#1297)
    
    * Add support for multiple inputs in trainer
    
    * Remove unused model methods
    
    * Remove overload cast
    
    * Fix clang tidy
    
    * resolve comments

commit 06e5b9461e832811165f980e79da23ebc100d7af
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Wed Mar 22 11:25:01 2023 +0530

    [Distributed] Mach with Distributed + Tests (#1293)
    
    * Tests working now
    
    * tests are passing
    
    * done
    
    * changes path
    
    * adds file path in return
    
    ---------
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit 65e21d9e3d06dc067920f540ec46e4fa3b3fc1d9
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Mar 21 18:55:11 2023 -0500

    Cleaning up licensing and docker folders (#1299)
    
    * Cleaning up licensing and docker folders
    
    * Fixing references
    
    * Cmake format

commit 3867c2fc084a308619df897a4f5230fcc02bb551
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Mar 21 17:23:50 2023 -0500

    Not saving activations if returning metrics (#1294)
    
    * Not saving activations if returning metrics
    
    * Adding check in evaluate

commit 897b1b6a245441e0a930ca44a30a000a1ce133d8
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Mar 21 16:27:52 2023 -0500

    flaky mach test (#1296)

commit d33ed0ea4885cbbc4e02d7f4619ab24edbc4e9b3
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Mar 21 11:31:13 2023 -0500

    Remove csv escape char (#1292)
    
    * treat escape char like regular character
    
    * Remove escape char support
    
    * add quotes in quotes test

commit 45de2a9da07f1adbbc2f0f65801a498f0cb44e29
Author: shubh@3ai <shubh@thirdai.com>
Date:   Tue Mar 21 10:28:42 2023 +0000

    Reeset BinSize and RangePow

commit 84af1a30b2f2bd61661d60ba068e8677c8ca556b
Author: shubh@3ai <shubh@thirdai.com>
Date:   Tue Mar 21 09:34:21 2023 +0000

    Autotune

commit 3e56073a8f0904fc25fd9503601701cc4197d8e0
Author: shubh@3ai <shubh@thirdai.com>
Date:   Tue Mar 21 08:04:45 2023 +0000

    Add Permutes to params of DWTA

commit b2d23d11503d1271216bb286f6838ede299671d5
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Tue Mar 21 13:11:31 2023 +0530

    [Distributed] Adds validation to distributed (#1277)
    
    * init
    
    * adds validation to distributed
    
    * formatting
    
    * tests are working
    
    * changes
    
    * changes unknown; started working after some time ;(
    
    * remmoves pickling evalconfig
    
    * done
    
    * validation is working
    
    * formatting
    
    * solves issues with distributed tests
    
    * removes shuffling of validation data
    
    * renames to shuffling
    
    * update docstrings
    
    * removing unused classes
    
    * issue with DatasetLoader
    
    * adds a helper function for validation
    
    * make func -> property for validationArgs
    
    * bunch of changes to get validation metric out
    
    * adds-retrieval of validation in distributed
    
    * formatting
    
    * extra function for post training batch + removes redundant changes
    
    * adds validation to primary nodes
    
    * changes suggested by Josh
    
    * some changes
    
    * Formatting
    
    ---------
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit 57fa625df987c07a7d1ce8546546b77f4605b33a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Mar 20 18:43:23 2023 -0500

    Minor features for Bolt V2 (#1285)

commit 2d5f37f080141ec47d35a13d0875d672d113aeda
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Mar 20 15:03:56 2023 -0500

    Version bumpy (#1287)

commit 3aff813ee8f860bb2f7e16fc2548bf9aa7cf4c42
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Mar 20 14:58:08 2023 -0500

    Fixing wheel tests (#1288)
    
    * No tests on windows
    
    * Fixing syntax error
    
    * Making telemetry fail test more robust
    
    * Fixing telemetry tests

commit b66378d263f879853c3ae4dcca3823176996f5c4
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Mar 20 10:39:23 2023 -0500

    Enabling windows wheel (#1286)

commit f79c6f9380f95873fef7f81c4d50dd13f67974c1
Author: shubh@3ai <shubh@thirdai.com>
Date:   Mon Mar 20 06:40:17 2023 +0000

    Test

commit 878532e37bde31df15a290fc2dc55b0853970b0c
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Mar 16 18:04:29 2023 -0500

    Adding support to push telemetry (to file and to s3 for now) (#1282)
    
    * Initial commit
    
    * File writing working
    
    * Now just need to get S3 working
    
    * Working on s3 test
    
    * S3 test working
    
    * Refactoring out UUID
    
    * Tests working
    
    * Renaming
    
    * Making all changes besides comments
    
    * Adding more comments
    
    * Adding failure tests
    
    * Responded to all comments
    
    * Adding configurable upload time
    
    * Stopping telemetry in test I forgot to
    
    * Responding to comments

commit b50b4425514ddc3751eeb6abfc4b213c2431bf23
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Mar 16 10:15:37 2023 -0400

    Mach UDT (#1281)
    
    * precision at 1
    
    * new files
    
    * multihash block
    
    * progress
    
    * threadsafe mach block
    
    * numerical mach index
    
    * working output range and num hashes tests
    
    * determinism test and cleanup tests with utils
    
    * rename one thing, helper method for coldstart, decoding method
    
    * i forgot lmfao
    
    * beir dataset download, starting python tests, add mach to UDT, some of josh's comments
    
    * python test and some of josh's comments
    
    * incomplete tests
    
    * passing tests :))))
    
    * Update auto_ml/src/udt/Defaults.h
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * some of josh changes
    
    * josh changes and add decode params
    
    * defaults and import
    
    * fix lint
    
    * fix predict batch and fix cpp test
    
    * cereal changes, josh comments
    
    * fix final python test :)
    
    * string test and last few comments
    
    * pytest flaky
    
    * parallel eval and predict batch
    
    ---------
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>

commit 9c71a9acaf7e1835d905ff8b89940813f0f77c42
Author: shubh@3ai <shubh@thirdai.com>
Date:   Wed Mar 15 10:58:36 2023 +0000

    DWTATest

commit 54aec79e44fb81f0fb4d6010b9815ed488d43cc7
Author: shubh@3ai <shubh@thirdai.com>
Date:   Tue Mar 14 11:38:35 2023 +0000

    removing print statements

commit 38389cd5627df074bf7d6a6ef86d4b97af353234
Author: shubh@3ai <shubh@thirdai.com>
Date:   Tue Mar 14 05:27:34 2023 +0000

    DWTATest

commit 8fd06a150c5963c6b046ad936d4fa4ebee0c295f
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Tue Mar 14 00:39:36 2023 +0530

    [Distributed]Makes Distributed Python Tests Faster (#1280)
    
    * increases the number of cpus tests runs on
    
    * adds get_num_cpus to distributed library
    
    * print logs
    
    * changes machine from ubuntu-latest to ubuntu-latest-8-cores
    
    * removes print statement
    
    ---------
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit f18d16f1e8c65523555ed6e0fab5a3fd4a1e6de0
Author: shubh@3ai <shubh@thirdai.com>
Date:   Mon Mar 13 12:08:08 2023 +0000

    DWTA test

commit de1a68d9f4f93885f492ac2a96145e788f70faba
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Mar 13 13:00:16 2023 +0530

    [Distributed] Cold Start in Distributed Setting (#1260)
    
    * adds solution
    
    * serial working now
    
    * cold-start in distributed setting running now
    
    * Formatting
    
    * adds tests
    
    * formatting
    
    * improve submodule structure
    
    * improves preprocessing
    
    * solves the issue with test
    
    * simplifies train logic
    
    * Fomratting
    
    * improves APIs name
    
    * formatting updates
    
    * tests passing
    
    * adds pytest makr
    
    * updated black formatter
    
    * adds comments to preprocessing function
    
    * adds comment
    
    * moves bolt_submodule to data_submodule
    
    * removes extra distributed_preprocessing submodule
    
    * data module in place of dataset
    
    * changed data_loader inheritences + abstracted batch size logic
    
    * adds coldstartmetadata
    
    * Removes extra argument from tabulardatasetfactory
    
    * formatting
    
    * adds comments to coldstartmetadata class
    
    * formatting
    
    * adds docstring for coldstart
    
    * formatting
    
    * improves logs
    
    * adds comment to UDTBackend
    
    * formatting python
    
    * should solve distributed tests
    
    * renames library
    
    * formatting
    
    * changes
    
    * solves some clang tidy issues
    
    * solves issues
    
    * formatting
    
    * olint clangd issuing issue with just making pybind
    
    * cpp-formatting
    
    * format
    
    * remove redundant data variables
    
    * postTrainingEpochUpdates -> getMetricsUpdate
    
    * adds datasets
    
    * pytest fixture
    
    * formatting
    
    ---------
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit 0beb294eff10aa269f4677a209b11170aee7952e
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Mar 10 14:02:47 2023 -0600

    Overfitting Callback for coldstart (#1278)
    
    * done
    
    * pyformat
    
    * fix test

commit d07f12044d56a36767721a64297f2ab97fba81ae
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Mar 9 23:22:34 2023 -0600

    Adding predict for graphs (#1276)
    
    * Adding predict for graphs and cleaning up tabular featurizer
    
    * Adding predict tests
    
    * Changes to make demos more smooth
    
    * Making requested changes

commit 1d39f2d3ca1531f1710752f6c30e761e9cba3be5
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Mar 9 19:01:34 2023 -0600

    Return udt train metrics (#1272)
    
    * return train metrics
    
    * fix tests
    
    * cppformat
    
    * add tests to other udts
    
    * fix tests

commit 09c7aeeddb14bd1d1bff297735dcf58d5bb702ad
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Mar 9 18:39:12 2023 -0600

    Embedding op (#1204)
    
    * Embedding chunk size
    
    * fix experiment
    
    * Fix script
    
    * remove benchmarking script
    
    * rename chunk_size -> update_chunk_size
    
    * Concatenate op bolt v2
    
    * Add dense test
    
    * Embedding op bolt v2
    
    * merge
    
    * Test working
    
    * cleanup test
    
    * Fix clang tidy
    
    * python format
    
    * remove changed files
    
    * remove changed files
    
    * Fix typing
    
    * Resolve comments
    
    * Fix merge
    
    * fix test

commit c21371641d59d488bc3121a621305f672675bf74
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Mar 9 14:49:45 2023 -0600

    Concatenate op bolt v2 (#1203)
    
    * Concatenate op bolt v2
    
    * Add dense test
    
    * Fix clang tidy
    
    * Fix typing
    
    * Fix test

commit 233183b32e1eb2aa6e47cfefdfa59c4a81e2d971
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Mar 9 14:45:36 2023 -0600

    Moving YelpChi train test split to the demo download util (#1275)

commit 13cbf92232db6405d9635e2115dae227901abf7a
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Mar 9 14:18:32 2023 -0600

    construct precision metric (#1273)

commit 04aea66153f8f2814ae88bc44c31f6f4fb9f1dac
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Mar 9 13:06:22 2023 -0600

    Version bump (#1274)

commit 1ff4c0e560826f393574da90deb90f7edc5a7ed7
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Mar 9 16:43:04 2023 +0000

    comment pragma

commit 548be344d6bbf45de932f4ddf888250faa0b6de0
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Mar 9 16:35:25 2023 +0000

    Print vectors

commit e93350deb2b04bf6031dde1c8c4db3c911f6c0f3
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Mar 9 09:33:44 2023 -0600

    License demo fixes (#1269)

commit f0705295ff2977b27e6f3dfa8fa28d8140999dba
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Mar 9 09:33:30 2023 -0600

    Trying python tests on a larger machine (#1270)

commit 37daac727a10698b1dac1018f2fcffa8e1129d7f
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Mar 9 11:12:38 2023 +0000

    DWTA test

commit f80040ab0ce80a04465cfc60edab730ba6247002
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Mar 9 05:25:17 2023 +0000

    print vec, no densify sparse

commit 67ee2551a26fd4e858ca42b7b4e1fc861237e59b
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Mar 7 22:52:21 2023 -0600

    Graph NNs in UDT V2 (#1241)
    
    * Merging svm_in_udt into udt v2
    
    * Test passing
    
    * Adding licensing token
    
    * First set of merging
    
    * More progress
    
    * More more progress
    
    * Train method completely abstracted (not sure if better)
    
    * More more more progress
    
    * More more more more progress
    
    * More more more more more progress
    
    * Hunting segfaults
    
    * Non gnn tests passing
    
    * Fixing shuffle bug
    
    * Fixing serialization problems
    
    * Removing TODO
    
    * Adding test for indexing and clearing
    
    * Formatting
    
    * Adding pragma once
    
    * Abstracting out UDTSvmClassifier
    
    * Deleting extra code
    
    * Adding another util method for setting the model
    
    * Correctly processing freeze_hash_tables
    
    * Adding no neighbor test
    
    * Removing extra todo
    
    * Fixing README
    
    * Responding to comments
    
    * Adding comments to data types
    
    * Responding to more comments
    
    * Adding split function
    
    * Changing buildSegment to return void and throw errors
    
    * Responding to more comments
    
    * Abstracting vector creation to blocklist
    
    * Responding to more comments
    
    * Removing extra semi colons
    
    * Fixing result of merge
    
    * Merging from work branch
    
    * Python formatting
    
    * Responding to comments

commit 7a4284e450f9ecbd360e03f7da250c62f5be6926
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Mar 7 21:57:40 2023 -0600

    Bump version to 0.5.21 (#1267)

commit a4054796b2391a31883ce5212fcac71046846af7
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Mar 7 17:13:57 2023 -0600

    trim return character (#1266)

commit c9bd56216f46e2b7bcacf7235af982bde072a65d
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Mar 7 14:11:39 2023 -0600

    Precision@K metric (#1259)
    
    * precision at 1
    
    * format and += comments

commit 60a6d26c97d9d0ad88681a19ab39f15bdf251463
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Mar 6 17:35:48 2023 -0600

    Create classifier helper for UDT (#1254)
    
    * Create classifier helper for UDT
    
    * Cleanup validation
    
    * Resolve comments
    
    * Add function definition
    
    * Fix recursive prediction

commit 51f6c770f9bf672791f6599347e9f480fbd774e0
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Mar 6 16:57:17 2023 -0600

    bump (#1262)

commit 21f7ad2b2806a70b8120ee63a5eafb86e6573a12
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Mar 6 16:28:35 2023 -0600

    Recurrence augmentation (#1256)
    
    * update column numbers in processHeader
    
    * Refactored Dataset
    
    * Refactored Dataset
    
    * column identifier.cc + remove unneeded check
    
    * column identifier.cc + remove unneeded check
    
    * Fixed cmakelists
    
    * Fix merge errors
    
    * Fixed build errors
    
    * text::join
    
    * Attempt 1
    
    * Fixed some tests
    
    * Fixed tabular featurizer
    
    * Remove citibike test
    
    * trigger CI
    
    * fix pointer issue
    
    * fix consolidate
    
    * return of prepare for batch
    
    * call augmentation prepare for batch
    
    * merge
    
    * format
    
    * make more readable
    
    * comment on prepare for batch
    
    * refactored ThreadSafeVocabulary
    
    * Fixed failing vocab test
    
    * remove cout from pragma
    
    * cleaner offset calculation
    
    * better helper function names in recurrence augmentation
    
    * Builder.empty
    
    * builder.empty -> !builder.empty
    
    * Refactored test
    
    * Remove prepare for batch
    
    * refactor EOS
    
    * Fixed categorical block
    
    * Lstm v3 (#1257)
    
    * Merge pt 1
    
    * dataset factory
    
    * udt recurrent classifier.h
    
    * builds
    
    * less auto!
    
    * comment on sequence Block
    
    * docs
    
    * data type is final
    
    * rename split -> split_data_labels
    
    * check n_target_classes has value
    
    * Rename "train" variable to "shuffle"
    
    * Comment on inference featurizer input block
    
    * Throw if sparse inference helper
    
    * todo on joining predicted sequence
    
    * switch tabular featurizer constructor delegation

commit 71a55abce23447727b8c6a7b37d845b4d1b07ab1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Mar 6 11:09:45 2023 -0600

    At tensor method boltv2 (#1261)

commit addb14b75c27c8ea6c3165b668afe7b831c83281
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Mar 6 10:04:52 2023 -0600

    Refactor dataset  (#1252)
    
    * update column numbers in processHeader
    
    * Refactored Dataset
    
    * Refactored Dataset
    
    * column identifier.cc + remove unneeded check
    
    * column identifier.cc + remove unneeded check
    
    * Fixed cmakelists
    
    * Fix merge errors
    
    * Fixed build errors
    
    * trigger CI
    
    * return of prepare for batch
    
    * format
    
    * make more readable
    
    * Fix failed actions
    
    * Rename split
    
    * Blocklist.cc order same as .h
    
    * Modify block interface comment
    
    * Remove addVectorSegments
    
    * Added space requested by Josh
    
    * Added comment on inputDim
    
    * Added comment on inputDim
    
    * added todo for numcols in header / expected num cols

commit 2bca0b0810b1cdbfbab87abbab0ec1506c132983
Author: shubh@3ai <shubh@thirdai.com>
Date:   Mon Mar 6 10:49:53 2023 +0000

    print output vecs

commit bddfb73d5202744c62238bfbbd6a09ff4bf2d622
Author: shubh@3ai <shubh@thirdai.com>
Date:   Mon Mar 6 06:54:07 2023 +0000

    no print hashes, clang tidy bugprone

commit 69af11ba6a42aec91e6d8688e28135c4b2492631
Author: Joshua Engels <josh@thirdai.com>
Date:   Sun Mar 5 07:54:51 2023 -0600

    Small fix where we forgot to pass the token in (#1253)
    
    * Small fix
    
    * Adding test to catch this as well

commit cb76587bc64a5f0404894a01f455ad1fce1d8463
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Mar 2 17:04:52 2023 -0600

    update column numbers in processHeader (#1250)
    
    * update column numbers in processHeader
    
    * column identifier in cc file
    
    * column identifier.cc + remove unneeded check
    
    * resolve Nick's comment
    
    * Fixed cmakelists

commit f0c183e1e7ccae1a5924ed15d9e532379519896f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Mar 2 11:28:22 2023 -0600

    Embedding layer config (#1249)
    
    * Embedding layer config
    
    * Comment

commit 0b0641a2dc77ce829e1d38494e49c87092147414
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 28 17:39:04 2023 -0600

    Allow empty docs for csdisco (#1245)
    
    * Allow empty docs for csdisco
    
    * python format
    
    * Comment

commit 31dcfafa8ca3947061a1001c8c26e295c27f3698
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 28 17:23:43 2023 -0600

    Bump version to 0.5.19 (#1246)

commit f29b75670bb078460214be456d36be9d3799819d
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Feb 28 16:57:38 2023 -0600

    Closing loophole (#1243)

commit cef4051e0476ce53784dc862c70dc04ae73ac8ac
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 28 16:45:13 2023 -0600

    Fix Sigmoid (#1244)
    
    * Fix Sigmoid
    
    * Use eigen inverse

commit f19b2eccde31382ddc739cc6fc05c4a1c6035b5e
Author: shubh@3ai <shubh@thirdai.com>
Date:   Tue Feb 28 07:45:47 2023 +0000

    remove pragma

commit f64a124cb2cfac215b5d8c1a0f47819804923901
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Feb 27 16:40:13 2023 -0600

    Adding SVM support in UDT (#1239)
    
    * Merging svm_in_udt into udt v2
    
    * Test passing
    
    * Adding licensing token
    
    * Removing extra conversion function

commit 4dd921e584b69d558fdd1a96622d8c0d47fe9465
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Feb 27 13:08:12 2023 -0600

    Fixign GCC 12 warnings and removing some no longer used code (#1238)

commit 62dc47224689521e099272bcf6dfeadc8024138f
Author: Jerin Philip <jerin@thirdai.com>
Date:   Sun Feb 26 18:10:42 2023 +0000

    Guard vcpkg installation with windows runner check (#1240)

commit 4380f19376d297ca4fe1f4840471b59248f5321b
Author: Jerin Philip <jerin@thirdai.com>
Date:   Sun Feb 26 06:02:55 2023 +0000

    Fix windows-builds on CI (#1237)
    
    Uses `vcpkg` to obtain OpenSSL and ZLIB required for compiling.

commit 8789a4e69554cdc30b9a85d04c8a32220af64bba
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Feb 24 18:33:14 2023 -0600

    UDT Refactor (#1230)
    
    * Backend interface
    
    * Add last interface methods
    
    * Tabular dataset factory
    
    * Mostly implement udt classifier
    
    * Explainability and cold start for classifier
    
    * Binary classifier threshold
    
    * Regression
    
    * featurization/tabular -> featurization
    
    * Regression constructor
    
    * add defaults and model config
    
    * classification/regression constructor
    
    * python bindings and compiles
    
    * tests working
    
    * Return metrics
    
    * fix regression predict batch
    
    * Save load working
    
    * cold start
    
    * Python bindings
    
    * Tests working
    
    * Telemetry
    
    * Demo licensing
    
    * Input dim option
    
    * Fix include
    
    * Fix distributed
    
    * Fix verifyCanDistribute
    
    * Delete old udt
    
    * Add pickle
    
    * Fix exception check
    
    * Resolve comments
    
    * make auto sparsity more logical

commit d6dab61bdd10c1ec293550cd87a67dedd4149186
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Feb 24 16:38:46 2023 -0600

    Adding a python test to make sure we are running all python tests (#1234)
    
    * Adding a python test to make sure we are running all python tests
    
    * Formatting
    
    * Removing mark.integration and making the requested tests integration
    
    * Decreasing tolerance

commit 97fc7e54bd2321a6d49ab6621b135aefd2e793a0
Author: shubh@3ai <shubh@thirdai.com>
Date:   Fri Feb 24 11:48:49 2023 +0000

    Commit sparsity flags

commit 3c1ad86f97caf305a5f67164c29c2aa03c588413
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Feb 24 03:16:36 2023 -0600

    Fix Segfault (#1228)
    
    * Fix Segfault
    
    * cpp format
    
    * Fix arg= comment
    
    * Clear state
    
    ---------
    
    Co-authored-by: tharunkr24 <88212258+tharunkr24@users.noreply.github.com>

commit ae4a6491d8a1deb3af88791429a1098cceede669
Author: shubh@3ai <shubh@thirdai.com>
Date:   Fri Feb 24 07:16:07 2023 +0000

    permutes, flags for print, sparsity set mods

commit 50247f62a04fbc9d0c20f0d5bccd63d13eda59eb
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Feb 23 18:25:44 2023 -0600

    fix csv parser optional (#1233)

commit 7bef0cf091ebbada48ec73fb1fff3ca7787fc6ff
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Feb 23 16:41:32 2023 -0600

    Fix integer overflow in embedding layer (#1232)

commit 2a792329d064a8afd83b373ad911df8e5e08fe14
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Feb 23 11:53:40 2023 +0000

    fix unused

commit 1995c836ae7ff88a71109ad9319cc01534ae1795
Merge: 8a972f3d c5085f46
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Feb 23 11:53:14 2023 +0000

    Merge branch 'checker' into frequency_rerank_checker

commit c5085f46b5a8c5bd381fe87ea2759e4eb149e5a1
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Feb 23 11:43:20 2023 +0000

    whatever

commit 082c15a32bb9c20130ae178c1ec517a3021932c3
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Feb 22 17:07:47 2023 -0600

    new csv parser (#1223)
    
    * new csv parser
    
    * rearrange
    
    * format
    
    * rearrange
    
    * Handles malformed quotes
    
    * more tests
    
    * csv data source draft
    
    * simple tests
    
    * Remove CSV Data source
    
    * Resolved most comments
    
    * Changed some comments
    
    * Changed some comments
    
    * High level comment on state machine.
    
    * Removed old csv parser
    
    * don't remove commas from clinc
    
    * fix lint errors
    
    * fix test_udt_parquet?
    
    * fix test_udt_parquet
    
    * resolved Josh's comments

commit 9cdf964d1466e165c7840832dfc941dd4051c893
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Feb 22 15:28:03 2023 -0600

    Adding release tests before merge (#1229)
    
    * Adding release tests before merge
    
    * Copying a license file to the current directory for tests
    
    * Fixing comment
    
    * Installing go as well
    
    * Switching to port 8081
    
    * Trying ssh to diagnose problem
    
    * Use tmate instead of upterm
    
    * This should work
    
    * Formatting

commit 8a972f3dd292b0794ca34a042f4ffa76884e3891
Merge: cce25f83 c5956f04
Author: shubh@3ai <shubh@thirdai.com>
Date:   Wed Feb 22 17:55:37 2023 +0000

    Merge branch 'fix-segfault' of https://github.com/ThirdAILabs/Universe into frequency_rerank_main

commit c5956f048b60d3affe4d37f38c283d2514114e59
Author: Nicholas Meisburger <nmeisburger@gmail.com>
Date:   Wed Feb 22 10:07:13 2023 -0600

    Fix arg= comment

commit a0f866798d9f4eaca40a5434fed4608f26bbc002
Author: Nicholas Meisburger <nmeisburger@gmail.com>
Date:   Wed Feb 22 14:03:05 2023 +0000

    cpp format

commit 04bff6ac5d1faff53caf47c3d6e1352bd84378e7
Author: Nicholas Meisburger <nmeisburger@gmail.com>
Date:   Wed Feb 22 14:00:49 2023 +0000

    Fix Segfault

commit 3ee49f2fce8108c0eaafbad3513bbd7ed69ac24c
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Wed Feb 22 11:30:16 2023 +0530

    adding changes which should be trivial (#1226)
    
    This commit makes some trivial changes when requested_cpus_per_node is passed.

commit 2aa680b859c8783a1c364b8f3722364b652203a7
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 21 18:37:18 2023 -0600

    Benchmark features (#1224)
    
    * New runners and script
    
    * Fix benchmarks
    
    * Bolt and dlrm benchmarks working
    
    * Benchmarks working
    
    * Benchmarks working
    
    * Fix epochs

commit 072c5ec04c794c7d1631100bdaabed6e85208719
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Tue Feb 21 15:41:28 2023 +0530

    adds save context (#1222)
    
    Co-authored-by: Pratik Pranav <pratkpranav>

commit cce25f835831868598358ced49aea1864c03d003
Author: anshu <anshu@thirdai.com>
Date:   Mon Feb 20 13:10:05 2023 +0000

    remove utilss

commit 29e037290ade26f03f94f5808d2b93f91a7fc021
Merge: 83335717 25b07fe2
Author: anshu <anshu@thirdai.com>
Date:   Mon Feb 20 13:05:55 2023 +0000

    Merge branch 'main' of https://github.com/ThirdAILabs/Universe into frequency_rerank_main

commit 833357177a335aa9464722dd3b50794450344fad
Author: shubh@3ai <shubh@thirdai.com>
Date:   Mon Feb 20 12:50:36 2023 +0000

    no build hash tables

commit 25b07fe226dac23eaf05fb1569fff4bc1145628a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Feb 19 23:47:44 2023 -0600

    Specify input dim in UDT (#1217)
    
    * Specify input dim in UDT
    
    * Test

commit 8c025b610c779d76318cb75c4ab895d1c853f5e8
Author: Jerin Philip <jerin@thirdai.com>
Date:   Fri Feb 17 10:51:44 2023 +0530

    Improve MSVC compile (#1216)
    
    * /fpermissive- and enforce CXX17
    * Replace `and` with `&&` because MSVC

commit aa0a13529832d39919822dc3857ad08d6e05e0f7
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Thu Feb 16 20:54:29 2023 -0600

    Fixing UDT Wayfair Config  (#1215)
    
    * fix wayfair udt config
    
    * correct number of epochs

commit 5ec82cf7954023f10418730d3c3b0fb457e1e991
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Feb 16 14:39:09 2023 -0600

    print-offending-line (#1214)

commit 02fabbfbde9cdde30bf4dff431f92bc798fd10c6
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Thu Feb 16 13:36:10 2023 -0600

    Benchmarks-v2 for Bolt and UDT (#1188)
    
    * add bolt and udt configs
    
    * remove unnecessary file from pr
    
    * add generic bolt benchmark config class
    
    * fix python error
    
    * make configs a package with __init__.py
    
    * use json-style for deployment config instead of the deprecated deployment.ModelConfig API
    
    * fix python formatting
    
    * add another attribute for bolt config
    
    * nits
    
    * edit criteo dlrm config
    
    * Adding Runner Scripts (#1184)
    
    * initial commit
    
    * add dataset loaders to bolt benchmark runner
    
    * add wayfair dataset loader
    
    * add dlrm model
    
    * add mlflow callback
    
    * add udt benchmarks runner script
    
    * respond to PR comments and add more stuff
    
    * address pr comments
    
    * use runners
    
    * update pr
    
    * remove engine argument
    
    * fix python formatting
    
    * minor edits

commit cbdd18d3f2fbad8f581c749363f04e1d7aecad39
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Feb 16 11:50:57 2023 -0600

    Fix arg comments (#1213)

commit 5c2e6b1935bc4eb76ee4b7944e6ceb881d5df465
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Feb 15 16:22:28 2023 -0600

    Embedding layer avg reduction (#1211)

commit c8585a02927b823fbc520c88eeef8335d9e7f181
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Wed Feb 15 20:56:10 2023 +0530

    Update `black` and python code-formatting to match (#1210)
    
    Removes pin on black, and updates source formatting to match.

commit a2f3b3cd3239e6cfac55a8b5ef4faa994d6c56fa
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Feb 15 08:45:16 2023 -0600

    Embedding layer optimization  (#1199)
    
    * Embedding chunk size
    
    * fix experiment
    
    * Fix script
    
    * remove benchmarking script
    
    * rename chunk_size -> update_chunk_size
    
    * Add default update chunk size
    
    * Remove changes
    
    * Comment
    
    * Resolve comments
    
    * Resolve comments

commit 911f777a4257e74cda3005c8f2e8a118fec62136
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Wed Feb 15 17:57:23 2023 +0530

    double less than (#1209)

commit 6c6e1fa21e5e1076728bfff2bb73fe2ffdeda838
Author: Jerin Philip <jerin@thirdai.com>
Date:   Mon Feb 13 16:49:51 2023 +0530

    Supply cold-start delimiter externally (#1201)
    
    Cold-start delimiter was hardcoded to `,`. This changes it to be
    picked up from the calling-code, which is possibly aware of the
    delimiter in play for a given dataset.

commit 1368fb03afb7faac5d27dd0d3504f266968f06cf
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Feb 10 15:27:42 2023 -0600

    Fix bolt_v2 missing package (#1198)

commit ecd8b412a264ecafa0d47f2e4ac5e6889f392ad2
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Feb 10 12:55:55 2023 -0600

    Bolt v2 v2 (#1185)
    
    * Graph Structure
    
    * Forward and backward
    
    * Separate tensors into cc files
    
    * Reorganize sparsity in tensors
    
    * Batch processing methods in graph
    
    * Reset output gradients
    
    * Update parameters
    
    * Comments
    
    * Loss function comments
    
    * Names
    
    * Op schedule tests working
    
    * Fully connected op
    
    * Fix shared_ptr cycle
    
    * Verify input dimensions
    
    * Train on single batch method
    
    * Python bindings
    
    * Delete mocks
    
    * Rename ComputationGraph -> Model
    
    * Summary
    
    * Summary
    
    * Categorical cross entropy loss
    
    * Models working!
    
    * Rehash+rebuild in fully connected
    
    * Fix summary
    
    * Select labels in fully connected ops
    
    * Amazon 670k benchmark
    
    * Fix accidental include
    
    * Fix script
    
    * Fix output layer bug
    
    * Amazon 670k working
    
    * Add virtual destructor
    
    * Callbacks and Metrics interface
    
    * Metrics and losses and trainer.train
    
    * Trainer working
    
    * Loss Function Tests
    
    * Fully connected model tests
    
    * Tensor tests
    
    * Model exception tests
    
    * Trainer tests
    
    * Python test
    
    * More comments in trainer
    
    * Logging
    
    * Make ops graph independent
    
    * Label sampling
    
    * Cleanup naming and comments
    
    * Sparse output test
    
    * Remove sparsity type from input
    
    * add todo
    
    * Better summary
    
    * Cmake format
    
    * Python format
    
    * C++ format
    
    * Fix clang tidy
    
    * Fix dag summary test
    
    * Fix clang tidy
    
    * Fix include
    
    * amazon benchmark
    
    * remove file
    
    * Test parallel per op
    
    * Add bce
    
    * Add times to reported metrics
    
    * Fix names in metrics
    
    * Benchmark script
    
    * Benchmark script
    
    * Fix experiment name
    
    * Fix benchmark output sparsity
    
    * Fix benchmark output sparsity
    
    * fix naming
    
    * Fix name fn
    
    * fix wayfair data loader
    
    * Fix data return
    
    * Fix metric logging
    
    * Fix test
    
    * Create computation class
    
    * implement ops in new interface
    
    * update comments
    
    * Implement tensor
    
    * Update train code
    
    * Tensor tests
    
    * Computation order test
    
    * Fully connected model tests working
    
    * Invalid model tests
    
    * Loss tests
    
    * Trainer tests
    
    * Python bindings updated
    
    * Update benchmark
    
    * remove extra semicolon
    
    * Add timer
    
    * Resolve comments
    
    * Validate on batch
    
    * Make labels specified as placeholder in graph
    
    * Fix tensor tests
    
    * Remove benchmark file
    
    * fix clang tidy error
    
    * Core bolt v2 comments resolved
    
    * Python format
    
    * Last of the comments
    
    * rename validateOnBatch and return tensors on forward

commit ecce1d24b20f0066dcc0162ed234e58142a59ec5
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Feb 9 18:43:02 2023 -0600

    Removing the bolt.train demo licensing check entirely (#1197)
    
    * Somehow I missed that this still failed
    
    * Added by mistake

commit 5d2eed775fc2e5f092b28ab0f0cb7cde14753eba
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Feb 9 17:21:20 2023 -0600

    Fixing visibility problem (#1196)

commit 5bf34d27c2a3df1ba13298f49383ab6f9c5bcae1
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Feb 9 14:57:35 2023 -0600

    Fixing license checking bug (#1165)
    
    * Adding fine grained licensing object
    
    * Fix working
    
    * Adding comments
    
    * Adding udt generator test
    
    * Improving save load checking
    
    * Merging and cleanin up
    
    * CMake formatting
    
    * Responding to pr comments
    
    * Fixing nit
    
    * Fixing licensing unit test

commit d7afc146882f779c37b42618de3b569d041f14e5
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Feb 9 14:18:57 2023 -0600

    Coldstart test on product catalog (#1195)
    
    * add test
    
    * test working

commit 77bc55ce59b6073166e5c0ec8759f2be8cd5d128
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Feb 9 16:43:10 2023 +0530

    [Distributed] Fix max in memory (#1194)
    
    * Adds max-in-memory-batch to test
    
    * solves issue
    
    * moves around positional argument

commit b8f69f776a5a84d16012e962c1675217108dd48f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 7 22:29:06 2023 -0600

    Consistent config cipher (#1193)
    
    * Consistent config cipher
    
    * Remove imports

commit 5ca495e6948b6be98ae307704616c5b34e81ff8a
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Feb 7 20:54:43 2023 -0600

    Fix for cold start licensing (#1192)
    
    * Wrote file to column map function
    
    * Naming fixes
    
    * Fix cold start and tests
    
    * cpp format
    
    * Clang tidy fix
    
    * remove include
    
    ---------
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit ff963257793460db102950491149bb2ce203908b
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 7 16:45:06 2023 -0600

    Fix save/load bolt bug (#1191)
    
    * Fix save/load bolt bug
    
    * Bump version

commit 6d9652925a5995a4c0763729a46d2a9ce44b7a06
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Feb 7 09:16:15 2023 -0600

    bump 0.5.17 (#1189)

commit e4790dac32023b300e246fde1146b124216c8a4b
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 7 09:15:04 2023 -0600

    File checks in Model Config (#1190)

commit 117043d3f6e1c6127574babef9ceb0108a616e84
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Feb 6 21:20:14 2023 -0600

    make a release test into a unit test for the label embedding PR (#1187)
    
    * init
    
    * pytests
    
    * working test
    
    * rename to entity
    
    * string labels
    
    * nicks comments
    
    * pyformat
    
    * unit test
    
    * hotfixes
    
    * remove old tests

commit fd99ce87d10f799eb7601009365fdcb2054a9279
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Feb 6 19:08:01 2023 -0600

    UDT get_label_embedding (#1179)
    
    * init
    
    * pytests
    
    * working test
    
    * rename to entity
    
    * string labels
    
    * nicks comments
    
    * pyformat

commit 5c533cc956aad58a46c5cce3b5879e2eb6f3d016
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Feb 6 16:46:07 2023 -0600

    Fix regression dataset loading (#1186)
    
    * Fix regression dataset loading
    
    * Fix grpc ray issue

commit 3ae42d358731ae63d36848a5044d62621be33553
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Feb 3 16:12:02 2023 -0600

    Fix python format version (#1181)

commit af07c48500e6961d4eb1d9bb6c04a5e2b8f40d7f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jan 31 12:28:10 2023 -0600

    Fix deployment test on release (#1177)

commit 92322e00b7ee7603a121682a73de8d744e3c7417
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Tue Jan 31 13:12:20 2023 +0530

    [Distributed] DatasetLoader outside THIRDAI_EXPOSE_ALL (#1176)
    
    * moves DataLoader outside TIRDAI_EXPOSE_ALL
    
    * Need to expose shuffle config pybind for DataLoader to work

commit 73cab897b739384ad02628f16604312711047193
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Tue Jan 31 10:40:06 2023 +0530

    batch size (#1175)

commit 31e4056870193ea58bbaca52e2c007d1c596fe28
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Jan 30 16:13:31 2023 -0600

    Polishing coldstart api (#1173)
    
    * bump version
    
    * fix bug
    
    * py format
    
    * cpp foramt
    
    * fix builds
    
    * fix tests
    
    * const ref
    
    * facepalm
    
    * facepalm
    
    * last one?
    
    * phase 1: without rca adjustments yet
    
    * rename functions and cleanup
    
    * remove todo
    
    * reorder functions
    
    * reorder
    
    * NGramTextBlock
    
    * NGramTextBlock and builds now
    
    * split into .h and .cc files, add documentation, move from class to namespace
    
    * reorg and add unit tests
    
    * tests
    
    * logic update
    
    * move split into words to string manipulation
    
    * rename namespace
    
    * remove base value
    
    * shorten names for compute*
    
    * remove HashUtils class and place functions in namespace
    
    * includes and fixes for string manipulation
    
    * cmake format
    
    * fix builds and tests
    
    * remove part from old merge
    
    * add bigrams to UDT
    
    * pyformat and fix tests
    
    * resolve comments
    
    * fix
    
    * some comments
    
    * defaults, motivating comment, and add epochs/metrics to cold start method
    
    * fix pybind
    
    * documentation and other small fixes
    
    * add split tests
    
    * nicks comments
    
    * finish nicks comments
    
    * update error message
    
    * unit tests
    
    * typo
    
    * pyformat
    
    * remove added files
    
    * remove added files
    
    * Update auto_ml/python_bindings/AutomlDocs.h
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update auto_ml/python_bindings/AutomlDocs.h
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update auto_ml/python_bindings/AutomlDocs.h
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update auto_ml/python_bindings/AutomlDocs.h
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update auto_ml/python_bindings/AutomlDocs.h
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * remove cpp doc
    
    * joshs comments
    
    * josh comments part 2
    
    ---------
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>

commit 45d367d48d71242ef5712ff469414dd8ab7b7bac
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Jan 30 13:57:18 2023 -0600

    add bigrams to UDT (#1153)
    
    * bump version
    
    * fix bug
    
    * py format
    
    * cpp foramt
    
    * fix builds
    
    * fix tests
    
    * const ref
    
    * facepalm
    
    * facepalm
    
    * last one?
    
    * phase 1: without rca adjustments yet
    
    * rename functions and cleanup
    
    * remove todo
    
    * reorder functions
    
    * reorder
    
    * NGramTextBlock
    
    * NGramTextBlock and builds now
    
    * split into .h and .cc files, add documentation, move from class to namespace
    
    * reorg and add unit tests
    
    * tests
    
    * logic update
    
    * move split into words to string manipulation
    
    * rename namespace
    
    * remove base value
    
    * shorten names for compute*
    
    * remove HashUtils class and place functions in namespace
    
    * includes and fixes for string manipulation
    
    * cmake format
    
    * fix builds and tests
    
    * remove part from old merge
    
    * add bigrams to UDT
    
    * pyformat and fix tests
    
    * resolve comments
    
    * fix
    
    * some comments
    
    * add split tests
    
    * nicks comments
    
    * finish nicks comments
    
    * update error message
    
    * pyformat
    
    * remove added files
    
    * remove added files

commit 8b96cff53d80821e3c94f348cd55ac154fe01353
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Jan 30 13:32:46 2023 -0600

    Cleanup token encoding code and add Ngrams (#1144)
    
    * bump version
    
    * fix bug
    
    * py format
    
    * cpp foramt
    
    * fix builds
    
    * fix tests
    
    * const ref
    
    * facepalm
    
    * facepalm
    
    * last one?
    
    * phase 1: without rca adjustments yet
    
    * rename functions and cleanup
    
    * remove todo
    
    * reorder functions
    
    * reorder
    
    * NGramTextBlock
    
    * NGramTextBlock and builds now
    
    * split into .h and .cc files, add documentation, move from class to namespace
    
    * reorg and add unit tests
    
    * tests
    
    * logic update
    
    * move split into words to string manipulation
    
    * rename namespace
    
    * remove base value
    
    * shorten names for compute*
    
    * remove HashUtils class and place functions in namespace
    
    * includes and fixes for string manipulation
    
    * cmake format
    
    * fix builds and tests
    
    * remove part from old merge
    
    * some comments
    
    * add split tests
    
    * nicks comments
    
    * finish nicks comments
    
    * update error message
    
    * remove added files
    
    * remove added files
    
    * fix lint

commit 888abc09b1d64bc6c6c9a7ff470ad6aefe32a9ef
Author: Joshua Engels <josh@thirdai.com>
Date:   Sat Jan 28 11:10:47 2023 -0600

    Moving featurizers to cc files (#1171)
    
    * Moving featurizers to cc files
    
    * Formatting and removing extra includes
    
    * Moving blocks in

commit 6f339ab7b8c1a25b7e84fe94a531dff0b34abcfe
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Jan 27 19:46:31 2023 -0600

    Fix unused module (#1172)

commit 13f3963ad72afba19405b8ad63a3053d40d427cd
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Jan 27 17:01:23 2023 -0600

    Simplify model config (#1170)
    
    * Remove deployment config and create json model config
    
    * remove python tests
    
    * Tests and checks
    
    * Add config scrambling
    
    * Delete file
    
    * Add option tests
    
    * Comments
    
    * remove docs
    
    * Add args
    
    * Resolve comments
    
    * Cpp format

commit 38752c9e32bfd1dea6219729a6c23f9e3e53c323
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jan 27 12:07:14 2023 -0600

    Making BatchProcessor able to return m BoltVectors from n lines (#1167)
    
    * Fixing shuffle buffer and renaming batchprocessor to featurizer
    
    * Removing batch size from data source
    
    * Hunting down bugs
    
    * Hunting down bugs
    
    * Forgot to merge this
    
    * Found the bug
    
    * Cleaning up more bugs
    
    * Changing ShuffleBuffer to VectorBuffer
    
    * Adding comments
    
    * Fixing small bug
    
    * Fixing DataSource constructor bug
    
    * Changing GenericFeaturizer to TabularFeaturizer
    
    * Changing to loadAll and loadSome
    
    * Fixing VectorBuffer
    
    * Removing BoltBatch from Featurizer interface
    
    * Fixing bugs
    
    * Simplifying VectorBuffer interface
    
    * Adding comments and checks
    
    * Last pr changes
    
    * Fixing small bugs
    
    * Fixing typos

commit bf491b68a2b201ac36e70b54bd3b4df8cd5c6948
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Jan 25 13:56:36 2023 -0600

    Clean Up the Benchmarks Folder  (#1169)
    
    * remove mlm configs and flash benchmarks subfolder
    
    * remove text_classifier.py

commit 5d95bf468881146f28ec257c13f0c27b4ca64459
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 25 11:35:16 2023 -0600

    Beam Search for Seq Prediction (#1162)
    
    * Beam Search for Seq Prediction
    
    * Python test
    
    * Test and comments
    
    * Test comment
    
    * Return best sequences in order beam search
    
    * resolve comments
    
    * resolve comments
    
    * Fix arg in python test
    
    * Resolve comments

commit 1b26c816503cf56ac8071c6e633895f8c69c7d85
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Jan 25 10:05:09 2023 -0600

    Remove GCS Credentials Parameter Dependency from our Package (#1152)
    
    * remove GCS credentials parameter dependency from our training code
    
    * add more explanation for how loading csv files from gcs works using pandas.read_csv

commit 981c77dd513f04fb25c5dd9e63ded6cd82ef88e2
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jan 23 12:30:21 2023 -0600

    Cleaning up output of Generator (#1137)
    
    * Cleaning up output of generator when trained with unsupervised and supervised
    
    * removed supervised/unsupervised from prepare_query_reformulation in thirdai.demos
    
    * Fixing column index
    
    * Adding time to evaluate in Generator
    
    * Fixing wrong order for time subtraction
    
    * Adding an option to turn off supervised training and adding eval check
    
    * Responding to comments
    
    * Fixing typos
    
    * Forgot to update test

commit 617dcc3b1ed45815c04bdadc2f7788c5177be8d2
Author: Jerin Philip <jerin@thirdai.com>
Date:   Fri Jan 20 18:44:34 2023 +0530

    Make DatasetFactory unaware of modelling (#1159)
    
    DatasetFactory API exposes getInputNodes(), which is violation of
    access/encapsulation. Why should something related to dataset be aware
    of Input (the input-layer), which is part of the modelling?

commit 9006d5d18cd67a21f5a82149b7d59d6bb4b8704d
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Jan 19 18:11:32 2023 -0500

    add random salt to TabularHashFeatures to get a consistent output hash distribution (#1149)
    
    * random salt
    
    * refactor
    
    * fix comment
    
    * Update dataset/src/blocks/TabularHashFeatures.cc
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * resolve comments
    
    * fix build
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit 243622021c2139218a28a9cb7bd579c0ba5b9d66
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 18 19:26:19 2023 -0600

    Add verifyAllowedDatasets to TextClassifier (#1156)
    
    * Add verifyAllowedDatasets to TextClassifier
    
    * Fix definition error

commit 5d9f2101b0439e4000de1ce50f65bc640be855e1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 18 18:55:06 2023 -0600

    Bump version to 0.5.16 (#1157)

commit 448bcafeb00dee8e09f58cefa5a11ecc32bb5373
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Jan 18 15:06:56 2023 -0600

    Remove benchmark sanity check workflow (#1155)

commit 850270d28b66c9d30d9bbb28706f4b95ec81ba1d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 18 13:42:37 2023 -0600

    Optional metadata and allow missing labels (#1154)
    
    * Existing tests working
    
    * Remove file
    
    * remove files
    
    * remove files
    
    * Test
    
    * Resolve comments
    
    * Move to metric aggregator
    
    * Remove licensing test files
    
    * Remove licensing test files
    
    * Add rehash rebuild
    
    * Text classifier for CSDisco
    
    * Python bindings
    
    * Test on clinc
    
    * remove test file
    
    * python format
    
    * Clang tidy
    
    * Comments and check
    
    * Metadata -> uint32
    
    * Python tests
    
    * Resolve comments
    
    * Resolve comments
    
    * Add docs
    
    * resolve comments
    
    * Add error msg checks
    
    * Comment for epsilon in bce
    
    * Check for missing labels
    
    * -1 labels in bce
    
    * Make metadata source of truth for batch_size
    
    * Add error for decreasing offsets
    
    * Make metadata optional

commit ec334fcf31ce328420e68a1384edea912922b4f1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 18 13:13:50 2023 -0600

    Csdisco Classifier (#1145)
    
    * Existing tests working
    
    * Remove file
    
    * remove files
    
    * remove files
    
    * Test
    
    * Resolve comments
    
    * Move to metric aggregator
    
    * Remove licensing test files
    
    * Remove licensing test files
    
    * Add rehash rebuild
    
    * Text classifier for CSDisco
    
    * Python bindings
    
    * Test on clinc
    
    * remove test file
    
    * python format
    
    * Clang tidy
    
    * Comments and check
    
    * Metadata -> uint32
    
    * Python tests
    
    * Resolve comments
    
    * Resolve comments
    
    * Add docs
    
    * resolve comments
    
    * Add error msg checks
    
    * Comment for epsilon in bce
    
    * Make metadata source of truth for batch_size
    
    * Add error for decreasing offsets

commit eaac3c1cd208decfafe2162235cf6783002543b4
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Jan 18 16:47:06 2023 +0200

    add delimiter to UDT generator and the corresponding python bindings (#1151)

commit 8abf0874c20715c77a87494dbf9898eee510e60d
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Jan 17 09:56:17 2023 -0500

    [Bugfix][UDT] map::at error when target column not in data_types (#1139)
    
    * bump version
    
    * fix bug
    
    * py format
    
    * cpp foramt
    
    * fix builds
    
    * fix tests
    
    * const ref
    
    * facepalm
    
    * facepalm
    
    * last one?
    
    * fix tests

commit b6f14e784be22e9f7dc66c703a542168711d025d
Author: Jerin Philip <jerin@thirdai.com>
Date:   Tue Jan 17 18:15:58 2023 +0530

    Remove redundant indirection: UnaryBoltBatchProcessor (#1148)

commit 4b203ee230e82a9e6d68191f4831124599edd831
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Mon Jan 16 20:54:02 2023 -0600

    Log the error in failed demo notebooks (#1143)
    
    * Log the error in failed demo notebooks
    
    * Add exit code
    
    * Python formatting
    
    * Address PR comments
    
    * Remove stray code

commit b7feccc4ee53fef6d98305b574d5a7d6c7a23ed6
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jan 16 13:59:34 2023 -0600

    TrainOnBatch method in Bolt  (#1142)
    
    * Existing tests working
    
    * Remove file
    
    * remove files
    
    * remove files
    
    * Test
    
    * Resolve comments
    
    * Move to metric aggregator
    
    * Remove licensing test files
    
    * Remove licensing test files
    
    * Add rehash rebuild

commit 6466cfac9fa77b44e5f7a2126a8c07298a6bf314
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Jan 16 14:54:02 2023 -0500

    fix builds due to CI discrepancy (#1141)
    
    * fix builds
    
    * const ref
    
    * facepalm
    
    * last one?
    
    * please

commit 3596a5ecc607826b60ae2c613408ca703e75637a
Author: Jerin Philip <jerin@thirdai.com>
Date:   Mon Jan 16 10:40:18 2023 +0530

    Remove unused interface and templating in dataset (#1032)
    
    `InMemoryDataset<T>`; `T = BoltBatch`, we only require the specialized
    implementation.
    
    `DatasetBase` is near useless, if there need be an interface later on, perhaps
    build it without the confusing construct.

commit e7ccb477a48c76f299cd9f9caa521c83021d2eb5
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Jan 13 15:12:39 2023 -0600

    Refactoring tabular block (#1130)
    
    * new block interface + type aliases + column number map
    
    * block implementations except tabular hash
    
    * Generic batch processor gets native map input support
    
    * Blocks natively support explanations with map input
    
    * UDT uses explain with map input
    
    * tabular block gets it too
    
    * All refactored! Probably won't even build though!
    
    * removed unnecessary helper functions
    
    * It bUiLdS??? But got sigabrt
    
    * fixed produce metadata issue
    
    * simple udt tests passed
    
    * ay fixed... it's a "not"
    
    * column number to name
    
    * metadata checking
    
    * reorganize create batch with line input batch
    
    * fix errors, reorganize
    
    * reorganize
    
    * rename
    
    * revised prepare for blocks code
    
    * rename variable
    
    * major deletions
    
    * fix
    
    * move create batch impl closer to original position for easier review
    
    * reorganize to make reviewing easier
    
    * back to previous organization
    
    * builds!
    
    * naming and hopefully helpful convention comments
    
    * blocklist
    
    * shorter generic batch processor
    
    * interface instead of templates
    
    * remove print statements
    
    * less repetition
    
    * remove bad int include
    
    * build fix
    
    * format
    
    * fix failing test
    
    * fix build issue?
    
    * print
    
    * minor stuff
    
    * more comprehensive BlockList functionality
    
    * Generic Batch Processor makes use of block list functionality
    
    * remove more unnecessary functions
    
    * remove unnecessary error hcecking
    
    * Split up block interface
    
    * verify consistent col id
    
    * Renaming DataLoader to DataSource
    
    * Adding comment
    
    * Formatting
    
    * In progress
    
    * Fixing clang tidy error
    
    * Merged the first streaming dataset, now merging the next one
    
    * Tests passing, now just need to fix broken things
    
    * Fixing dim problem
    
    * Refactored ShuffleBatchBuffer
    
    * Forgot to reset the shuffle buffer
    
    * Fixing test problems
    
    * Fixing UDT distributed loader
    
    * mergededdd
    
    * fixed expected-num-columns
    
    * test_udt_tabular_return_metrics
    
    * remove that gitignore line
    
    * make column number map returns object instead of ptr
    
    * Moved constructor to .cc
    
    * Shorter comparison operator
    
    * Renamed TabularMetadata
    
    * Comments, renaming, change prepareForBatch to take in batch
    
    * Following the BlockInterface changes
    
    * Error checking + cleaning
    
    * follow change in blockinterface
    
    * comments
    
    * a lot of refactoring
    
    * formatting + COMMENTS
    
    * fix lint?
    
    * Refactor
    
    * Fixed dataset python
    
    * remove unnecessary includes
    
    * Remove redefinition
    
    * Fix merge issues from before
    
    * Fix merge issues from before
    
    * Fix merge issues from before
    
    * Resolved some comments
    
    * Move token struct to .cc
    
    * Resolved more comments, fixed saving problems
    
    * Removed ComputeBatchProcessor
    
    * cmath
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit eabf06b95cce196e59766e9275c69d6a923f86cb
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Jan 13 10:06:59 2023 -0600

    Col name data pipeline (merged with Josh's PR) (#1121)
    
    * new block interface + type aliases + column number map
    
    * block implementations except tabular hash
    
    * Generic batch processor gets native map input support
    
    * Blocks natively support explanations with map input
    
    * UDT uses explain with map input
    
    * tabular block gets it too
    
    * All refactored! Probably won't even build though!
    
    * removed unnecessary helper functions
    
    * It bUiLdS??? But got sigabrt
    
    * fixed produce metadata issue
    
    * simple udt tests passed
    
    * ay fixed... it's a "not"
    
    * column number to name
    
    * metadata checking
    
    * reorganize create batch with line input batch
    
    * fix errors, reorganize
    
    * reorganize
    
    * rename
    
    * revised prepare for blocks code
    
    * rename variable
    
    * major deletions
    
    * fix
    
    * move create batch impl closer to original position for easier review
    
    * reorganize to make reviewing easier
    
    * back to previous organization
    
    * builds!
    
    * naming and hopefully helpful convention comments
    
    * blocklist
    
    * shorter generic batch processor
    
    * interface instead of templates
    
    * remove print statements
    
    * less repetition
    
    * remove bad int include
    
    * build fix
    
    * format
    
    * fix failing test
    
    * fix build issue?
    
    * print
    
    * minor stuff
    
    * more comprehensive BlockList functionality
    
    * Generic Batch Processor makes use of block list functionality
    
    * remove more unnecessary functions
    
    * remove unnecessary error hcecking
    
    * Split up block interface
    
    * verify consistent col id
    
    * Renaming DataLoader to DataSource
    
    * Adding comment
    
    * Formatting
    
    * In progress
    
    * Fixing clang tidy error
    
    * Merged the first streaming dataset, now merging the next one
    
    * Tests passing, now just need to fix broken things
    
    * Fixing dim problem
    
    * Refactored ShuffleBatchBuffer
    
    * Forgot to reset the shuffle buffer
    
    * Fixing test problems
    
    * Fixing UDT distributed loader
    
    * mergededdd
    
    * fixed expected-num-columns
    
    * test_udt_tabular_return_metrics
    
    * remove that gitignore line
    
    * make column number map returns object instead of ptr
    
    * Moved constructor to .cc
    
    * Shorter comparison operator
    
    * Renamed TabularMetadata
    
    * Comments, renaming, change prepareForBatch to take in batch
    
    * Following the BlockInterface changes
    
    * Error checking + cleaning
    
    * follow change in blockinterface
    
    * comments
    
    * a lot of refactoring
    
    * formatting + COMMENTS
    
    * fix lint?
    
    * Remove redefinition
    
    * Fix merge issues from before
    
    * Fix merge issues from before
    
    * Fix merge issues from before
    
    * fix tests on push
    
    * test comment
    
    * resolved comments
    
    * Added better error handling
    
    * Fixing error handling in batch processor
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit 7188aae57929db2da384bbc8192305e3f15680e7
Author: shubh@3ai <shubh@thirdai.com>
Date:   Fri Jan 13 10:56:17 2023 +0000

    remove uint32.h

commit 4018f9da34650fbfaeb26e546609e6f40bbdf663
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Jan 12 16:09:34 2023 +0530

    switch case fix

commit 15eb9fba3ffc76df8c6c7c28183860f7f903b56c
Author: shubh@3ai <shubh@thirdai.com>
Date:   Thu Jan 12 15:33:59 2023 +0530

    Setup

commit f8516b3382cdc5f65bcce1038abd28978778ff75
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Jan 12 11:52:19 2023 +0530

    Improves Distributed Test RunTime on CI/CD (#1116)
    
    * Removed one redundant tests
    
    * duration->durations
    
    * removing some tests
    
    * running for juest one epoch
    
    * Revert "Removed one redundant tests"
    
    This reverts commit d61eee1cf7bd72041e77e457f5a595fd89e99d21.
    
    * Removing makes sense
    
    * Revert "removing some tests"
    
    This reverts commit 9fe2afc3b3c803df6e8f4ecc2a790a4d6170e907.
    
    * test_duration
    
    * removes extra line after test

commit 571870602318062d2721f1192eeb4c9cf9a771fd
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 11 22:27:00 2023 -0600

    remove print from data loading (#1135)

commit 3c7ce4e5c34f1b3053eef102502f88ca5993ac30
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 11 22:18:23 2023 -0600

    bump version to 0.5.15 (#1134)

commit 4d6b8896698db77f7038296e15316fafb71fb769
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 11 21:14:14 2023 -0600

    Index+hash target column always in generator (#1128)

commit 6a86280a67b9134a4f17116b317787ffd14aca29
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 11 18:38:47 2023 -0600

    Bump version (#1133)
    
    * Bump version to 0.5.14
    
    * Newline
    
    * remove accidental commited file

commit 6d28270de570ce05ee98b2083d43372c1b73dd10
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jan 11 17:35:50 2023 -0600

    Normalize Labels for Softmax in UDT (#1127)
    
    * Normalize Labels for Softmax in UDT
    
    * TODO

commit ede956de1abf531e5b7c93ebb757c078380bd0ed
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jan 11 17:32:09 2023 -0600

    Hiding imports that are behind THIRDAI_EXPOSE_ALL (#1131)
    
    * Hiding imports behind THIRDAI_EXPOSE_ALL
    
    * Fixing flaky test too

commit 17261b3a1f5ee8fc99cd8530882b08b20a2fe7c5
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jan 11 13:26:12 2023 -0600

    Creating single tabular dataset loader (#1108)
    
    * Renaming DataLoader to DataSource
    
    * Adding comment
    
    * Formatting
    
    * In progress
    
    * Fixing clang tidy error
    
    * Merged the first streaming dataset, now merging the next one
    
    * Tests passing, now just need to fix broken things
    
    * Fixing dim problem
    
    * Refactored ShuffleBatchBuffer
    
    * Forgot to reset the shuffle buffer
    
    * Fixing test problems
    
    * Fixing UDT distributed loader
    
    * Responding to comments
    
    * Making single concrete DatasetLoader
    
    * Fixing python
    
    * Fixing shuffle buffer
    
    * Responded to all comments
    
    * Fixing bugs
    
    * Removing Geordie's noble data pipeline guide
    
    * Fixing distributed tests
    
    * Responding to comments
    
    * Increasing fill size in buffer
    
    * Adding overflow check

commit 0d2e451990f5c10268f9cf502ca26d7c85e7801a
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Jan 11 12:54:29 2023 -0600

    Remove clinc and add yelp polarity to UDT benchmarks (#1122)
    
    * Remove clinc and add yelp polarity to UDT benchmarks
    
    * Python formatting

commit 1501270f1d654ba65a843bc79d52bdfd39977e49
Author: shubh@3ai <shubh@thirdai.com>
Date:   Wed Jan 11 15:28:34 2023 +0530

    Basic adder

commit 4a5154e963f85c2d5ea4f2a59600c0c494bae48f
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Wed Jan 11 12:57:56 2023 +0530

    Bump version to 0.5.13 (#1126)

commit 8ff90feb013bd672fcf667b9863dbbe6d7f58635
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Wed Jan 11 10:53:20 2023 +0530

    Generate Unsupervised training data for query reformulation (#1117)
    
    * Modify accuracy comparison in udt_simple test
    Add unsupervised data generator
    
    * Reset test_udt_simple

commit 3ccbbb0d0be822d7e71f399acaf7651d0ebaead7
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Jan 10 19:35:51 2023 -0600

    Adding license to udt generator (#1124)
    
    * Adding license to UDTGenerator
    
    * Adding a test

commit 05b4624ffc428f74e2ed84c107a14c97085a220f
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Jan 10 13:31:46 2023 -0600

    Fixing flaky tests (#1114)
    
    * Timing distributed tests
    
    * Removing avalanche timed test and ending heartbeat after tests
    
    * Fixing references to avalanch test

commit d65434b81f9ccfa2108994a6b7ae191ea31ba987
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Tue Jan 10 12:19:26 2023 +0530

    Return activations generator (#1109)
    
    * Add return_activations
    
    * Lambdas to AutoMLPython.cc, remove pybind from generator.h
    
    * Add docs for return scores, change return_act to return _scores
    
    * Refactor, remove return_scores from generator
    
    * Tuple Inference Fix, More comments, Refactor AutoML cc file
    
    * test fix

commit 809307b148f27a925816d43595f039adf89f14ef
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jan 9 14:43:00 2023 -0600

    Licensing server and client (#1094)
    
    * Initial commit
    
    * Connection to server working
    
    * Server code
    
    * Adding bin scripts
    
    * Sketchy tests working
    
    * Test working, but why does the required take so long?
    
    * Going to try on main
    
    * Removing test.py
    
    * Formatting
    
    * Formatting and fixing github actions yml
    
    * Fixing build problems
    
    * Better listening for server start
    
    * Adding multiple machine integration test
    
    * Adding more client server integration tests
    
    * All tests in place, just fixing fast timeout test
    
    * My tests found a real bug!
    
    * Small changes
    
    * Responding to pr comments
    
    * Fixing gitignore
    
    * Adding licensing to its own package
    
    * Cleaning up go
    
    * Responding to pr comments

commit 189896c4902e92d158079ca4f98b5608fc044a62
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Jan 9 14:30:09 2023 -0600

    Slack notifications on releases (#1112)
    
    * bump version
    
    * slack notif on releases

commit f4ce6359850eb7916aa2270976beb221c27074f6
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jan 9 11:59:52 2023 -0600

    Fixing query reformulation dataset (#1111)

commit 22bde1468a692b433dea3c933ca4abcf879de1b0
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jan 9 10:38:59 2023 -0600

    Throw exception if output dim is 0 (#1110)
    
    * Throw exception if output dim is 0
    
    * switch to runtime error
    
    * switch to nonzeros

commit 61efb3de6e344f98e18a9e60a1827f1470ae1e7b
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jan 6 18:06:09 2023 -0600

    Renaming DataLoader to DataSource (#1107)
    
    * Renaming DataLoader to DataSource
    
    * Adding comment
    
    * Formatting
    
    * Fixing clang tidy error

commit 144223fdf53946495647df3ef617e83436df4cbd
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Jan 6 17:24:31 2023 -0600

    Tabular Hash Block quick fix (#1054)
    
    * fix
    
    * Update dataset/src/blocks/TabularHashFeatures.h

commit ee06b62b168d4f8fa9afe97edeb316d38fcbdab3
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Jan 6 17:17:45 2023 -0600

    bump version (#1106)

commit 598c6211e3d625a7983415457958bf0e6ef6c5ae
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jan 6 16:16:47 2023 -0600

    Checking for too many columns as well in UDT (#1100)
    
    * Checking for too many columns as well
    
    * Allowing more columns than expected, but ensuring num columns per row is constant

commit ac641a9da33c0d6fb27f0bf9eda3f0024e38405c
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Jan 6 15:43:05 2023 -0600

    Callback for wayfair (#1102)
    
    * logic done
    
    * update documentation
    
    * python tests and logs
    
    * remove bad train call
    
    * remove empty test
    
    * remove docs
    
    * some small fixes of my own
    
    * more updates
    
    * Update bolt/python_bindings/CallbacksPython.cc
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/python_bindings/CallbacksPython.cc
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/src/callbacks/EarlyStopCheckpoint.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/src/callbacks/EarlyStopCheckpoint.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * rename metric values function
    
    * fix ternary and add helper functions
    
    * Update bolt/src/callbacks/EarlyStopCheckpoint.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/src/callbacks/EarlyStopCheckpoint.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * logging, fix test, and bolt epoch times dont round down to nearest second
    
    * revert bad update
    
    * eval to train steps rename
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit 91d13fb73b6659261366feb4086aab344dd79df2
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Jan 6 11:05:20 2023 -0800

    Query Reformulation Modifications (#1104)
    
    * Query Reformulation Modifications
    
    * Fix batch size
    
    * Add supervised/unsupervised to docs
    
    * Add comments to tests

commit f0c6a1aa85b3ee81002bb641c32e266f934ff246
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Jan 5 16:35:54 2023 -0500

    Add Wayfair udt benchmark (#1103)
    
    * add wayfair benchmark
    
    add model config and learning rate scheduler
    
    Updates to wayfair benchmark
    
    Add serialized udt config
    
    * Add learning rate scheduler
    
    * Python formatting
    
    * Fix formatting with updated black version
    
    * Serialize model config in the script
    
    * Fix typo
    
    Co-authored-by: Blaise Muhirwa <blaise@thirdai.com>

commit 7d11855c8a7fdfa0e31b9d43878b08d1b1b17fb4
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Jan 5 15:34:46 2023 +0530

    Adds Distributed Training to UDT (#1088)
    
    * done with basic
    
    * adding dataloader directly
    
    * added create  loader inside worker
    
    * Pickling UDTDatasetFactory
    
    * serialization working now
    
    * things are working now.
    
    * Added config FOR udt USING TRAIN_SOURCES
    
    * Added Freezing HashTables
    
    * initializing prediction threshold
    
    * Adding checks for train_sources
    
    * Clinc Test Added
    
    * removed crypto-cmake
    
    * added more function inputs to distributed and tests are passing
    
    * Added checks for integer_label!=1
    
    * checks added for the case where UDT is not supported for distributed training
    
    * added docstrings for function
    
    * Adds all documentations
    
    * Formatting
    
    * made get_model()->_get_model() set_model->_set_model()
    
    * added throw before std::invalid_argument
    
    * Revert "added throw before std::invalid_argument"
    
    This reverts commit fb1a680cb619d1ec0cf96284b5b8b4daa0115cc8.
    
    * added throw statement to std::invalid_argument
    
    * Revert "removed crypto-cmake"
    
    This reverts commit a55d1f8fe9a1284874e5422b94665c00cd46e40d.
    
    * degrades cryptopp-cmake
    
    * moved train_distributed function inside _distributed_bolt; added integer_target check for categorical target_type;
    
    * Removing ray[default] from install requires
    
    * checks for new model passed in setModel
    
    * solved some issues; default parameter in distributed, Ptr function calls
    
    * remove initialization to prediction_threshold
    
    * cleaning up functions
    
    * update parameter-name for setModel in ModelPipeline.h
    
    * Removes unnecessary callback import from ModelPipeline.h
    
    * removed _create_loader from thirdai.distributed.utils
    
    * Wrong conditional for checks in setModel
    
    * Python Formatting
    
    * Added thirdai.demos to tests for downloading training and test files
    
    * Python Formatting
    
    * Adds test for checkign failures
    
    * TraingConfig verbose and metrics after initialization
    
    * python formatting
    
    * Adding THIRDAI_EXPOSE_BLOCK around important function
    
    * comments restructuring
    
    * making tests less error prone; updating error statements;
    
    * Not a nice solution. Better would be passing Model Pipeline to DritributedTraningwrapper.
    Revert "Adding THIRDAI_EXPOSE_BLOCK around important function"
    
    This reverts commit 044699834ecb4df810139d6de8712a2b1ebe8b81.
    
    * THIRDAI_EXPOSE_ALL Block around BoltGraoh APIs; Solving one bug;
    
    * Added metrics and verbose to test
    
    * Cleaning up train function
    
    * cleaning up data_processor with adding load() abstract
    
    * Python-Formatting
    
    * remove redundant libraries
    
    * added some necessary imports
    
    * python-formatting
    
    * docstrings for DatasetLoader for distributed for easier usage later
    
    * Updates docstring for train_distributed
    
    * moved UDTDatasetFactory .h -> .cc files
    
    * some issue with static function

commit 01d3f144bf02cbbf2eea834ec29aa91376a2ff11
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jan 3 13:53:52 2023 -0800

    Remove noise when compiling with GCC (#1098)

commit 4b58832b60c86cdf9c5bc65018c5656cf8dce855
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sun Jan 1 02:18:35 2023 -0600

    Added ability to index new metadata (#1089)
    
    * works
    
    * fixed automl doc
    
    * Resolved David's comments and fixed potential bug

commit 68d38f7a9fccb7234b6f740835d48b53da88bdab
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Dec 30 17:47:01 2022 -0500

    Add mlflow to slack integration (#1096)
    
    * Add mlflow to slack integration
    
    * Python formatting
    
    * Add comment
    
    * Remove columns from slack message
    
    * Address PR comments
    
    * Small fix

commit 2d92b2f2dd1315c479af4fea755e0e50948f9e94
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Dec 29 14:37:36 2022 -0800

    Validation in UDT streaming (#1090)
    
    * Validation in UDT streaming
    
    * Comment

commit 336fbf9b9ffcb1efbcf9467fa6099765b6867dd8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Dec 28 19:46:01 2022 -0800

    Fix cereal in sampling config (#1093)

commit 0395f36f675a68910016e3b7f734aa694c9ca4e5
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Dec 28 15:16:39 2022 -0800

    Udt cold start (#1072)
    
    * Udt Cold Start
    
    * cold start working
    
    * Fix format and linter
    
    * Fix data loading
    
    * Cold start working
    
    * Resolve comments
    
    * Fix doc string

commit 89e0b57a36e57579a5071b0f53f7ed6981ba9e21
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Dec 28 12:02:34 2022 -0800

    Fix embedding layer updates (#1091)
    
    * Fix embedding layer updates
    
    * Fix serialization

commit 5bf280991434db09f6457a22e383632850b11c69
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Dec 28 16:01:46 2022 -0400

    remove todo from bolt forward pass (#1092)

commit e220db6a6116e58433087f83c1054316d5e5447b
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Dec 22 12:03:25 2022 +0530

    Use set(..) instead of option(...) to configure prometheus (#1086)
    
    We want testing disabled for prometheus - possibly to avoid google-test conflicts.
    This is currently attempted to be done using option(....) instead of set(...).
    This leads to an error in certain machines, with conflicting builds showing up.

commit e51d2c0dd999a78dec01b7621fa47ed62bce7df8
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Dec 22 10:32:54 2022 +0530

    Move large definitions from headers to source-files (#985)
    
    .cc files are more amenable to compilation speed gains using tools like
    ccache - which our source code is getting ripe for. This change moves a
    bunch of definitions currently in headers in bolt-core to source-files.
    A large chunk of code here is move of .h in the core library to .cc
    files.  Since instrumentation has revealed that template work from
    cereal is a source of compilation slowdowns, this PR also attempts to
    move some cereal related things into .cc files. This is done using a
    follow the compiler error and fix approach.
    
    Doing explicit instantiations require operating similar to cereal's docs
    on the pimpl idiom.

commit a7e37093bff691c7e8d8301a3f1612b882d57c85
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Dec 21 10:42:17 2022 -0600

    Moving keygen demo test to use small census dataset (#1085)
    
    * Moving keygen demo test to use small census dataset
    
    * Removing the created file

commit 0848d98fdc192fb3a5efa7b34a49d318899ed159
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Dec 20 17:57:45 2022 -0600

    Adding input validation to numpy sparse dataset, adding htop and tmux to Dockerfile (#1083)
    
    * Changes working
    
    * Removing extra change

commit 31c70ac8500ac171b5fbd7c21929e554bf4b1c95
Author: Jerin Philip <jerin@thirdai.com>
Date:   Tue Dec 20 09:14:38 2022 +0530

    Wheel build improvements and fixes (#1078)
    
    1. Updates cryptopp-cmake to a more recent version (there are some cross
       compile improvements).
    
    2. Tries to compile OpenSSL from source so currently broken M1 wheel
       builds via cross-compilation are functional.
    
    3. numpy update has broken tests - this changes ==1.23.5 to <=1.23.5
       until the numpy deprecation issue fixes propagate.
    
    The OpenSSL compilation from source is adapted from
    https://github.com/viaduck/openssl-cmake (MIT license). The
    original cross-compilation path for android is repurposed for M1 wheel.
    Built wheels are tested on local system (as they cannot be tested on
    CI).

commit 2eba374c9dabb3d04901730ab2b843adba33ccf0
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Dec 19 17:29:56 2022 +0530

    Flattening gradients (#1077)
    
    * GradientReference Added
    
    * added gradient sharing flag
    
    * logic added for embedding layers
    
    * Solve some issues
    
    * Python Bindings for gradient reference
    
    * Changes in Python Done
    
    * Passing the tests
    
    * Formatting
    
    * Added comments to Gradient Reference
    
    * Added class description
    
    * Updated comment for needGradientSharing
    
    * adding gradients flattening
    
    * remove redundant flatten command
    
    * removing redundant arfument
    
    * circular communication & python test fixed
    
    * added argument in mock node
    
    * clang tidy :(. Should pass now.
    
    * Resolved all nit comments
    
    * removing redundant print
    
    * Made functions more definitive
    
    * some comments about the distributed test changes
    
    * Dynamic Casting Checks
    
    * compilation issues
    
    * Changed function name from snake case to camel case
    
    * change name to camel case in bindings
    
    * change function name as per suggestion
    
    * comments updated

commit fd8ef2a08fe99bea437064697d98fecd26bdd058
Author: Jerin Philip <jerin@thirdai.com>
Date:   Mon Dec 19 17:04:22 2022 +0530

    Pin numpy to 1.23.5 (#1082)

commit f70b930fe7fea6bec6c5a323654568826f4c84e5
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Dec 16 18:39:59 2022 -0600

    Using beefy runners to get CI time < 20 min (#1080)
    
    * Testing
    
    * Trying different words
    
    * Those words worked, adding to all runners
    
    * Only running big runner on linting
    
    * Formatting
    
    * Fixing parallelism bugs
    
    * Parallilizing c++ tests
    
    * Decreasing parallelism to 8
    
    * Speeding up only asan tests
    
    * Responding to comments
    
    * Cleaning up lint.py

commit a8c53eb4734145a4b7da05f97d23ec4ab6927186
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Thu Dec 15 17:52:11 2022 -0600

    change version to 0.5.10 (#1079)

commit 3ea31bf205d5fee9d2b86851ba84351b7c867fa5
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Thu Dec 15 17:51:36 2022 -0600

    Fix Release Tests (#1081)
    
    * change pandas version
    
    * use pandas 1.2.0
    
    * use pandas>=1.2.0
    
    * skip cpython 3.6
    
    * skip cpython 3.6

commit d46f60d4722777e627529f80737ccba83eb274c0
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Thu Dec 15 02:04:19 2022 -0600

    Add a CSV Data Loader in the Dataset API (#1058)
    
    * add a google cloud storage data loader
    
    * add a gcs data loader
    
    * expand class description for GCSDataLoader
    
    * remove unnecessary function in udt modifications
    
    * add unit test for gcs
    
    * edit udt modifications
    
    * add necessary libraries in setup.py
    
    * restore S3 data loader due to a benchmark svm benchmark test
    
    * edit unit test
    
    * fix unit test
    
    * resolve merge conflicts
    
    * address pr comments
    
    * remove svm formatted datasets from bolt benchmark configs
    
    * fix benchmark test
    
    * update udt docs
    
    * clean up s3 csv loader unit test

commit e9829edd8cffcf80e7e894843838207d2321df01
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Dec 13 15:16:53 2022 -0600

    Hotfix to fix OpenSSL problems (#1076)
    
    * Trying to statically link libs
    
    * Just build one wheel for speed
    
    * Trying this
    
    * Now need to see if mac is fixed
    
    * Keeping change that worked
    
    * Removing arm build and bumping version

commit 4ef3a1e9d581feb3f3999e2394e4481d9d5080b2
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Dec 12 18:09:12 2022 -0600

    Adding infrastructure to create licenses good for just one demo (#1070)
    
    * This should work in theory
    
    * Fixing small bug
    
    * Entitelments working now
    
    * Now just need to get test working
    
    * Copying everything into one file
    
    * Census working
    
    * Everything migrated
    
    * Fixing more tests
    
    * This should work in theory
    
    * Fixing small bug
    
    * Entitelments working now
    
    * Now just need to get test working
    
    * Working with Census license!
    
    * Cleaning up
    
    * Prepraring for merge
    
    * Responding to more comments
    
    * Adding pragma once
    
    * Fixing compilation errors
    
    * Adding memory to DataLoader header file

commit bdbfcbd59c07d2944df0f20663c85b67a8a15bc2
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Dec 12 16:45:44 2022 -0600

    Consolidating download utils into Universe (#1069)
    
    * Copying everything into one file
    
    * Census working
    
    * Everything migrated
    
    * Fixing more tests
    
    * Adding seed to dataset downloads
    
    * Moving dataset imports into functions
    
    * Responding to first 2 comments
    
    * Responding to more comments
    
    * Reverting unneeded changes
    
    * Fixing os.remove problem
    
    * Fixing up wrappers

commit 8c8c5f19b9e77c0856f395e958bd7b74f75b8f63
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Dec 12 16:01:21 2022 -0600

    Parallelize threshold (#1073)

commit ed94d0b5c27a47214ed32c2e3f3958ad6733dad9
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Dec 12 15:44:33 2022 -0600

    Cleanup Progress Bar Output (#1074)

commit c692c850853bedc68179236eb290e0bbe016bf5a
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Dec 12 15:29:20 2022 -0600

    added return metric dict option (#1065)
    
    * added return metric dict option
    
    * fixed wrong argname
    
    * missing import
    
    * Fixed evaluate comment

commit 26c181ac5badfed7203719e0ac44ec877aa73830
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Dec 12 09:52:38 2022 -0600

    Bump version to 0.5.8 (#1075)

commit b66470ae94d921ab64d7496de37bbd90763853fe
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Dec 12 09:43:09 2022 -0600

    Refactor dataset loader (#1071)
    
    * Remove preprocess
    
    * Cleanup use of data loaders in train/evaluate

commit 4d2473efa25b17483072e8afb50e4709177a762d
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sat Dec 10 13:10:16 2022 -0600

    variable alpha for f measure (#1066)
    
    * variable alpha for f measure
    
    * change to f beta

commit 871f7767be3faf19e801951161514661f51bdfd8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sat Dec 10 12:25:59 2022 -0600

    Udt recursive prediction (#1056)
    
    * Remove python wrappers from model pipeline and UDT
    
    * Output processing
    
    * Delete unused constructor
    
    * Select optimal threshold for binary classification
    
    * Fix C++ test
    
    * Add return class name option
    
    * Use categorical threshold for multiclass
    
    * Integrate thresholding
    
    * Return class test
    
    * Comments
    
    * Resolve comments
    
    * Cpp format
    
    * Resolve comment
    
    * format
    
    * Comments
    
    * Fix include
    
    * comments
    
    * Fix serialization
    
    * Fix docs
    
    * Binary classifier test
    
    * Resolve comments
    
    * Improve comments
    
    * Move udt to CC file
    
    * Use options in UDT
    
    * Recursive predictions in UDT
    
    * Unit test
    
    * Merge
    
    * Fix string categories
    
    * Resolve comments
    
    * Resolve comments
    
    * Add virtual destructor
    
    * Resolve comments
    
    * Fix test

commit f5ad4a0fe69bab80d9cd162280f4c5e612c1d832
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Dec 9 10:55:14 2022 -0600

    more deterministic (#1068)

commit d498e337102a0de58816ab623ac71ad40052e3c3
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Dec 8 11:28:26 2022 -0600

    Add Weekly Benchmarks for UDT (#1049)
    
    * Add first version of udt benchmark scripts
    
    * Renaming some classes
    
    * Python formatting
    
    * Add mlflow callback
    
    * Update actions config
    
    * Change action to run on push temporarily for testing
    
    * Modify actions file
    
    * Revert to old branch
    
    * Change data path
    
    * Remove callback from eval
    
    * Rename eval metric
    
    * Revert to old evaluation
    
    * Change criteo num_epochs to 1
    
    * Address PR comments

commit ba6debcdcad7faaf8a2d6d59b1f508c46306e109
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Dec 8 11:05:32 2022 -0600

    Callbacks docs (#956)
    
    * Remove unused things from public release
    
    * Add logo to docs
    
    * Add logo to docs
    
    * Internal + public docs
    
    * Fix gh action
    
    * Public docs ready
    
    * Test github actions
    
    * Fix yml file
    
    * Use pip3 for build
    
    * Fix gh action
    
    * Push html only
    
    * Add nojekylll so docs works
    
    * change to on release
    
    * Fix pybind def
    
    * Rename sync-docs to sync-internal-docs and merge
    
    * Resolve comments and update bolt.models
    
    * Run action one last time
    
    * Remove last actions
    
    * Create experimental submodule
    
    * expose all
    
    * update early stop checkpoint docs and put callbacks interface behind expose all
    
    * Disable experimental submodule in release
    
    * Add experimental to internal docs
    
    * Fix experimental import
    
    * Fix release tests
    
    * Hide model.summary
    
    * Run on for latest release
    
    * Fix pipeline docs
    
    * callbacks docs
    
    * update conditional macro
    
    * condition marco
    
    * fix merge
    
    * bogus changes
    
    * remove endif
    
    * Update bolt/python_bindings/CallbacksPython.cc
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * nicks comments
    
    * comment
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit 95afb8294ebc859dc631ef6708ea82dc7714dffe
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Dec 8 21:57:41 2022 +0530

    Separation for Pandas Column Mapper (#1067)
    
    * added separation to pandas column mapper
    
    * Format Code

commit be37fc59e386cfa883a10f8b801b660c02ce2a48
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Dec 7 15:30:39 2022 -0600

    Fix output dim of embedding layer (#1064)

commit 68171dc47c2ea263bbd4fbdd26b13d50b56f8203
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Dec 7 13:03:58 2022 -0600

    Move udt to cc file (#1055)
    
    * Remove python wrappers from model pipeline and UDT
    
    * Output processing
    
    * Delete unused constructor
    
    * Select optimal threshold for binary classification
    
    * Fix C++ test
    
    * Add return class name option
    
    * Use categorical threshold for multiclass
    
    * Integrate thresholding
    
    * Return class test
    
    * Comments
    
    * Resolve comments
    
    * Cpp format
    
    * Resolve comment
    
    * format
    
    * Comments
    
    * Fix include
    
    * comments
    
    * Fix serialization
    
    * Fix docs
    
    * Binary classifier test
    
    * Resolve comments
    
    * Improve comments
    
    * Move udt to CC file
    
    * Use options in UDT
    
    * Fix regression tests
    
    * Merge (missed one)
    
    * Fix merge

commit d2e8989bfacbcdb1f16d4050961137763bd95bf5
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Wed Dec 7 12:43:10 2022 +0530

    [Distributed] num_omp_threads is always equal to requested number of CPUs (#1063)
    
    * Make sure num_omp_threads is always equal to requested number of CPUs
    
    * num_omp_threads need to be string

commit ccdb71d0a21413241bdc2f5f6205bf7c4765b256
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Dec 6 22:24:11 2022 -0600

    Adding Keygen licensing option (#1052)
    
    * Work in progress
    
    * Creating new structure for licensing files
    
    * Need to switch to a client with http support
    
    * Trying to use cpr
    
    * Everything working up to verification now
    
    * I'm so close to getting this to work
    
    * Working now!
    
    * Starting to clean up
    
    * Much cleaner now
    
    * Formatting
    
    * Starting to switch to submodules
    
    * Formatting cmake
    
    * Testing of licensing working and done
    
    * Adding pragma once
    
    * Fixing tests and the create signed license script
    
    * Trying to install openssl
    
    * Fixing script to try again
    
    * Fixing environment var names
    
    * More changes to try and get wheels working
    
    * Using correct linux openssl command
    
    * Responding to first batch of comments
    
    * Making the rest of the requested changes
    
    * Formatting python
    
    * Fixing wheels.yml and fixing clang tidy error (don't know why it happened now)
    
    * Fixing multiple lines command
    
    * Using correct version of openssl
    
    * This will hopefully work
    
    * This will hopefully work v2
    
    * Removing keygen branch from wheel building
    
    * Responding to pr comments

commit ab24237f5b26098b5a87e2c411e63a25231ed52e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Dec 6 20:45:12 2022 -0600

    Bump version to 0.5.7 (#1061)

commit 9ebe300962d879567ac50947d839e759fa50765c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Dec 6 20:29:25 2022 -0600

    Udt binary classification threshold (#1051)
    
    * Remove python wrappers from model pipeline and UDT
    
    * Output processing
    
    * Delete unused constructor
    
    * Select optimal threshold for binary classification
    
    * Fix C++ test
    
    * Add return class name option
    
    * Use categorical threshold for multiclass
    
    * Integrate thresholding
    
    * Return class test
    
    * Comments
    
    * Resolve comments
    
    * Cpp format
    
    * Resolve comment
    
    * format
    
    * Comments
    
    * Fix include
    
    * comments
    
    * Fix serialization
    
    * Fix docs
    
    * Binary classifier test
    
    * Resolve comments
    
    * Improve comments
    
    * Resolve comments

commit d78d8c4c8c06d5f470563d7530e5f7bf412160f1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Dec 6 19:08:15 2022 -0600

    Fix clang tidy (#1059)
    
    * Fix clang tidy
    
    * Fix version
    
    * Fix version
    
    * Fix clang tidy errors
    
    * Fix clang tidy
    
    * Fix clang tidy
    
    * fix error

commit 6e2f3c646feae42484929fca04481ff70ec91179
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Dec 6 15:27:35 2022 -0600

    Return floats directly in regression (#1057)

commit 77e9cba524ac2fe06f445b0355c41a10a8828894
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sat Dec 3 22:36:48 2022 -0500

    no more error if same option as default (#1031)
    
    * no more error if same option as default
    
    * make case insensitive

commit 647f13931148f6f2e1f859027088f0c4150d049d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sat Dec 3 12:06:20 2022 -0600

    Integrate python with ModelPipeline and improve output processing (#1050)

commit 8c209253455e2867f4c4fd4d7770246a148c66a5
Author: Ben Coleman <112981068+bc3ai@users.noreply.github.com>
Date:   Sat Dec 3 11:57:04 2022 -0600

    Data augmentation for text multi-classification problems (#1014)
    
    * Data augmentation for text multi-classification problems
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit b8a69d0a716f235c212ae6612a880ae819780568
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Fri Dec 2 15:21:22 2022 -0600

    Progress Bar for Flash  (#1028)
    
    * add progress bar to flash
    
    * fix build issue
    
    * address pr comments
    
    * add default values for dataset size
    
    * fix cpp linting
    
    * fix linting
    
    * resolve more pr comments

commit 51ca2cfa57cde0668828acd78151b28f0e0aa325
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Nov 30 17:55:10 2022 -0600

    Adding prometheus client and tracking bolt metrics (#1023)
    
    * Basic metrics
    
    * Metrics kind of working
    
    * Metrics working
    
    * All metrics added, now need tests
    
    * Cleaning up prometheus client
    
    * Moving to cc file
    
    * Exposing start and stop metrics server
    
    * Metrics tests can now see data
    
    * Test passing!
    
    * Adding tests for starting and stopping metrics
    
    * Removing extra file
    
    * Cmake format
    
    * Renaming metrics to telemetry
    
    * Removing uneeded cmakelists
    
    * Moving more stuff to cc file and changing more metrics to telemetry verbage
    
    * Adding batch prediction counter
    
    * Adding explanation of metrics test
    
    * Adding back utils cmake
    
    * Getting rid of all metrics
    
    * Fixing typo

commit bdcb3cf4ec6aee9b7ae2b8e15ccab3664a90337a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Nov 29 15:15:08 2022 -0600

    Move Bolt + AutoML code to separate cc files (#1046)
    
    * Cleanup automl python bindings
    
    * Move generator test and udt types to automl
    
    * DatasetContext.cc
    
    * Node.cc
    
    * InferenceOutputTracker.cc
    
    * All nodes -> *.h + *.cc
    
    * Other dag stuff
    
    * Last few bolt files
    
    * format
    
    * Loss function cc and move cereal to cc for bolt nodes
    
    * Resolve comments
    
    * Deployment cc files
    
    * Fix cereal
    
    * Fix clang tidy

commit 06d8190572d3d37c3016b1e96f8edebc7ab017d4
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Nov 29 09:44:19 2022 -0600

    Cleanup automl python bindings (#1036)
    
    * Cleanup automl python bindings
    
    * Move generator test and udt types to automl
    
    * Resolve comments

commit 2edf8ac2cca9ac064d81ea7734626bd7af19f6df
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Tue Nov 29 11:35:46 2022 +0530

    [Distributed]Id for distributed wrapper (#1043)
    
    * Added id into Distributed Training Wrapper
    
    * Formatting
    
    * updated submodules
    
    * Forcing main cryptopp-cmake
    
    * Formatting
    
    * forcing again
    
    * Solved some bugs
    
    * Comments for worker id
    
    * Formatting

commit 7709a4665706288e9d06a7bc667db49d9b34e552
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Nov 28 20:11:45 2022 -0600

    version 0.5.6 bump (#1047)

commit 27c7d816c17128bfe712c1154fe0d90d3dd5c6bd
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Nov 28 20:08:06 2022 -0600

    Actual parquet inference (#1048)

commit f4cdf893eea80d3a619b426e5dca8cc167a18bdb
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Nov 28 14:07:29 2022 -0600

    Adding default of building without python dependencies (6x speedup when already built) (#1044)
    
    * Adding a default of building without dependencies
    
    * Adding back in correct call to pip install

commit 618b0f66e8c732eb710681d1a1d23aed212d9c47
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Nov 28 19:10:13 2022 +0530

    Serialize SaveContext (#1042)
    
    * added serializatino to execution config
    
    * Formatting
    
    * removed
    
    * formatting

commit 2fdc6d835ca547d02a5b97a9e24acbf75fa5c7a1
Author: Jerin Philip <jerin@thirdai.com>
Date:   Mon Nov 28 09:56:18 2022 +0530

    Move inline from Metric.h header to source file

commit c2ad21d9044226815cab8d073afce89735fd9500
Author: Jerin Philip <jerin@thirdai.com>
Date:   Fri Nov 25 10:27:03 2022 +0530

    Add CategoricalCrossEntropy (Metric) (#849)
    
    Adds CategoricalCrossEntropy to the available metrics in tracking.
    Currently there is only MSE and Categorical Accuracy as proxy, while the
    optimization objective for classification is Categorical Cross Entropy.
    
    There are scenarios where y_i * log( p_i) can go to -inf (p_i = 0). To
    avoid this, we use y_i * log( p_i + EPS), where EPS = 1e-7.
    
    Also adds unit-tests for CategoricalCrossEntropy Metric.
    
    Minor: 0.0f to 0.0F to fix linter errors.
    
    See: TSK-575

commit 5c45273f964ec956c2e12599a3f21bfe9d77bde8
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Nov 24 18:29:56 2022 +0530

    [Distributed] Reading whole file (#1026)
    
    * added code
    
    * Python Formatting
    
    * Added comments

commit 50781f7ea38b6581f9125f4a97d75b139aad5779
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Nov 23 15:07:56 2022 -0600

    Version bump to 0.5.5 (#1039)

commit 39816caf90e1a4fc4a34fc275faf8e9dfb0588ab
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Nov 23 15:06:42 2022 -0600

    Adding Parquet support to UDT (#1037)
    
    * Seems to be working now, just need tests
    
    * Moto giving me trouble, will need to test manually
    
    * Trying to determine parquet problems
    
    * Parquet parsing working, fixing small udt bugs
    
    * Test for parquet working
    
    * Adding comments in wrappers
    
    * Forgot to add parquet test
    
    * Adding comments

commit ebd7de74d34b235b40265cdb9726ce60d1518b69
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Nov 23 12:13:21 2022 -0600

    Adding fast build without cereal polymorphism flag (#1038)

commit a66b93de7519430ea80e906a1a5037edfe4a1b90
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Nov 22 22:21:14 2022 -0600

    Delete mac-action (maction) (#1034)

commit 192a18950d028a0e2ca63a999d2ad22cbb402eaa
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Nov 22 15:59:03 2022 -0600

    Reorganize automl directory (#1035)
    
    * Train with kwargs
    
    * Use train/eval in model pipeline only
    
    * python format
    
    * Remove eval config from UDT
    
    * Remove commented line
    
    * Fix fix python test
    
    * Moved the files
    
    * changed namespace
    
    * cpp format
    
    * use data namespace
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit f663e43beecdb137e70310ecc5e5377c4596a3f9
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Nov 22 13:34:57 2022 -0600

    Remove train config and eval config from UDT and add validation (#1029)
    
    * Train with kwargs
    
    * Use train/eval in model pipeline only
    
    * python format
    
    * Remove eval config from UDT
    
    * Remove commented line
    
    * Fix fix python test

commit 858e1656b96ee60950f8726feb4e3f8834bba8a3
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Nov 22 12:26:25 2022 -0600

    UDT Model Override (#1033)
    
    * UDT Model Override
    
    * Update docs
    
    * Resolve comments
    
    * Fix doc

commit 9bba1f4d1a187f1ce9d3e6a7e3461623df0ab781
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Mon Nov 21 19:08:30 2022 -0600

    Freeze jupyter dependencies for notebook actions (#1030)

commit e81280ca3438d5e55164a21aa81c00195927b357
Author: Jerin Philip <jerin@thirdai.com>
Date:   Mon Nov 21 12:44:45 2022 +0530

    Create BoltDataset via Python (#1007)
    
    See: TSK-824

commit b45fc441f86e73bdcc8e2bef4b75f72478da2396
Author: Joshua Engels <josh@thirdai.com>
Date:   Sun Nov 20 22:39:27 2022 -0600

    Removing windows wheel and bumping version (#1025)
    
    * Removing windows wheel and bumping version
    
    * We actually don't need to bump version

commit f47f38affe2de18931fab79af99bebf3cb48ec57
Author: Joshua Engels <josh@thirdai.com>
Date:   Sun Nov 20 22:19:33 2022 -0600

    Version bump (#1020)

commit 18962fc7ebc77acffb46bc85168076c959ba3b61
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Nov 20 22:15:27 2022 -0600

    Udt output processing (#1024)
    
    * Regression categorical block
    
    * Label block for regression in UDT
    
    * Fix radius
    
    * Soft threshold and make n_unique_classes optional for regression
    
    * Regression output processing
    
    * tests
    
    * basic test
    
    * Regression python tests
    
    * Remove test script
    
    * python format
    
    * Resolve comments
    
    * remove model pipeline

commit b7c75522dc35773d495dee5e67eb612c90ced3a1
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Nov 18 17:47:48 2022 -0600

    better error message for when tracking columns are not provided (#1022)

commit 42309ed1bfe7d5581babd5b80a8476726d90f074
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Nov 18 16:29:45 2022 -0600

    Udt Regression (#1010)
    
    * Regression categorical block
    
    * Label block for regression in UDT
    
    * Fix radius
    
    * Soft threshold and make n_unique_classes optional for regression
    
    * resolve comments

commit 8763a9cb761b5b4443ef297e48562fd44a66a7fb
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Fri Nov 18 15:58:09 2022 -0600

    Allow UDT Generator to Take Column Names instead of Indices (#1005)
    
    * add support for mapping column names to indices
    
    * remove filename from UDT constructor
    
    * fix python test
    
    * fix another test
    
    * address pr comments
    
    * change source_column_name to source_column in the bolt submodule
    
    * refactor the code
    
    * update docs

commit 0039f29ba9647ed4d928f1f1a6346673e239c591
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Nov 18 15:08:44 2022 -0600

    Add cleanup step to self-hosted github actions (#1021)
    
    * Add step to delete working repo from self hosted runner before executing job
    
    * Add clean up step from built-in action
    
    * Add built-in cleanup to all self hosted actions
    
    * Fix spacing
    
    * Remove stray comment
    
    * Small formatting change

commit 834e28a017fb6ffe4ce02e0b5e5a18b07eeae904
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Nov 18 12:47:53 2022 -0600

    add tabular unigrams to new data pipeline (#1011)
    
    * rename to tabularhashfeatures
    
    * unigram option for tabularhashfeatures
    
    * move around tests and add one for tabular unigrams
    
    * bool
    
    * move files back
    
    * rename bool
    
    * rename
    
    * fix test
    
    * remove deps
    
    * Update new_dataset/python_tests/dataset_utils.py
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update new_dataset/python_tests/dataset_utils.py
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update new_dataset/python_tests/dataset_utils.py
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update new_dataset/python_tests/dataset_utils.py
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update new_dataset/python_tests/dataset_utils.py
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update new_dataset/python_tests/dataset_utils.py
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * Update new_dataset/python_tests/test_tabular_hash_features_transformation.py
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * naming changes
    
    * josh changes
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>

commit 482e228e39bfb1aad84b3cb3547b7e6bd042bc04
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Fri Nov 18 23:55:33 2022 +0530

    [Distributed] Set concurrency per ray actor to 2 (#990)
    
    * DonReducing Concurrency
    
    * Python n Formatting
    
    * setting  concurrency to 2

commit 7a918c8ef2c31dd78f20ee4c93cd1d8344cedcd2
Author: Jerin Philip <jerin@thirdai.com>
Date:   Fri Nov 18 22:53:16 2022 +0530

    Reduce noise in public docs (#1006)

commit 29f83b00a57e0d4439dabc587595154292aebdc0
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Nov 18 10:56:45 2022 -0600

    Add s3 loading to UDT (#1016)
    
    * It's ugly on the inside but beautiful on the outside
    
    * Cleaning up docs
    
    * Getting docs to generate correctly
    
    * S3 test working
    
    * Adding comment
    
    * Responding to pr comments

commit e36b41538890c8d3d53c3ab67a32046e96ccfda1
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Nov 18 00:00:48 2022 -0600

    Adding types __repr__ fix and some docs (#1017)
    
    * Testing list of types to string
    
    * Adding get_udt_col_types documentation
    
    * Adding date to test as well

commit c4ccdb8f0bad606787336b651109bb5af30c6fc7
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Nov 17 13:53:32 2022 -0600

    interface for udt column types (#1012)
    
    * start moving
    
    * finish migration for regular datatypes
    
    * name fix
    
    * fix serialization
    
    * cppformat

commit 82442edcc1b3f7071fbd96c118f373ee73e62966
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Nov 17 12:42:05 2022 -0600

    Removing the extra model_type parameter from load (#1009)
    
    * Adding simplified load method with header byte
    
    * Adding generator test and fixing generator cereal problem
    
    * Changing to general istream for load
    
    * Fixing buggy python test
    
    * Moving identifier variables
    
    * Fixing reinterpret cast
    
    * Fixing linking errors

commit f26122e9bc344d1899528ddd4717a6eca18c10a8
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Nov 17 12:54:56 2022 +0530

    Add instrumentation to report build time summary (#982)

commit 1dca321e941040c5f42e5d0c2851076aa9d668ec
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Nov 17 08:12:53 2022 +0530

    Remove tomlplusplus dependency (#1008)

commit a9f75b5cbf79267337e1a7ffca9a975459d01498
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Nov 16 20:34:34 2022 -0600

    Featurization docs (#998)
    
    * Column renaming
    
    * Featurization docs
    
    * Fix naming
    
    * python format
    
    * Resolve comments

commit a7c7e5bd5bd0575d03e230b36f476f51453f8666
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Nov 16 16:13:50 2022 -0600

    Type inference with missing values (#1002)
    
    * Type inference with missing values
    
    * Removing extra file
    
    * Adding comments

commit 9bd6577cb25a54ba0c65f38dfa8ce7bc71946c65
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Nov 16 10:54:35 2022 -0600

    Adding auto public pypi upload (#1004)

commit 4e6546d0b977a4608029187e860187ffb85e50b3
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Wed Nov 16 16:51:12 2022 +0530

    [Distributed] Support for adding DataType to Pandas Column  (#988)
    
    * support for adding data_type for columns
    
    * Python Formatting
    
    * changing a variable name

commit 7612647b9e98cf5fcccd42180311c18f22c9c6ee
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Wed Nov 16 11:58:16 2022 +0530

    Mlflow auth (#1001)
    
    * Change URI to the authenticated MLFLOW server, change setup.py to use mlflow-1.30.0
    
    * Add secrets to workflow
    
    * Fix secrets
    
    * Add security key to benchmarks-suite.yaml
    
    * Add security key to benchmarks-suite.yaml
    
    * Add security key to benchmarks-suite.yaml
    
    * Add security key to benchmarks-suite.yaml
    
    * Reset benchmark-suite except env variable, Remove --test run from benchmar-test
    
    * change benchmarkbolt by removing disable mlflow
    
    * Remove mlflow versioning
    
    * Change mlflow version
    
    * Set mlflow version to 1.23.1
    
    * Add protobuf
    
    * Change protobuf version
    
    * change protobuf version
    
    * Add protobuf to distributed extras
    
    * Remove run pypi on pull request
    
    * Add comments to setup.py
    
    * Format setup.py

commit 4906c593d7a28c8ba354dc8baa637d75813ecdee
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Nov 15 13:21:35 2022 -0600

    add comment and fix text block hash range (#1003)

commit d42a10a9d103150cfbd1382ee87e38fd57675c2e
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Tue Nov 15 13:42:39 2022 +0530

    Mlflow auth (#978)
    
    * Change URI to the authenticated MLFLOW server, change setup.py to use mlflow-1.30.0
    
    * Add secrets to workflow
    
    * Fix secrets
    
    * Add security key to benchmarks-suite.yaml
    
    * Add security key to benchmarks-suite.yaml
    
    * Add security key to benchmarks-suite.yaml
    
    * Add security key to benchmarks-suite.yaml
    
    * Reset benchmark-suite except env variable, Remove --test run from benchmar-test
    
    * change benchmarkbolt by removing disable mlflow
    
    * modify bolt benchmark for env var
    
    * Add print statements to benchmarkbolt
    
    * testing
    
    * run change
    
    * Remove newline
    
    * Remove newline
    
    * yaml multiline
    
    * Modify benchmark-suite file formatting
    
    * Change env variable names
    
    * Modify benchmark test file
    
    * Reset to head^

commit fe87f8daf6d661a079138bda56a87a32cf0ee283
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Nov 15 00:27:23 2022 -0600

    bump (#997)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit b2b010d69f7c8a1eb3f5af40940419fdf3411ac5
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Nov 15 00:27:08 2022 -0600

    fix (#1000)

commit 1836978b5a8d981746006c189b4caa4bfaf8f095
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Mon Nov 14 23:42:31 2022 -0600

    Integrating Flash with UDT (#991)
    
    * integrate flash into udt
    
    * more docs
    
    * remove thirdai expose all
    
    * address pr comments
    
    * fix formatting issue
    
    * commit before merge
    
    * merge from main
    
    * fix python release test
    
    * fix merge conflicts

commit 77971737e3c3911e33a36f57f183875b68b4d3a0
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Nov 14 23:30:46 2022 -0600

    Multicategorical support (#996)
    
    * No need for n_unique_classes
    
    * tests work!
    
    * tests work!
    
    * Made n_unique_classes optional
    
    * Made n_unique_classes optional
    
    * fixed taht horrible bug
    
    * comments
    
    * removed n_unique_classes for good
    
    * removed n_unique_classes for good
    
    * format and fix test
    
    * Improve error message
    
    * consolidate parallel vs force parallel
    
    * beginnings
    
    * first try
    
    * removed block offsets from generic batch processor
    
    * rename BlockFeature to SegmentFeature
    
    * change all block ranges to max int
    
    * add multicategorical support
    
    * fix delimiter
    
    * add tests
    
    * test updates'
    
    * Update auto_ml/src/deployment_config/dataset_configs/udt/FeatureComposer.h
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * add test and add delimimter for metadata
    
    * remove prints
    
    * Update dataset/src/utils/SegmentedFeatureVector.h
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * pytofmat
    
    * add back stuff
    
    * halfway thru resolving josh comments
    
    * cppformat
    
    * delimimter meta
    
    * remove comment
    
    * format
    
    * fix explain? still broken tests
    
    * default to not store segment feature map
    
    * formatting
    
    * fix test
    
    * pyformat
    
    * naming, fix lint
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    Co-authored-by: Joshua Engels <josh@thirdai.com>

commit 3b0ecaa3e4e229c3fdeb8d1ef0fb0c1a132ace5c
Author: Jerin Philip <jerin@thirdai.com>
Date:   Tue Nov 15 09:34:55 2022 +0530

    Make MarginBCE save-capable (#980)

commit 2a7886a268a3f42585aa3d18d3aa1755547a2340
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Nov 14 21:46:46 2022 -0600

    Metadata calculation (#995)
    
    * Initial version of type inference
    
    * First test passing
    
    * Complicated test
    
    * Basic type inference test working
    
    * No need for n_unique_classes
    
    * tests work!
    
    * tests work!
    
    * Made n_unique_classes optional
    
    * Made n_unique_classes optional
    
    * fixed taht horrible bug
    
    * comments
    
    * removed n_unique_classes for good
    
    * removed n_unique_classes for good
    
    * function done
    
    * Better version of type inference, incorporating Nick's comments from AutoMl
    
    * Adding pytestmark
    
    * added test
    
    * pyformat
    
    * test almost working (need another PR)
    
    * merge
    
    * fix access
    
    * .
    
    * pyformat and fix tests
    
    * cppformat
    
    * remove print
    
    Co-authored-by: Josh Engels <josh@thirdai.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit b976cb1f881033793afb556e3d0102ad629c62ca
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Nov 14 20:28:28 2022 -0600

    Adding __str__ methods to the UDT types (#999)
    
    * Adding toString methods and test
    
    * Fleshing out tests and cleaning up json string format

commit 8884da41ea29f194a8adb28d3f60b53d44fb91b4
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Nov 14 20:09:52 2022 -0600

    Redirecting pybind stdout to fix flush issue (#993)
    
    * Redirecting pybind stdout
    
    * Formatting
    
    * Only redirecting output on neccesary functions that aren't performance critical
    
    * Commenting what OutputRedirect does

commit 9f8589c41542654e27717e2777b7ce16cc9a723a
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Nov 14 19:02:36 2022 -0600

    Remove n unique classes (#987)
    
    * No need for n_unique_classes
    
    * tests work!
    
    * tests work!
    
    * Made n_unique_classes optional
    
    * Made n_unique_classes optional
    
    * fixed taht horrible bug
    
    * comments
    
    * removed n_unique_classes for good
    
    * removed n_unique_classes for good
    
    * format and fix test
    
    * Improve error message
    
    * consolidate parallel vs force parallel
    
    * format
    
    * comments
    
    * format
    
    * integer target
    
    * format
    
    * integer target doc
    
    * Format, fix error message, fix text classification test
    
    * fixed test
    
    * comment
    
    * _ for unpacking things not used in loop
    
    * comment
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 22528077544bb1353f0fad4252e2f12d07f4017d
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Nov 14 17:15:17 2022 -0600

    Adding type inference for UDT/AutoML (#992)
    
    * Initial version of type inference
    
    * First test passing
    
    * Complicated test
    
    * Basic type inference test working
    
    * Better version of type inference, incorporating Nick's comments from AutoMl
    
    * Adding pytestmark
    
    * Adding comments and removing extra prints

commit cefec0dee1a056188497eb165026d3b0f6a6112e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Nov 14 12:36:09 2022 -0600

    Augmentation Interface (#986)
    
    * Augmentation interface
    
    * Fix comment

commit d0075deecb26c0069c1e122fbd79dd6985f7640b
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Fri Nov 11 13:54:07 2022 +0530

    Added decorater to training and data loading functions (#981)

commit 501036fb8900dd4be1beb93848111e45e028dd57
Author: Jerin Philip <jerin@thirdai.com>
Date:   Fri Nov 11 12:50:56 2022 +0530

    Do not truncate logfile on relaunch (#979)

commit c47f71eccd96381c25529fcbc0941b847c9229a7
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Nov 10 19:57:52 2022 -0600

    Fix DWTA Bug on NaNs (#972)
    
    * Fix DWTA Bug on NaNs
    
    * Remove print from test
    
    * Cmake format
    
    * Fix comment

commit 87df0ab6c50899379bf04f991060b34871b45cc1
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Nov 10 14:47:35 2022 -0600

    use smaller embedding dimensions (#977)

commit 1a6ee0bdc7dde0283a7779de16b408e1703520fe
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Nov 10 14:08:26 2022 -0600

    Adding serialization for the dlrm attention node (#976)
    
    * Add cereal functions
    
    * Adding load save to DLRM attention node test
    
    * Adding remove of filename at end of test

commit 0d82daac57e5c59cb2d903927b7245f6d4cfc734
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Thu Nov 10 22:14:29 2022 +0530

    version bump (#973)

commit 8f8e9ed822544156d8f34314faaf64a3a91cabfb
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Thu Nov 10 09:33:32 2022 +0530

    Autotune number of bins based on sampling (#970)
    
    * added sampling for numerical type to get number of bins
    
    * formatting
    
    * added some more sampling things
    
    * some documentation
    
    * changes
    
    * changes
    
    * space

commit 55fa5e3a6eb9663429a9a90cb8b420eb328630bf
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Nov 9 13:19:49 2022 -0600

    Kaggle credentials in demos docker container (#971)
    
    * demos docker script
    
    * add credentials
    
    * fix python script

commit 80bcc6da8f17fdd67ed7d074a98ba0f2fcda993a
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Nov 9 11:04:06 2022 -0600

    Reservoir Sampling + Validating Hash Function in the Flash Generator (#966)
    
    * add reservoir sampling and hash function check to query candidate generator
    
    * remove unnecessary changes
    
    * rename unit test
    
    * fix unit test
    
    * address PR comments
    
    * fix failing tests
    
    * fix failing tests
    
    * change serialization for minhash
    
    * address PR comments
    
    * remove unnecessary changes
    
    * remove use_reservoir_sampling parameter from generator config
    
    * small patch
    
    * add unit test for generator with reservoir sampling
    
    * remove unnecessary changes
    
    * fix generator config in unit test
    
    * add pytest parametrization decorator to the testing function

commit 167713a0493b98a35890f263323fc9afe9533a9d
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Wed Nov 9 16:37:42 2022 +0530

    Rca modification (#964)
    
    * added a check for sum of gradients
    
    * helper functions to get month and day names
    
    * change the explanations for month and week names
    
    * change the tests to cope up with current change
    
    * commenting styles
    
    * change the index as our day 0 starts with thursday
    
    * added test to ensure we get correct day
    
    * test for months
    
    * removing vscode intelligence

commit ecd8f5a8737a4462622488d64a414c569eb6608b
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Nov 8 21:09:23 2022 -0600

    Metadata in udt (#936)

commit acb49cb33f5d85d61f6c5e493ceb3f01f0114eaa
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Mon Nov 7 20:33:16 2022 -0600

    Evaluate Method for Flash Generator  (#953)
    
    * add evaluate method to the flash generator
    
    * respond to pr comments
    
    * respond to pr comments
    
    * change evaluate function signature

commit be0e4e74da2f68151d4b2298ca82efbcd820fc98
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Nov 7 20:07:47 2022 -0600

    Fix flaky and broken test (#969)
    
    * Fix flaky test and broken test
    
    * Remove print
    
    * python format

commit cae11bbae066352b898fb12fc7f51321904657c3
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Nov 7 17:37:22 2022 -0600

    Disable branch trigger (#968)

commit 44c739c9d9a7474733c0a5cba2b4815e117988ba
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Nov 7 16:59:33 2022 -0600

    Public docs (#952)
    
    * Remove unused things from public release
    
    * Add logo to docs
    
    * Add logo to docs
    
    * Internal + public docs
    
    * Fix gh action
    
    * Public docs ready
    
    * Test github actions
    
    * Fix yml file
    
    * Use pip3 for build
    
    * Fix gh action
    
    * Push html only
    
    * Add nojekylll so docs works
    
    * change to on release
    
    * Fix pybind def
    
    * Rename sync-docs to sync-internal-docs and merge
    
    * Resolve comments and update bolt.models
    
    * Run action one last time
    
    * Remove last actions
    
    * Create experimental submodule
    
    * Disable experimental submodule in release
    
    * Add experimental to internal docs
    
    * Fix experimental import
    
    * Fix release tests
    
    * Hide model.summary
    
    * Run on for latest release
    
    * Fix pipeline docs
    
    * Un-hide changes
    
    * Explicit autoclass instead of automodule
    
    * Resolve comments

commit c62a677533eee1c49dc60d804c020cf0ecdafb58
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Nov 7 16:58:57 2022 -0600

    Fix state machine error (#967)

commit a16dac7a40e1ad384f43b3d08880e9eae132a096
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Nov 7 12:03:20 2022 -0600

    Fix udt dataset factory restart (#961)
    
    * Add tabluar and text classification tests to UDT and deprecate old auto-classifiers
    
    * Fix udt dataset factory restart
    
    * restart before returning
    
    * Remove oracle python binding (#962)
    
    * Remove oracle python binding
    
    * Removed all traces of sequential classifier and renamed anything "oracle" to "udt" (#963)
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit c22a2e8d191ddc7499eb5350e23ee0275f2e596b
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Nov 7 11:19:30 2022 -0600

    Migrate auto classifiers to UDT  (#959)
    
    * Add tabluar and text classification tests to UDT and deprecate old auto-classifiers
    
    * Resolve comments
    
    * Fix typo
    
    * Check accuarcy after load

commit f075e0ed8ba00681e107e07f268bbb8bb7202f42
Author: Jerin Philip <jerin@thirdai.com>
Date:   Sun Nov 6 18:24:28 2022 +0530

    Add save capability to DotProductNode (#957)

commit f12ad358e2c7fb8c21104f896148fe03b77f801a
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Nov 4 21:37:06 2022 -0500

    Add wget to demos Dockerfile (#960)

commit f1fc883913f5dcea6080d33264dc8e0a506781b6
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Nov 4 18:40:44 2022 -0500

    Update demos test to handle non-.ipynb files (#958)
    
    * Fix demo notebooks test
    
    * Fix formatting
    
    * Remove timeout parameter
    
    * Python formatting

commit dbe91e1a800370b3cc8d792c70f6f57a9560b42a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Nov 4 10:07:04 2022 -0500

    Minor changes to generator  (#954)
    
    * Implement minhash
    
    * Use minhash in generator
    
    * Add minhash test
    
    * Cleanup flash
    
    * Simplify python test
    
    * Remove print
    
    * Fix flash test
    
    * Check label and dataset size
    
    * Fix bug in test
    
    * Check labels size matches

commit b1b1d5698a4b75444223b1485b768397bf5a4665
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Nov 3 18:10:10 2022 -0500

    Minhash (#946)
    
    * Implement minhash
    
    * Use minhash in generator
    
    * Add minhash test

commit 47492e3e831d6613aed67f47ee68f84810f36700
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Nov 3 16:17:19 2022 -0500

    Disable mlflow for benchmarking actions (#955)

commit a06b3234b9c5079e3a48441686755d847fd43286
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Nov 3 10:01:19 2022 +0530

    Reduce noise in generated documentation (#927)
    
    * Reduce noise: omit _thirdai in type annotations and cleanup self arg
    * Set special-members: False - high noise, this one
    * Add a few comments to the options altered

commit c9924f0c97f93a5f9856c1ca7b5cfae48b073fea
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Nov 2 20:47:14 2022 -0500

    Add slack notifications for weekly benchmarks (#947)
    
    * Add slack integration for weekly benchmarks
    
    * Fix yaml
    
    * Fix indentation error
    
    * Switch back to weekly schedule

commit 9a97c984bc45c1d559a6514b822238bc510386ae
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Nov 2 20:38:57 2022 -0500

    bump (#951)

commit 3527bce99757eee0144e4d34a958bf9b75b3415b
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Nov 2 20:31:10 2022 -0500

    parallel data processing if no temporal (#948)
    
    * options:
    
    * geordie comment:
    
    * reorg
    
    * parallel data processing if no temporal
    
    * fixed explain docs
    
    * fix unclear message when target label not in data types
    
    * improved temporal explanation
    
    * remove sampling config. add embedding dim to options.
    
    * Improve thread safe vocabulary column name
    
    * fixed failing test
    
    Co-authored-by: David Torres <david@thirdai.com>

commit 2af52c3a867e18dd536347dbf0ea2b0d8bddbcbf
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Nov 2 17:38:41 2022 -0500

    Revert "Public Public Docs to gh pages on release (#938)" (#949)
    
    This reverts commit 039d991604842f777ae6aba30c4a0fb015b61e6a.

commit 7ade02839ac23be2bcbf96abca5a56fcbed48817
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Nov 2 17:26:36 2022 -0500

    Udt options cleanup (#945)
    
    * options:
    
    * geordie comment:
    
    * reorg
    
    * remove sampling config. add embedding dim to options.
    
    * string formatting
    
    * bugfix

commit 039d991604842f777ae6aba30c4a0fb015b61e6a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Nov 2 16:49:19 2022 -0500

    Public Public Docs to gh pages on release (#938)
    
    * Remove unused things from public release
    
    * Add logo to docs
    
    * Add logo to docs
    
    * Internal + public docs
    
    * Fix gh action
    
    * Public docs ready
    
    * Test github actions
    
    * Fix yml file
    
    * Use pip3 for build
    
    * Fix gh action
    
    * Push html only
    
    * Add nojekylll so docs works
    
    * change to on release
    
    * Fix pybind def
    
    * Rename sync-docs to sync-internal-docs and merge
    
    * Resolve comments and update bolt.models
    
    * Run action one last time
    
    * Remove last actions
    
    * Create experimental submodule
    
    * Disable experimental submodule in release
    
    * Add experimental to internal docs
    
    * Fix experimental import

commit a93a50b3e82cbf68c822b183ce259d95d48bab6a
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Nov 2 16:44:35 2022 -0500

    Add slack notification to run_demos action (#940)
    
    * Add slack notification to demos action
    
    * Fix indentation
    
    * Update slack bot name
    
    * Change channel name
    
    * Change channel name again
    
    * Modify channel to channel_id
    
    * Change back to running daily

commit 27c421b255a3eca848d370513b3713e942f51162
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Tue Nov 1 16:48:10 2022 -0500

    Update benchmark script to new python API (#943)
    
    * Update benchmark script to new python API
    
    * remove sparse-sparse flag

commit 55d3b8a2fe0eac25848e3282c3decd92d562cf1d
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Nov 1 15:19:06 2022 -0500

    parallel flag (#942)
    
    * parallel flag
    
    * comments

commit ac9704565e76492a3036d2b250006c77f76c54c6
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Nov 1 15:16:31 2022 -0500

    fix delim issue (#941)

commit 606fa822edcfb2aca557556dee48edf218bef42b
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Mon Oct 31 20:21:23 2022 -0500

    fix encodetext in charkgram text block creation (#939)

commit ba1f965d4a0304f1cfe1d12ee1022d05858b6273
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Mon Oct 31 18:45:19 2022 -0500

    Restore Flash  (#892)
    
    * add indexer python bindings
    
    * restore original flash codebase
    
    * add flash serialization/deserialization unit test
    
    * add initial python bindings for indexer
    
    * add loading and saving for flash index config
    
    * change constructor for flash index config
    
    * add python test for flash indexer
    
    * add serialization for flash and vector hash table
    
    * remove unnecessary changes
    
    * add python test for the indexer
    
    * temp commit
    
    * add documentation for indexer in deployment
    
    * move indexer and flash to bolt submodule
    
    * Rename flash.cc to Flash.cc
    
    * Rename flash.h to Flash.h
    
    * add further documentation
    
    * respond to PR comments
    
    * fix linting errors
    
    * fix memory leak in flash
    
    * add ids to queries mapping
    
    * fix cmake formatting errors
    
    * rename indexer to generator
    
    * fix unit test
    
    * augment python unit test coverage
    
    * use a fixed batch processor for the generator class
    
    * nits
    
    * fix memory leak
    
    * change class name from Generator to QueryCandidateGenerator
    
    * temporary commit
    
    * respond to PR comments
    
    * change python test file name
    
    * move generator class to search
    
    * respond to PR comments
    
    * respond to PR comments
    
    * remove verifyBatchSequentialIDs
    
    * remove labels from the generator class state
    
    * fix batch processor issues
    
    * add unit test to check unique label assignments for input queries
    
    * NOLINT for ASSERT_THROW since clang tidy doesn't like it
    
    * respond to pr comments
    
    * fix minor issue

commit a7119e60d21eb2366729a2f3677c0fcc8dfe2987
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Mon Oct 31 20:19:30 2022 +0530

    cmake namespaces (#910)
    
    * added namespaces
    
    * hmm
    
    * THIRDAI_FEATURE_FLAGS and one single set for thirdai_sources
    
    * restore to see about clang
    
    * assuming folder names self sufficient

commit d75d949f253bf0e3947ceb4cf494389b8d198f80
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Sun Oct 30 18:30:54 2022 -0500

    Add tabular features to UDT (#932)
    
    * first version
    
    * no segfault
    
    * passed save load test
    
    * range
    g
    
    * fixed build problmes
    
    * private constructor for ceral
    
    * bug
    
    * add flag
    
    * fix build
    
    * changes
    
    * rename tabular block and remove bad experiment
    
    * use range for bolt.types.numerical()
    
    * soft binning
    
    * rename to column_contextualization and add flag to UDT
    
    * celanup
    
    * remove dense array
    
    * some of geordies comments
    
    * Rca tabular udt (#935)
    
    * yay it pass
    
    * added checks
    
    * fixed tabular classifier verifyInput
    
    * remove vocab-based categorical encoding
    
    * Update dataset/src/utils/TextEncodingUtils.h
    
    * resolve david's comments
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>

commit 53931d1c380191978face9ca6b805f985204ea74
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sat Oct 29 13:52:18 2022 -0500

    fixed user item history bug (#933)
    
    * fixed user item history bug
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc

commit b1c3de1499ba0d729f78f6ba060a64bc86895df3
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Oct 28 16:08:19 2022 -0500

    Allowing distributed train method to be called multiple times (#929)
    
    * Removing FinishTraining to allow multiple calls to distributed train()
    
    * Adding explanation in distributed.py
    
    * Fixing typo
    
    * Improving comment

commit c615e124b3d8c72e564d91cc5b28f266f8153875
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Oct 28 15:54:44 2022 -0500

    Default learning rate and epochs in UDT (#931)

commit 2aef94834b898d51fecb7ee92f95ffe39fc7e225
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Oct 28 14:58:56 2022 -0500

    Run Demo Notebooks Through Github Actions (#923)
    
    * Add workflow to run demo notebooks daily
    
    * Consolidate scripts
    
    * Remove unused import
    
    * Python reformatting
    
    * Address pr comments
    
    * Python formatting
    
    * Rename action
    
    * Address PR comments

commit 63615a6fbd562e48f5cda34cd4b22b3dbec602b1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Oct 28 12:26:28 2022 -0500

    Refactor Sparse Parameter Updates (#915)
    
    * Refactor Sparse Parameter Updates
    
    * Delete sparse sparse test
    
    * rename prepareForDistributedTraining to disableSparseParameterUpdates
    
    * Fix c++ test compile error
    
    * Resolve comments

commit 89a5180b405fd1d9c9883e4a5a6af4d0c0b42642
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Oct 28 10:56:19 2022 -0500

    Fix release test and remove a few bolt.graph.* from docs (#928)

commit 6c3b59e47ba9bb110ab1d5bbf9018925034429d5
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Oct 27 23:51:54 2022 -0500

    fix windows build in pairgram transformations (#924)
    
    * fix
    
    * remove import
    
    * fix
    
    * remove from shared

commit 19ed5bd7a99de53c3d805e7f1b852c3f0bc30bb1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Oct 27 21:40:17 2022 -0500

    Python bindings cleanup (#919)
    
    * Python bindings cleanup
    
    * Format
    
    * Fix compile error
    
    * Fix benchmarks
    
    * Rename PredictConfig -> EvalConfig (#922)
    
    * Rename PredictConfig -> EvalConfig
    
    * Move UDT + ModelPipeline to Bolt (#925)
    
    * Move UDT + ModelPipeline to bolt
    
    * Format
    
    * fix benchmark script

commit 4b59c35d5bcdf377f595c7ec5f985b85aafc0bc1
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Oct 27 14:27:42 2022 -0500

    Remove print_when_done conditionals (#921)
    
    * no print when done
    
    * remove print_when_done conditionals from UDT and model pipeline

commit e1385b74a3cdbb6fd07dd81bffc5240007064b7c
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Oct 27 02:33:18 2022 -0500

    no print when done (#920)

commit 3c43a8102d2c83e7bb3742d9999260125d31ada7
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Oct 26 16:42:34 2022 -0500

    Removing walrus operator to make it work on python <3.8 (#917)

commit cddad34ef947acfd2605c77fb67eda2de75c1eab
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Oct 26 15:38:57 2022 -0500

    Adding streaming and arbitrary data generators to the distributed API (#880)
    
    * First data generator
    
    * Working for svm
    
    * Restructuring code
    
    * Streaming working
    
    * Cleaning up and documenting
    
    * Continuing to clean up
    
    * Reverting back to correct API in compression tests
    
    * Fixing tests and renaming data_generators to train_generators
    
    * Moving imports into tests to find test error in CI
    
    * Fixing import path
    
    * Modifying wrapper to only accept datasets with set_new_datasets
    
    * Changing DatasetLoader interface so we can use it directly for distributed
    
    * Exposing neccesary information to distribute model pipeline
    
    * Moving python train generators to the DatasetLoader interface
    
    * Pickle problem is the last problem left
    
    * Up to a file not found error now
    
    * Everything working now, just need to clean up
    
    * Cleaning up unused code
    
    * First round of comments
    
    * Second round of comments
    
    * My round of changes
    
    * Reformatting
    
    * Fixing typo
    
    * Reverting files we shouldn't change
    
    * Ready to get tests working now
    
    * Adding pandas loader test
    
    * Getting ready to write clinc test
    
    * Continuing to work on clinc test
    
    * Need to write serialization for FeaturizationPipeline
    
    * Adding serialization for string hash
    
    * Now just need David's pairgrams
    
    * Fixing failing tests
    
    * Fixing test
    
    * Formatting
    
    * Removing finished todo
    
    * Adding serialization to all transformations
    
    * Distributed clinc working!
    
    * Responding to pr comments

commit 4e5681609cd904c4e00cc43e89938d4ad949745a
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Oct 26 10:43:39 2022 -0500

    Pairgram Transforms + VectorArray (#911)
    
    * Columns and basic featurizer
    
    * Basic featurization tests
    
    * Separate transformations from dataset creation
    
    * Vector column and binning transformation
    
    * Binning test
    
    * Resolve comments
    
    * Work cc files
    
    * Return bolt dataset :(
    
    * Add try catch for exceptions in loop merge
    
    * cmake format
    
    * Resolve comments
    
    * Resolve comments
    
    * initial pairgram transform
    
    * String column added
    
    * Adding string hash transformation
    
    * Hash transformation tests
    
    * Formatting and fixing pragma
    
    * Fixing unused error
    
    * merge
    
    * comments
    
    * idk
    
    * improve pairgram
    
    * merge
    
    * cmake format
    
    * format
    
    * restore
    
    * fix
    
    * nl
    
    * clean up transforms
    
    * before merge
    
    * fix vector array and add transforms
    
    * python test and bug fixes
    
    * sentence unigram test
    
    * josh comments and starting pairgram test
    
    * test half working
    
    * cleanup and fix bug
    
    * working test
    
    * typos
    
    * fix tests
    
    * josh changes
    
    * update test numbers
    
    * uncomment pragma
    
    * small changes
    
    * isort??
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit 87883ef763f024597159aeac832fac9e99724e14
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Oct 25 17:52:32 2022 -0500

    bump (#916)

commit c4818bc337b06858e40a5a3f8cc08a272c9acfc7
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Oct 25 11:47:09 2022 -0500

    Refactoring the responsibilities of temporal context (#912)
    
    * first build
    
    * it works!
    
    * todos
    
    * works! but still need to fix predict return value
    
    * oops
    
    * works!
    
    * fix import
    
    * remove cast to optional
    
    * remove that file
    
    * preview
    
    * remove that ugly conversion function
    
    * remove ugly function
    
    * remove getInitParams
    
    * remove getInitParams
    
    * removed unused include
    
    * removed unused include
    
    * artifact
    
    * remove default arg
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * remove unneeded includes
    
    * list artifacts method
    
    * remove unneeded includes
    
    * fix
    
    * fix
    
    * not for this PR
    
    * not supposed to be there
    
    * moved things around
    
    * reverted unwanted changes
    
    * block serialization
    
    * get label
    
    * only odf left
    
    * change test name
    
    * remove unnecessary
    
    * remove unnecessary
    
    * close!
    
    * comments
    
    * fix and remove unnecessary casting
    
    * comments and remove unnecessary casting
    
    * comment
    
    * includes cereal/types/memory.hpp
    
    * refactored!
    
    * fixes
    
    * cleaned up
    
    * comments
    
    * use autotuned sparsity parameter
    
    * use autotuned sparsity parameter
    
    * fixes
    
    * another fix
    
    * done!
    
    * fixed comments
    
    * test case and binding
    
    * Resolved Nick's comments
    
    * minor change to text pairgram word limit impl
    
    * removing column name as input column don't need that
    
    * non-wrapper changes
    
    * fixed!
    
    * resolved Nick's comments
    
    * [2/?] Serialization for sequential classifier blocks (#884)
    
    * block serialization
    
    * includes cereal/types/memory.hpp
    
    * [3/3] Oracle dataset factory and temporal context implementations (#883)
    
    * first build
    
    * it works!
    
    * todos
    
    * works! but still need to fix predict return value
    
    * oops
    
    * works!
    
    * fix import
    
    * remove cast to optional
    
    * remove that file
    
    * remove that ugly conversion function
    
    * remove getInitParams
    
    * removed unused include
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * list artifacts method
    
    * fix
    
    * not supposed to be there
    
    * moved things around
    
    * reverted unwanted changes
    
    * only odf left
    
    * remove unnecessary
    
    * remove unnecessary
    
    * close!
    
    * comments
    
    * fix and remove unnecessary casting
    
    * refactored!
    
    * fixes
    
    * cleaned up
    
    * comments
    
    * use autotuned sparsity parameter
    
    * fixes
    
    * another fix
    
    * Resolved Nick's comments
    
    * minor change to text pairgram word limit impl
    
    * resolved Nick's comments
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    * docs
    
    * docs
    
    * format?
    
    * fix build all issue
    
    * docs
    
    * fixed lint and python test
    
    * streamlined
    
    * comments based on David's requets
    
    * it works
    
    * Removed artifacts!
    
    * resolve comments
    
    * [UDT 2/4] Make model pipeline accept map input (#903)
    
    * first commit
    
    * type aliases
    
    * using type alias to make less verbose
    
    * moved explainImpl
    
    * CLEANUP
    
    * moved featurizer
    
    * split from map input PR
    
    * cmake
    
    * fixes
    
    * resolved most comments + started converting to templates
    
    * used templates where appropriate
    
    * fixed
    
    * minor refactoring
    
    * merged with refactoring
    
    * fix explain()
    
    * fixed concatenation for batch map input
    
    * [UDT 3/4] Oracle model pipeline wrapper + inference with map input (#901)
    
    * oracle wrapper
    
    * Wrapper works!
    
    * less bindings
    
    * first commit
    
    * remove unnecessary
    
    * type aliases
    
    * using type alias to make less verbose
    
    * moved explainImpl
    
    * rename to udt
    
    * expose embedding representation
    
    * load save
    
    * CLEANUP
    
    * moved featurizer
    
    * split from map input PR
    
    * cmake
    
    * fixes
    
    * resolved most comments + started converting to templates
    
    * used templates where appropriate
    
    * fixed
    
    * minor refactoring
    
    * resolved small comments
    
    * merged with refactoring
    
    * lotta refactoring
    
    * wrapper
    
    * remove unnecessary changes
    
    * fix explain()
    
    * docs + bindings + unit tests
    
    * added docs
    
    * fixed concatenation for batch map input
    
    * add dense feats to unit tests
    
    * date is not compulsory
    
    * works without temporal relationships and timestamps
    
    * fixed error introduced in previous commit
    
    * removed artifact
    
    * docs
    
    * resolve Josh's comments
    
    * [UDT 4/4] Make oracle support arbitrary labels (#902)
    
    * oracle wrapper
    
    * Wrapper works!
    
    * accept non numerical labels too
    
    * less bindings
    
    * first commit
    
    * remove unnecessary
    
    * type aliases
    
    * using type alias to make less verbose
    
    * moved explainImpl
    
    * rename to udt
    
    * explain's target neuron can be a string
    
    * expose embedding representation
    
    * load save
    
    * CLEANUP
    
    * moved featurizer
    
    * split from map input PR
    
    * cmake
    
    * merge
    
    * fixes
    
    * resolved most comments + started converting to templates
    
    * used templates where appropriate
    
    * fixed
    
    * minor refactoring
    
    * resolved small comments
    
    * merged with refactoring
    
    * lotta refactoring
    
    * wrapper
    
    * remove unnecessary changes
    
    * remove unnecessary
    
    * remove wrong include
    
    * resolve Josh's comments
    
    * class docs
    
    * almost there just two more tests to fix
    
    * fix explain()
    
    * tests done!
    
    * docs + bindings + unit tests
    
    * passes tests
    
    * fixed label block creation + test
    
    * updated tests and docs
    
    * added test for get_neuron_id_to_label_map
    
    * added docs
    
    * modified docs for string label support
    
    * fixed concatenation for batch map input
    
    * rename target label to target class
    
    * add dense feats to unit tests
    
    * date is not compulsory
    
    * works without temporal relationships and timestamps
    
    * fixed error introduced in previous commit
    
    * removed artifact
    
    * docs
    
    * resolve Josh's comments
    
    * resolve josh comments
    
    * fixed bindings and tests
    
    * update docs to reflect new class_names method
    
    * moved impl functions to private
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: Yashwanth Adunukota <yash@thirdai.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 78829e02b25ae51f54d8707820c03d432d900639
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Oct 23 21:33:19 2022 -0500

    Cleanup columns (#913)
    
    * Cleanup columns
    
    * restore comment

commit e60f9bd872f5e84286caf45b6a2c90f605fc070e
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sun Oct 23 00:47:51 2022 -0500

    [UDT 1/4] Expose more oracle configurations  (#900)
    
    * first build
    
    * it works!
    
    * todos
    
    * works! but still need to fix predict return value
    
    * oops
    
    * works!
    
    * fix import
    
    * remove cast to optional
    
    * remove that file
    
    * preview
    
    * remove that ugly conversion function
    
    * remove ugly function
    
    * remove getInitParams
    
    * remove getInitParams
    
    * removed unused include
    
    * removed unused include
    
    * artifact
    
    * remove default arg
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * remove unneeded includes
    
    * list artifacts method
    
    * remove unneeded includes
    
    * fix
    
    * fix
    
    * not for this PR
    
    * not supposed to be there
    
    * moved things around
    
    * reverted unwanted changes
    
    * block serialization
    
    * get label
    
    * only odf left
    
    * change test name
    
    * remove unnecessary
    
    * remove unnecessary
    
    * close!
    
    * comments
    
    * fix and remove unnecessary casting
    
    * comments and remove unnecessary casting
    
    * comment
    
    * includes cereal/types/memory.hpp
    
    * refactored!
    
    * fixes
    
    * cleaned up
    
    * comments
    
    * use autotuned sparsity parameter
    
    * use autotuned sparsity parameter
    
    * fixes
    
    * another fix
    
    * done!
    
    * fixed comments
    
    * test case and binding
    
    * Resolved Nick's comments
    
    * minor change to text pairgram word limit impl
    
    * removing column name as input column don't need that
    
    * non-wrapper changes
    
    * fixed!
    
    * resolved Nick's comments
    
    * [2/?] Serialization for sequential classifier blocks (#884)
    
    * block serialization
    
    * includes cereal/types/memory.hpp
    
    * [3/3] Oracle dataset factory and temporal context implementations (#883)
    
    * first build
    
    * it works!
    
    * todos
    
    * works! but still need to fix predict return value
    
    * oops
    
    * works!
    
    * fix import
    
    * remove cast to optional
    
    * remove that file
    
    * remove that ugly conversion function
    
    * remove getInitParams
    
    * removed unused include
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * list artifacts method
    
    * fix
    
    * not supposed to be there
    
    * moved things around
    
    * reverted unwanted changes
    
    * only odf left
    
    * remove unnecessary
    
    * remove unnecessary
    
    * close!
    
    * comments
    
    * fix and remove unnecessary casting
    
    * refactored!
    
    * fixes
    
    * cleaned up
    
    * comments
    
    * use autotuned sparsity parameter
    
    * fixes
    
    * another fix
    
    * Resolved Nick's comments
    
    * minor change to text pairgram word limit impl
    
    * resolved Nick's comments
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    * docs
    
    * docs
    
    * format?
    
    * fix build all issue
    
    * docs
    
    * fixed lint and python test
    
    * streamlined
    
    * comments based on David's requets
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: Yashwanth Adunukota <yash@thirdai.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit ffd34354cdd2653f859609c3550be70921aada4b
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Oct 21 01:11:56 2022 -0500

    Adding pandas -> ColumnMap converter and associated tests (#908)
    
    * String column added
    
    * Adding string hash transformation
    
    * Hash transformation tests
    
    * Formatting and fixing pragma
    
    * Adding pandas loader and tests
    
    * Updating comment
    
    * Fixing typos
    
    * Fixing typos
    
    * Responding to pr comments
    
    * Changing values to to_numpy()
    
    * Adding more explicit string type check

commit 10f7c9c23e38d81ca3295f5b95dc268aa901a8a7
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Oct 20 15:42:54 2022 -0500

    Adding a string column and string hash transformation to the new dataset pipeline (#907)
    
    * String column added
    
    * Adding string hash transformation
    
    * Hash transformation tests
    
    * Formatting and fixing pragma
    
    * Fixing unused error
    
    * Making a default seed of 42

commit 201647843c66eb790ead4264ddd694f80bbf8253
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Oct 20 09:17:26 2022 -0500

    Featurizer pipeline columns + general structure (#896)
    
    * Columns and basic featurizer
    
    * Basic featurization tests
    
    * Separate transformations from dataset creation
    
    * Vector column and binning transformation
    
    * Binning test
    
    * Resolve comments
    
    * Work cc files
    
    * Return bolt dataset :(
    
    * Add try catch for exceptions in loop merge
    
    * cmake format
    
    * Resolve comments
    
    * Resolve comments
    
    * Move to new directory
    
    * Fix error message
    
    * Cmake format

commit 573d59491eeef6ec45445e2315c0ae20c6341136
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Thu Oct 20 19:18:30 2022 +0530

    add_compile to target_compile (#895)
    
    * remove add_compiles and use target_.....
    
    * change scope to PUBLIC to have asan flags to test executables also
    
    * ASan works with arm64 as we have switched to clang works in my local
    
    * remove naming confusion with already existing cmake variable

commit 05abab4c5aec4d1cc5816597cceb04a68156e136
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Oct 20 10:28:20 2022 +0530

    Fix license target_link_libraries (#905)

commit 8f1aa4e077fd700b317953653f5352221c17a05a
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Oct 19 21:52:58 2022 -0500

    New dataset object for new dataset pipeline (#899)
    
    * Initial dataset commit
    
    * Basic tests passing
    
    * Comments and formatting
    
    * Responding to comments
    
    * Removing duplicated function for now
    
    * Second round of comments
    
    * Adding bad slice test
    
    * Adding copy test
    
    * Respoding to 3rd round of comments

commit 6dcc6e5f9aa1b87acf989dbe1f44f81c589ae850
Author: Jerin Philip <jerin@thirdai.com>
Date:   Wed Oct 19 19:48:46 2022 +0530

    Save best model per tracked validation metric (#891)
    
    Adds an option to save the best model per validation loss. The best model is as
    of now saved as {model_prefix}.best.bolt and the most recent one saved as
    {model_prefix}.last.bolt.
    
    Documentation updated to reflect. Some consolidation in Metric.h to share
    across EarlyStopCheckpoint callback and dropping validation checkpoints.
    
    Logs with level info are dropped when models are saved onto disk, to provide
    some feedback on the location of models written.
    
    See: TSK-471

commit 671faa2da625a849a985ff3f5922c7c4f83948c6
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Oct 19 01:42:04 2022 -0500

    RCA in model pipeline (#893)
    
    * first build
    
    * it works!
    
    * todos
    
    * works! but still need to fix predict return value
    
    * oops
    
    * works!
    
    * fix import
    
    * remove cast to optional
    
    * remove that file
    
    * preview
    
    * remove that ugly conversion function
    
    * remove ugly function
    
    * remove getInitParams
    
    * remove getInitParams
    
    * removed unused include
    
    * removed unused include
    
    * artifact
    
    * remove default arg
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * remove unneeded includes
    
    * list artifacts method
    
    * remove unneeded includes
    
    * fix
    
    * fix
    
    * not for this PR
    
    * not supposed to be there
    
    * moved things around
    
    * reverted unwanted changes
    
    * block serialization
    
    * get label
    
    * only odf left
    
    * change test name
    
    * remove unnecessary
    
    * remove unnecessary
    
    * close!
    
    * comments
    
    * fix and remove unnecessary casting
    
    * comments and remove unnecessary casting
    
    * comment
    
    * includes cereal/types/memory.hpp
    
    * refactored!
    
    * fixes
    
    * cleaned up
    
    * comments
    
    * use autotuned sparsity parameter
    
    * use autotuned sparsity parameter
    
    * fixes
    
    * another fix
    
    * done!
    
    * fixed comments
    
    * test case and binding
    
    * Resolved Nick's comments
    
    * minor change to text pairgram word limit impl
    
    * removing column name as input column don't need that
    
    * resolved Nick's comments
    
    * [2/?] Serialization for sequential classifier blocks (#884)
    
    * block serialization
    
    * includes cereal/types/memory.hpp
    
    * [3/3] Oracle dataset factory and temporal context implementations (#883)
    
    * first build
    
    * it works!
    
    * todos
    
    * works! but still need to fix predict return value
    
    * oops
    
    * works!
    
    * fix import
    
    * remove cast to optional
    
    * remove that file
    
    * remove that ugly conversion function
    
    * remove getInitParams
    
    * removed unused include
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * list artifacts method
    
    * fix
    
    * not supposed to be there
    
    * moved things around
    
    * reverted unwanted changes
    
    * only odf left
    
    * remove unnecessary
    
    * remove unnecessary
    
    * close!
    
    * comments
    
    * fix and remove unnecessary casting
    
    * refactored!
    
    * fixes
    
    * cleaned up
    
    * comments
    
    * use autotuned sparsity parameter
    
    * fixes
    
    * another fix
    
    * Resolved Nick's comments
    
    * minor change to text pairgram word limit impl
    
    * resolved Nick's comments
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    * docs
    
    * docs
    
    * format?
    
    * fix build all issue
    
    * docs
    
    * fixed lint and python test
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: Yashwanth Adunukota <yash@thirdai.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit e74a67a7f08e09732f66fdd83b9901a2e0638cdc
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Oct 18 22:35:53 2022 -0500

    [1/?] Oracle in model pipeline preview (#882)
    
    * preview
    
    * remove ugly function
    
    * remove getInitParams
    
    * removed unused include
    
    * artifact
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * remove unneeded includes
    
    * fix
    
    * not for this PR
    
    * get label
    
    * change test name
    
    * comments and remove unnecessary casting
    
    * comment
    
    * use autotuned sparsity parameter
    
    * [2/?] Serialization for sequential classifier blocks (#884)
    
    * block serialization
    
    * includes cereal/types/memory.hpp
    
    * [3/3] Oracle dataset factory and temporal context implementations (#883)
    
    * first build
    
    * it works!
    
    * todos
    
    * works! but still need to fix predict return value
    
    * oops
    
    * works!
    
    * fix import
    
    * remove cast to optional
    
    * remove that file
    
    * remove that ugly conversion function
    
    * remove getInitParams
    
    * removed unused include
    
    * remove default arg
    
    * check no redundant dataset label dim param name
    
    * remove unneeded includes
    
    * list artifacts method
    
    * fix
    
    * not supposed to be there
    
    * moved things around
    
    * reverted unwanted changes
    
    * only odf left
    
    * remove unnecessary
    
    * remove unnecessary
    
    * close!
    
    * comments
    
    * fix and remove unnecessary casting
    
    * refactored!
    
    * fixes
    
    * cleaned up
    
    * comments
    
    * use autotuned sparsity parameter
    
    * fixes
    
    * another fix
    
    * Resolved Nick's comments
    
    * minor change to text pairgram word limit impl
    
    * resolved Nick's comments
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    * docs
    
    * docs
    
    * format?
    
    * fix build all issue
    
    * fixed lint and python test
    
    Co-authored-by: Benito Geordie <benitogeordie@Benitos-Air.attlocal.net>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 79f6198a4875ba43155beac4b7043aac612c43b1
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Tue Oct 18 22:42:25 2022 +0530

    Make Oracle supports tabular (#898)
    
    * added check
    
    * let's see if it works
    
    * doc

commit c4197936bb11922c03cbd58b3924c0adad46117d
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Mon Oct 17 12:13:21 2022 +0530

    Remove GLOB in favour of explicit listing sources (#894)

commit d3b258b8d41e1db97b0a48caa8e5f648e7a12f64
Author: Yash <106241157+yashuroyal@users.noreply.github.com>
Date:   Sat Oct 15 18:31:50 2022 +0530

    Seperate CPP Source library (#888)
    
    * seperate cpp library from python and remove include in global
    
    * reduce number of lines by listing the dataset tests
    
    * reduce lines in graph tests cmake
    
    * check for cereal
    
    * add_subdirectory(cereal) so cereal target is exposed
    
    * cereal SKIP_PERFORMANCE_COMPARISON ON
    
    * EXCLUDE_FROM_ALL for deps to avoid building non-required targets
    
    * take care of search cmake
    
    * take care of hashtable cmake
    
    * take care of hashing cmake
    
    * take care of compression cmake
    
    * remove unused gmock
    
    * take care bolt vector cmake
    
    * take care of entire bolt i suppose
    
    * forgot about dataset oops
    
    * somehow missed in local build of licensing
    
    * forgot the comments
    
    * back the license thing dont know
    
    * change path and format license working alright
    
    * hoping to follow some naming conversion here
    
    * link thirdai library to license
    
    * modernise with namespaces of spdlog::spdlog and similar
    
    * hmm.. formatting
    
    * late realisation of only cereal dependencies for license not entire lib
    
    * changing name for consistency and cereal is sufficient
    
    * chnage CRYPTOPP_LIB to cryptopp::cryptopp and corresponding thngs
    
    * see if wheels are building
    
    * wheels are building
    
    * elaborating the comment why we need SKIP_PERFORMANCE_COMPARISON
    
    Co-authored-by: Jerin Philip <jerin@thirdai.com>

commit 34ab6506ded672949b40f1fbe0ea3a255b4fc8b7
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Oct 14 11:18:41 2022 -0400

    Dot product node (#799)
    
    * Dot product node
    
    * DotProduct python bindings
    
    * Fix bug
    
    * Fix summary
    
    * Python tests, sparse-sparse doesn't work yet
    
    * Fix bug in sparse sparse
    
    * Remove auc in test
    
    * remove sklearn
    
    * Margin BCE
    
    * Serialize Margin bce
    
    * Add margin bce options
    
    * Abstract away similar sparse functions in dot product
    
    * Python format

commit 6caec397284913e2cf7615338490d89e5f3b985c
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Wed Oct 12 19:46:11 2022 +0530

    Logging support to distributed (#887)
    
    * Added thirdai.logging support to distributed
    
    * Added Python Decorater for timing function
    
    * solved issue with logging
    
    * formatting
    
    * Adding comments for changes in C++
    
    * removed logging from c++
    
    * Added os.path.join for log files
    
    * Removed cass variable validation from DistributedTrainingWrapper
    
    * Removed one arg
    
    * Formatting

commit 70fa3ac155e3757ab73548a70138b43d97438996
Author: Jerin Philip <jerin@thirdai.com>
Date:   Wed Oct 12 13:12:32 2022 +0530

    Add `Vocabulary` for language-tasks (#865)
    
    Specify a `Vocabulary` interface to convert to and from numerical (class) ids
    for use in language-tasks. Supplying the same vocabulary gives consistent
    tokenization and vocabulary-id (which is used further in label assignments)
    across several runs, opening up possibilities of restoring a checkpoint for
    training in the MLM task and also solving issues for distributed training,
    where order dependent label assignments affect training.
    
    A concrete `FixedVocabulary` is implemented following the `Vocabulary`
    specification, which encodes and decodes between a sentence and vocabulary-id,
    separating tokens by whitespace tokenization.
    
    See: TSK-726

commit 40d8de726c463ec6d806478be9962036f6583a26
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Oct 11 23:09:03 2022 -0500

    removing dataset core (#889)
    
    * yas
    
    * missed that cmakelists
    
    * missed that cmakelists
    
    * cmake format

commit 441de9ab7c328b908cf12a72788d43bca42c298c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Oct 10 13:42:08 2022 -0500

    Config docs (#863)
    
    * Config docs
    
    * Model Pipeline docs
    
    * Fix examples
    
    * Separate file for config
    
    * Allow docs to be run from actions
    
    * Update docs with api changes
    
    * Add example and reduce docs for overloaded functions

commit 8c657c885a645a014102c984d06749f585a7048b
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Oct 10 09:38:18 2022 +0530

    Gloo Backend For Distributed Training (#879)
    
    * gloo commmunication working
    
    * Added changes required after mergin main
    
    * gloo communication working
    
    * updating examples + python formatting
    
    * Formatting
    
    * Revert "Formatting"
    
    This reverts commit f9c8e9a1fe551d6acdecc8134617812a604d721a.
    
    * Revert "updating examples + python formatting"
    
    This reverts commit f9ba15c662c9830edba26a36e818d8aa28cd0fe8.
    
    * Formatting
    
    * Nits
    
    * updated examples

commit ca552be0efac566c813c2dd8b67b0907e73f78b2
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Oct 6 16:35:24 2022 -0500

    Remove summary from log (#878)

commit 3f6e4afb1866ce57bf4a2d03222adde08a347200
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Oct 6 13:24:04 2022 -0500

    Better cipher (#877)

commit 69df6c5b2cf24d4835de7d69b7e51e8632f9d866
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Oct 6 22:38:44 2022 +0530

    Bump version to 0.4.1 (#875)

commit f8a04c693d9fd9e9bf2c6d51d9f1c51151026ac3
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Oct 6 12:08:22 2022 -0500

    Revert to using TrainConfig in ModelPipeline (#876)

commit 69c70586d2af93b437a25cb73f5f31faaa8d15f3
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Oct 6 17:12:48 2022 +0530

    Document few train opts and reorganize docs (#868)

commit e30302ae3d7ff1f703ce67e39185c4d1b7e86f4c
Author: Jerin Philip <jerin@thirdai.com>
Date:   Thu Oct 6 14:09:54 2022 +0530

    Restore MacOS wheels (x86_64 + arm64) through AppleClang (#856)
    
    This PR restores broken MacOS compilation due to gcc issues by replacing it
    with vanilla AppleClang compilers. In addition, changes here enable
    cross-compilation of M1 (arm64) wheels through cibuildwheel. There are possible
    slowdowns due to changing compiler and OpenMP provisions, but we will fix this
    over the course of development. This completes the wheels required to be built
    for most our purposes and paves way to automate uploading to pypi instead of
    test.pypi.  For M1 cross-compile, OpenMP is built from source during wheel
    builds via cibuildwheel. Currently we use 13.0.2 but this is easily changeable
    via CMakeLists.txt.
    
    Also removes nmake build path on `CMakeLists.txt` on Windows, corresponding
    changes in workflow, as now cryptopp is built from source for all platforms.
    
    Currently we use `make` with inconsistent flags to build M1 wheel, which can
    lead to issues. Changes here attempts to bring cryptopp into the CMake
    ecosystem using https://github.com/abdes/cryptopp-cmake and then CMake adjust
    the project wide flags accordingly.
    
    See also: TSK-561
    Reviewed-By: Yashwanth Adunukota <yash@thirdai.com>

commit 63551119b1a5e45f7d67f8394ce9f70218e0c4c1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Oct 5 22:27:43 2022 -0500

    Block cipher deployment config (#873)
    
    * Change ModelPipeline to use Train/PredictConfig
    
    * Load validation data
    
    * Minor tweaks
    
    * Validation test
    
    * python format
    
    * Update rehash rebuild
    
    * Fix text classifier load save test
    
    * Fix filename
    
    * make predict config optional
    
    * Validation and default batch size
    
    * python format
    
    * Scrabble Contents of Deployment Config
    
    * Fix cipher
    
    * resolve comments

commit ad950c15918f249592952dbf1db0acc66a7d43e2
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Oct 5 21:06:55 2022 -0500

    Change ModelPipeline to use Train/PredictConfig (#871)
    
    * Change ModelPipeline to use Train/PredictConfig
    
    * Load validation data
    
    * Minor tweaks
    
    * Validation test
    
    * python format
    
    * Update rehash rebuild
    
    * Fix text classifier load save test
    
    * Fix filename
    
    * make predict config optional
    
    * Validation and default batch size
    
    * python format

commit f9b6781a434b45581927e7b43c2938ccfbffd7f3
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Oct 5 15:54:30 2022 -0500

    No Mac Os Wheel And Concurrency Fix (#872)

commit d3c1b2c398355a173d7314d718da3cf28d387dd6
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Wed Oct 5 17:57:35 2022 +0530

    Optimizes the broadcasting of gradients for linear communciation (#859)
    
    * ooptimization working
    
    * optimization working
    
    * Python Formatting
    
    * Adding comments
    
    * Added code for removing the references as soon as there work is done
    
    * Added comments for changes
    
    * python formatting
    
    * Added del for all ay get objects
    
    * Removed deletion of references
    
    * Python Formatting
    
    * Updated docstrings

commit 15d666bf940f8378461799e022bde4137b35db2c
Author: Jerin Philip <jerin@thirdai.com>
Date:   Wed Oct 5 10:14:13 2022 +0530

    Save models every specified interval (#848)

commit 531e49f79bbae822c8eef16d3c1a33851c55a193
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Oct 4 19:47:46 2022 -0500

    Bump version to 0.4.0 (#866)

commit 760a14ab1554a67bf617c9d241280f8c28212117
Author: Jerin Philip <jerin@thirdai.com>
Date:   Mon Oct 3 17:28:55 2022 +0530

    Restore incremental model.train() behaviour (#861)
    
    * Fix _epoch behaviour
    * Make the large comment /*... */

commit b8b3767e2860b974eb72dbc2ba57fc017472121a
Author: Jerin Philip <jerin@thirdai.com>
Date:   Mon Oct 3 12:38:58 2022 +0530

    Add mid-batch validation capability (#847)
    
    It's important to have validation set and validation loss as part of training,
    from time to time. This change wires an option to training to validate every n
    updates, provided a validation set during training. As of now it's only
    possible to validate at the end of an epoch. This is troublesome for problems
    like MLM where there is no periodic feedback on whether the metrics are
    improving on the unseen validation set or not, and only training loss is
    visible.
    
    The validation losses are logged in addition to training to give quicker
    real-time feedback to the user and can be later on parsed to produced training
    curves.
    
    Minor: Fixing =0 case for log-loss-frequency as well.
    
    See also: TSK-469
    Reviewed-By: Yashwanth Adunukota  <yash@thirdai.com>

commit 3ca61e4d9eb462a74b8f6bd7885e4de5d8d17ca8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sat Oct 1 09:30:12 2022 -0500

    Multilabel text classifier config (#855)

commit 553aac7ec39d398e8316e82802dbc049ea318010
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Sep 30 14:57:45 2022 -0500

    Rename deployment_config -> deployment and fix docs (#857)

commit b9eb00611760b8f249d672ed61d398b79ed3bc7f
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Fri Sep 30 15:05:43 2022 +0530

    Allow a build-identifier to be supplied by envvar (#850)
    
    THIRDAI_BUILD_IDENTIFIER can now be used with a commit-sha/branch-name
    (something the user can supply) to distinguish between builds in
    separate branches.

commit b6cffa8d278e5247d704e8b7a1f5d42b38581cfd
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Fri Sep 30 14:45:32 2022 +0530

    Logging improvements (#846)
    
    Exposes more of the logging module to python thirdai.logging, with
    documentation to work with sphinx. The following functions are now exposed:
    
        # Setup now brought under thirdai.logging module.
        # (previously thirdai.setupLogging)
        thirdai.logging.setup(...)
    
        # Ability to write to C++ logs from Python.
        thirdai.logging.trace(...)
        thirdai.logging.debug(...)
        thirdai.logging.info(...)
        thirdai.logging.warn(...)
        thirdai.logging.error(...)
        thirdai.logging.critical(...)
    
        # Flush capability
        thirdai.logging.flush()
    
    Work in distributed and some dogfooding has brought about some issues with log
    flushing, which should be improved by this PR. In case someone needs to force a
    flush, there's a function now exposed to Python to do the same. A default flush
    interval of 10s is applied.
    
    There's also an option to log-every n-updates so the updates are less busy.
    Default is one update.
    
    * Logging module refactor
    * Refactor public API
      * Also logging::setupLogging -> logging::setup(...)
      * Make logging default pattern more parseable
    
    * Logging miscallaneous enhancements
      * Log train loss only at specified intervals of updates
      * Account for setup re-entry with different args
      * Flush every n-seconds;
      * Expose flush();
      * Use shutdown() instead of drop_all()
    
    BoltGraph::train - epoch, updates consolidatation:
      * Consolidate epoch, _epoch_cnt -> _epoch; _batch_cnt -> _updates
      * Move train_state.epoch = _epoch near increment
    
    LR Scheduler tests:
      * Epochs are now [1, 3] when num_epochs=4 coz 0-based indexing

commit 3509aa11b2ef5a4cd5e3a6911db046f131c1c5c6
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 29 20:53:32 2022 -0500

    Serialization for deployment config, model pipeline and dataset blocks (#835)
    
    * Model and dataset config
    
    * Rename text config
    
    * deployment config done
    
    * ModelPileline mostly complete
    
    * working on python bindings
    
    * Use string instead of char
    
    * const and option params working
    
    * UserSpecifiedParameter working
    
    * Python bindings compiling
    
    * train/eval with filename
    
    * Train/eval python bindings
    
    * Fix pybind issue
    
    * Working for text classifier
    
    * Allowed options, clean up configs, disable summary in release
    
    * Remove accidental import
    
    * predict and predict_batch
    
    * python format
    
    * cpp format
    
    * Rename state-> factory
    
    * Add comment for dataset config structure
    
    * Remove loss hyperparameter
    
    * Serialization for deployment config, model pipeline and some dataset stuff
    
    * Resolve comments
    
    * Make size option part of user specified params
    
    * resolve comments
    
    * python-format
    
    * predict batch returns 2D array
    
    * Refactor python test
    
    * Test invalid inputs
    
    * merge
    
    * save model test
    
    * Save config
    
    * Remove files after test
    
    * Portable binary
    
    * Resolve comments
    
    * Fix python import sorting
    
    * Add deployment config rst

commit 0be805336f295427186ee5f69ff82b6234151aed
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Fri Sep 30 00:28:36 2022 +0530

    added isort formatter to organise imports in python files (#852)
    
    * added isort formatter and check lets see if it works
    
    * applied isort formatter and now see about github checks
    
    * used profile as black to resolve conflicts
    
    * see if this actually works the ci actions
    
    * combined isort and python under one roof
    
    * forgot to add pip3 install isort

commit 0fb31fbaf7022bf8d509306efbf5b748036b1d41
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 29 13:37:35 2022 -0500

    Deployment config for auto-classifiers  (#823)
    
    * Model and dataset config
    
    * Rename text config
    
    * deployment config done
    
    * ModelPileline mostly complete
    
    * working on python bindings
    
    * Use string instead of char
    
    * const and option params working
    
    * UserSpecifiedParameter working
    
    * Python bindings compiling
    
    * train/eval with filename
    
    * Train/eval python bindings
    
    * Fix pybind issue
    
    * Working for text classifier
    
    * Allowed options, clean up configs, disable summary in release
    
    * Remove accidental import
    
    * predict and predict_batch
    
    * python format
    
    * cpp format
    
    * Rename state-> factory
    
    * Add comment for dataset config structure
    
    * Remove loss hyperparameter
    
    * Resolve comments
    
    * Make size option part of user specified params
    
    * resolve comments
    
    * python-format
    
    * predict batch returns 2D array
    
    * Refactor python test
    
    * Test invalid inputs
    
    * Resolve comments

commit 728f8e443cd2721e5599f2b07ddbd7b40bd9d5a2
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Thu Sep 29 19:00:26 2022 +0530

    Avoid Normalising if base value is zero for input gradients (#851)
    
    * don't normalise for base value zero
    
    * test cases for no inf on gradients side and indices return on sparse amd dense inputs
    
    * hate vs code
    
    * sweet message

commit 9928357313b3056e643532ec569424ef90c078f2
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Sep 29 00:43:54 2022 -0500

    Refactoring the distributed package to take in a Bolt model (#809)
    
    * Cleaning up C++ distributed training context
    
    * Adding distributed capabilities to all nodes
    
    * Cleaning up python distributed wrapper
    
    * In a very rough state, will definetely not work
    
    * Kind of working now
    
    * Starting to come together ish
    
    * It's actually training now
    
    * Basic mnist training working
    
    * Adding general pickling function
    
    * Serializing train config as well now
    
    * Circular communication working now too
    
    * Formatting and cleaning up TODOs
    
    * Cleaning up imports, adding batch size, adding distributed pymark
    
    * Adding check to make sure model parameters are same across nodes
    
    * Adding check to make sure model parameters are same across nodes
    
    * Adding new method to MockNode
    
    * Fixing segfault from pybind pointers
    
    * Fixing pointers the right way this time
    
    * Fixing python tests
    
    * Fixing set_compressed_weight_gradients method
    
    * Responding to first set of pr comments
    
    * Changing to method name compute_and_save_batch_gradients
    
    * Updating naming
    
    * Removing extra return Trues
    
    * Finishing responding to Nick's comments
    
    * Formatting
    
    * Responding to last round of pr comments

commit ccc43428522003d2811f08ab2cca5cfa3923aff3
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Sep 28 23:15:07 2022 -0500

    version bump (#845)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit dc15ca6b076dd529126d4f9897f02e6dfd4201b3
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Sep 28 23:06:05 2022 -0500

    [7/?] Sequential python tests (#844)
    
    * Fixing user item history block
    
    * Fixing user count history block
    
    * structs for new api
    
    * rewire
    
    * pybind
    
    * added temporal autotuning
    
    * Autotuned
    
    * docs for train + evaluate
    
    * docs for explain and predict
    
    * fixed notes bullet points
    
    * load save docs
    
    * fix sorting order
    
    * initial tests
    
    * reaaaalll close
    
    * done writing docs
    
    * final
    
    * finish tests
    
    * finish tests
    
    * pyformat
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 1e16164c969f081cc85ec4e343722c7e0a695367
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Sep 28 22:37:10 2022 +0530

    Add docker deletion step to benchmark action workflows (#813)

commit f9ef7ebe36569350d15d077eedc8c70772abccce
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Wed Sep 28 14:00:21 2022 +0530

    One set parameter ref (#833)
    
    * one set function
    
    * Remove from_compressed
    
    * Add comment for order
    
    * changing comments
    
    * Improve comment quality

commit b29588cb3edecd8416e3900b3d268d6b2db7f33a
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Sep 27 14:34:37 2022 -0500

    Example pybind docs using Google format (#831)
    
    * Docs generation basically working
    
    * Training example doc
    
    * Reformatting and uncommenting
    
    * Going to test on the current branch
    
    * Documenting special members like constructors too
    
    * Python formatting
    
    * Removing DocUpdates for build docs target

commit d8557205d8377803a95342b8b3f1e0cd9874a761
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Tue Sep 27 23:17:30 2022 +0530

    Cmake lists formatter and CI check for CMakelist formatting (#812)
    
    * path towards format our out of order cmakefiles
    
    * check cmake-format
    
    * see if this works
    
    * added cmake formatter
    
    * apply formatter
    
    * apply formatter
    
    * -iname to -name

commit ec8b4e76424d0689583a93e6ca10674d88ad104d
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Tue Sep 27 22:29:36 2022 +0530

    Add KeyboardInterrupt (Ctrl-C) via Callbacks (#794)
    
    * Add KeyboardInterrupt via Callbacks
    * Make KeyboardInterrupt callback optional

commit 8745babfd9d896ea9aae8ebdb3e7b0e9542f76b9
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Mon Sep 26 22:43:53 2022 +0530

    Count sketching compression (#802)
    
    * basic
    
    * basic stuff, added methods,
    
    * basic dragon, a lot of debugging left, to change wrong shapes getting
    
    * added a few print statements here and there, few bugs
    
    * default compressed vector class added, tests to be added yet, to-do: setting gradients from a compressed vector, writing a decompress function for it
    
    * adding original_size and decompress methods
    
    * added decompressVector to DefaultCompressedVector
    
    * changed the order of initialization of dragon class variable
    
    * smol methods like get set and all
    
    * returning a dictionary instead of a tuple now
    
    * added a set gradients feature, numpy array const casting problems fixed, have to optimize to avoid a lot of copying
    
    * added tests for dragon vector
    
    * custom copy constructors, making non-explicit copy constructor for dragon, adding move, = and swap to the vector classes
    
    * changed the constructor to remove duplication
    
    * merged threshold functions into one, removed srand and rand, using mt19937 now, passing a seed for random sampling for reproducibility
    
    * adding comments to CompressionUtils.h
    
    * changed the splitVector function, made the loop more readable
    
    * removing concat
    
    * added comments to dragonvector, removed sketch_size as an internal feature for the dragon vector, made assign function non-virtual
    
    * added std::move inside the + operator in dragonvector, ig no more new copies being created
    
    * added a test class for DefaultCompressedVector, added an rvalue constructor to default to avoid copying
    
    * fixed CMake file
    
    * commitmessage
    
    * not returning compressed vector objects
    
    * not working rn, some namespace error, ZN7testing16AssertionSuccessEv not found in flat namespace
    
    * private added to cmake lists
    
    * fix cmake bug, should not use glob_recurse at all
    
    * removed murmur hash, started using universal hashing, modified the universalhash file to use the random seed
    
    * started using initialization lists in constructors
    
    * remove uint
    
    * formatting
    
    * added functions to dragon_vector to cast compressed_vector object to dragon_vector object, added functions -> addVectors, concatVectors to dragon, made a factory method for compressing and decompressing , correctness of factory method to be checked
    
    * removed default compressed vector
    
    * fixed gitignore
    
    * fixed MurmurHash.cc
    
    * removed the magic number 1 from compression utils
    
    * removed copy constructor
    
    * fixed copy constructor, default copy now
    
    * fixing distribution name
    
    * removed error messages
    
    * changing variable names a bit, modifying function name, decompressVector to decompress
    
    * integration, dynamic casting, dispatch things
    
    * Clean up the Compression Interface
    
    This commit cleans up the compression interface by removing
    several functions like add, split, amongst other things
    We will have to add these functionalities later but
    waiting to figure out a safer and cleaner way to work
    with RTTI of compressed vector without dynamic cast
    
    * Add python unit tests and integration tests
    
    This commit adds three python tests where we check the get, set features
    for dragon vectors. Also an integration test where  we train the model
    only using the compressed dragon gradients. Increased the learning rate
    to 0.002 instead of 0.001.
    
    The model is trained only on the compressed weight gradients, biases are
    left as it is.
    
    * Merge compresseion factory and dragon vector into one
    
    This commit cleans up the PR and makes a single file for
    dragon vector, compressed vector, and compression factory
    
    * Remove redundant .h files
    
    * Change getCompressionScheme to type
    
    In compressed vector, changed getCompressionScheme function to
    type. Now call compressed_vector->type() to get the  type of the
    vector.
    
    * Remove Split and printVector methods
    
    * Add compress and set to Parameter Inference
    
    Now, you can call .compress on Parameter Reference and specify your own compression
    scheme. You can also call .set(compressed_vector, compressed=True) for setting
    the parameter reference using your own compressed vector. .set works normally as
    before with default value of compressed being False.
    
    * Change Spelling Error in DistributedBolt
    
    * Add integration tests for the compression interface
    
    This commit adds tests namely get set tests and a training
    test. For some reason, the  training test in dag api gives
    a much lower accuracy whereas the same test gives a high
    accuracy in boltpython. The get set functions are working
    fine which means there is a problem with updating the gradi-
    -ents somewhere.
    
    * Small commit, adding test_dragon.py
    
    * Make compressed training work
    
    With this commit, now we can pass around a dragon vector to the
    model for training and the model will train. Gives a reasonable
    accuracy on simple numpy training data.
    
    * Reset the BoltPython* files
    
    * Fix Tests
    
    Fixed the training test function now
    
    * Remove test_compressed_training call from file end
    
    * Remove compressed flag from ParameterReference
    
    Checking the datatype of the py::object to figure out whether it
    is a compressed vector or a NumpyArray
    
    * Change TODO format, Remove Header Comment
    
    * Fix Initialization lists, logic error statement
    
    * Remove assign method
    
    * Make seed_for_hashing uint32_t, remove duplicated threshold function,, magic number 20
    
    * Comment original size
    
    * Make getThresholdForTopK simpler. Remove nits
    
    getThresholdForTopK -> thresholdForTopK.
    takes an argument: sample_population_size
    takes top_k as an argument
    returns the threshold for top_k
    
    * Changing function names, adding comments in compression utils
    
    * Clean DragonVectorTest, Modify CMakeLists, Change names of functions, remove utils.py file
    
    * Fix num_samples name
    
    * Add Comments, Make utils functions more generic
    
    * Fix naming scheme in test_dragon.py, make gradients->values
    
    * first commit
    
    * Adding comments
    
    * Convert pydict to count sketch and vice versa
    
    This commit introduces a functionality of exporting compressed vectors to python
    in the form of a dictionary, and vice versa
    
    * python testing
    
    * small changes
    
    * making sketch size force odd
    
    * Add test class to CountSketch
    
    * Resolve Comments, Add richer explainations to GraphPython.cc
    
    * Remove Pragma from set
    
    * Fix integration test for count_sketch
    
    * Remove uint and compression density
    
    * Fix efficiency dragon vector test, add TODO
    
    * Serializer compression (#760)
    
    * Add serialize method and deserialize method
    
    Change int seed for hashing to uint32
    
    * Fix Serializer
    
    This commit fixes the serializer. We now have a constructor  for the
    dragon vector class that accepts a stringstream. No function called
    deserialize now.
    
    * Add serializer to CountSketch
    
    This commit adds a serializer to the count sketch class.
    -fopenmp issues in this commit at the moment.
    
    * Remove uint32 from header, Remove readBinaryString func
    
    This commit removes readBinaryString function from Compression
    Utils.h file
    
    * Add serialization size
    
    * Add serialize size to count sketch
    
    * Add py::bytes to std::string conversion
    Starting with this commit, Parameter reference can now
    accept a py::byte object and make a compressed vector
    from the byte object. There is an implicit type-casting
    from py::bytes to std::String which we have to profile. This
    type casting makes use of a copy function.
    
    * Initialize bytes object directly from stringstream
    
    * Add concat to the compression interface (#797)
    
    * Add concat to the compression interface
    This commit exposes concat feature to python. You can
    now make a list of compressed vectors in python and
    send them to C++ to concatenate them. A test has also been
    added to test_dragon to test concat. I do not think so we
    need to write a seperate test for count sketches as we only
    need to test the data transfer from c++ to python and back.
    
    * Fix nits
    
    * Fix Nits
    
    * Remove dynamic casting horror from CompressionFactory
    concat in compression factory looks much simpler now
    there is a pure virtual function in the Compressed Vector
    class called extend that accepts a unique pointer to
    a Compressed Vector object. The implementation of ext
    end in derived classes uses dynamic casting. So now
    dynamic dispatch for concat looks kinda slick. :D
    
    * Add serialize to an array
    Up till now, we had been working with stringstreams to ser-
    ialize data. This is kind of inefficient because stringstreams
    have to own the underlying string. Hence, there are copies
    involved. Also, to transfer stringstreams to python, we have to
    first get the string from the stringstream which is a copy oper-
    ation and then further converted into python byte array or what-
    ever. We can rather work with char arrays. Since, char is a much
    more primitive datatype and we have more control over how it is
    tranferred and constructed, we can make things more efficient. I
    am thinking of transferring the ownership of this char array
    to python. This way, we wouldn't make any copies or anything.
    
    * Add constructor dragon vector
    This constructor can take in a char array and deserialize it
    into a dragon vector
    
    * Add char array serializer to Count Sketch
    Count sketch also has a char array serializer now,
    and added a corresponding constructor for the same.
    ToDo: Converting char  array to python object without
    copying
    
    * Remove py bytes serialized logic
    A lot of things in this commit. Now, char arrays work end
    to end with python.
    
    * Test count sketch test, Remove Print statements
    
    * Fixing pragma
    
    * Plant an enum into the serialized compressed vector.
    
    * Solve nits
    Move using compressed vector to a more global scope inside
    the parameter reference class.
    Remove useless headers.
    Remove print statements from python tests file
    
    * Remove multiple copies of  same compressed objects
    Deleted copy costructor and then fixed places wherever an error
    was being thrown. But there is still a copy constructor at the time
    being.
    
    * Adding comments
    
    * Change CompressedVector to FloatCompressedVector
    make_unique in CompressionFactory is simpler now
    Extend methods in dragonvector and count sketch are also
    simpler now. Made a few naming changes
    
    * Add cstring to header files
    
    * Change test function names
    
    * Add comment to concat in compression factory
    
    * Fix serialized_size, earlier we were overapproximating it
    
    * Pretty serializer compression (#807)
    
    * Add helper classes for serializer
    Simplify concat in compressed vectors
    
    * Remove unneeded header files from test
    
    * std::variant is now working, refactoring done ig
    
    * Refactoring python tests for count sketches and dragon vector
    Tests are a lot simpler now, std::variant and visitor pattern
    working.
    
    * Clean Tests and remove unnecessary headers
    
    * Remove headers from test.cc files
    
    * Clean code
    
    * Handle invalid enum type in switch case
    
    * Change comment in CountSketch.cc
    
    * Refactor tests
    
    * nits and comments
    
    * Change np.ravel to flatten
    
    * Lower case compression string, modify comments in test
    
    * Add comment
    
    * Change comment Serializer.h
    
    * Change compressed vector name
    
    * Remove redundant constructors
    
    * Remove empty constructors
    
    * Make common functions virtual
    
    * Add comments to CountSketch
    
    * Nuke GetSetCountSketch test, add comments to args, add default constructor back
    
    * Remove seed_for_hashing_indices and seed_for_sign
    Serialized size should not change because we are still
    writing the seeds to the char array except that now we do
    not have class members storing seeds. We directly initialize
    the hash vectors and infer seeds for them while serialzing
    and deserializing
    
    * Change size_t to uint32_t
    
    * Remove uint32_t header file yikes
    
    * Add comments, exceptions, pragma
    Pragma to set inside count sketch
    Exceptions to add and except
    Comments and TODOs added
    
    * Remove compression_scheme string as input
    We only take a flag telling whether we are
    setting from a compressed vector or a normal numpy array.
    
    * Trying MSVC
    
    * yml file change and test parameters
    
    * Modify cpp-test.yml
    
    * Change test-pypi.yml and reset other .yml
    
    * Reset test-pypi.yml file, modify hidden dim in test_compressed_training
    
    * Add TODO
    
    Co-authored-by: Shubh Gupta <shubh@Shubhs-MacBook-Air.local>

commit 521b5ce284bc153c42922df30c88a28917526f51
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Mon Sep 26 20:29:42 2022 +0530

    optimizer init when load the saved model and call getinputgradients (#827)

commit 3da57531f97ead585c1841e3e6e966caa71d404e
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Mon Sep 26 13:29:54 2022 +0530

    rca fix (#826)
    
    * rca fix
    
    * formatting
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit e8621b5c23fbefbe4f1e18787bcd8bceb9a6581e
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sun Sep 25 17:56:07 2022 -0500

    bump version (#824)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 48c95c31a951109aad3c094ea068fcbc98f28e47
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sun Sep 25 17:53:12 2022 -0500

    fix windows build issue (#825)
    
    * fix windows build issue
    
    * more gmtime fix
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 7a106f7978b0ee39cc0061e53a309411dbcd2edc
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sun Sep 25 15:34:42 2022 -0500

    [4/6] Count min sketch-based count history (#820)
    
    * changes in just blocks for rca
    
    * added rca parts and explain method for sequential
    
    * changes to blocks
    
    * formatting
    
    * changes to some blocks
    
    * removed print statements
    
    * first set of comments
    
    * merge and resolve
    
    * removed boolean in build segment and directly added in columnar sample
    
    * block changes
    
    * added comments and changed variable names
    
    * added struct method for returning the responsible keys
    
    * response to suggestions
    
    * comments and encoding utils
    
    * comment
    
    * cope up with changes in 1st ranker
    
    * final changes for this branch
    
    * merge with rca 1
    
    * chnage col
    
    * Cleaned up seqclass predict single
    
    * comments
    
    * format
    
    * format
    
    * remove unnecessary?
    
    * remove unnecessary
    
    * changed to one struct
    
    * some changes
    
    * some changes in block interface
    
    * fixed predict single serialization issue
    
    * remove prints
    
    * format
    
    * count history map
    
    * resolved some of Nick's comments
    
    * fixed Yash's comments
    
    * resolved David's comments
    
    * resolved david's comments
    
    * fixed build issue
    
    * fixed explain test and formatted
    
    * [3/6] RCA[2/2] (#765)
    
    * added rca parts and explain method for sequential
    
    * changes to blocks
    
    * formatting
    
    * removed print statements
    
    * merge and resolve
    
    * removed boolean in build segment and directly added in columnar sample
    
    * added struct method for returning the responsible keys
    
    * cope up with changes in 1st ranker
    
    * merge with rca 1
    
    * chnage col
    
    * format
    
    * changed to one struct
    
    * format
    
    * resolved david's comments
    
    * fixed explain test and formatted
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    * remove bad include
    
    * slight cleanup
    
    * fixed granularity
    
    * added error checks
    
    * more theoretical checks
    
    * fix nits from before
    
    * fix attempt for asan build
    
    * resolved Josh's comments
    
    * format'
    
    * [5/6] Adding a user count history block. Sequential block for numerical instead of categorical features (#821)
    
    * first commit
    
    * resolve Nick's comments
    
    * fixed after merge with dense seq even smaller
    
    * added nan checks
    
    * fixed explanation method
    
    * merged and fixed
    
    * merged and fixed
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    * [6/6] Adding dense sequential features to sequential classifier (#822)
    
    * trend block
    
    * trend block
    
    * fixed as much as possible
    
    * necessary changes
    
    * more fixing
    
    * trend block on sequential classifier
    
    * sample script
    
    * works now
    
    * explanation bbyy
    
    * explanation
    
    * always with tru label
    
    * formatting and refactoring dense seq block
    
    * user count history block
    
    * tested dense sequential block
    
    * remove old trend block
    
    * fixed explanation
    
    * modified sequential utils to use new dense sequential block
    
    * format
    
    * removed trend block test
    
    * more cleanup + failed seialization fix
    
    * uncomment whats not supposed to be commented
    
    * dense seq done
    
    * first commit
    
    * resolve Nick's comments
    
    * fixed after merge with dense seq even smaller
    
    * added nan checks
    
    * fixed explanation method
    
    * merged and fixed
    
    * halfway
    
    * fixed
    
    * string to granularity done
    
    * user count block accounts for time lag
    
    * python binding
    
    * some variable changes
    
    * move stringToGranularity and fix typo
    
    * changed variable names
    
    * fixed test
    
    * fixed test
    
    * error message and formatting
    
    * docs
    
    * resolved Josh's comments
    
    * resolved Josh's comments
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Yashwanth Adunukota <yash@thirdai.com>
    
    * pragma once
    
    Co-authored-by: Yashwanth Adunukota <yash@thirdai.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: yashuroyal <106241157+yashuroyal@users.noreply.github.com>

commit 034bc6af220c1336511b60918ae829947be1041d
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Sun Sep 25 06:55:32 2022 +0530

    [2/6] RCA[1/2] - Blocks modification For explanations (#764)

commit ce0bdfc4972d166fcc23086e2b560fa8404cf97c
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Sat Sep 24 16:22:31 2022 -0500

    [1/6] Added predict single method to sequential classifier.  (#817)
    
    * Cleaned up seqclass predict single
    
    * comments
    
    * format
    
    * remove unnecessary?
    
    * remove unnecessary
    
    * fixed predict single serialization issue
    
    * remove prints
    
    * fixed Yash's comments
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 7d79318c6baceded560e5eabb47bbbf3d8fb049e
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Sep 23 17:06:19 2022 -0500

    update psutil import (#819)
    
    * mlflow updates
    
    * update comment
    
    * psutil

commit 48280bfbfbea7897060a28708191d87488bfa5eb
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Sep 23 14:48:36 2022 -0500

    MlflowCallback: optional import and post run utils (#818)
    
    * mlflow updates
    
    * update comment

commit f908b01da0206117f6c8c59f37502c7f26a016cc
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Sep 23 11:06:04 2022 -0500

    Abstracting out a lowercase method for strings (#816)
    
    * Abstracting out a lowercase method for strings
    
    * Adding support for string views
    
    * Adding back const

commit 56f2b447317f6447c102498eb69c1187140b7e50
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Sep 22 17:41:40 2022 -0500

    [BugFix] ThreadSafeVocabulary segfault on invalid uid map (#814)
    
    * test
    
    * reorg logic
    
    * name test
    
    * Update dataset/src/utils/ThreadSafeVocabulary.h
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>

commit cc3cf8cac0b63b5b624581aeb66b6238fe705ab3
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 22 17:32:21 2022 -0500

    Fix dataset.from_numpy (#815)

commit d89c2234538b472d777e2e55ded09ad0acff969b
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Sep 21 17:23:47 2022 -0500

    [2/2] Metadata pybinds (#796)
    
    * refactor tabular metadata
    
    * fix bug
    
    * metadata pybinds
    
    * fix py test and lints
    
    * partial changes
    
    * right path
    
    * refactored
    
    * small fixes
    
    * remove file
    
    * small changes
    
    * pyformat
    
    * update pybind
    
    * update error message
    
    * num columns change
    
    * comment
    
    * expose all
    
    * import
    
    * fix import
    
    * merge

commit 423e54765e81dd6ef62038f4dd07a554441c88fa
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Sep 21 13:50:40 2022 -0500

    [1/2] Clean up tabular metadata (#795)
    
    * refactor tabular metadata
    
    * fix bug
    
    * partial changes
    
    * refactored
    
    * small fixes
    
    * pyformat
    
    * update error message
    
    * num columns change
    
    * comment

commit ccce7ed3e724cf2b149386f63d65e51d162b40cd
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Sep 21 03:05:07 2022 -0500

    Adding Learning Rate Scheduling Callback (#783)
    
    * add learning rate scheduler callback
    
    * respond to PR comments
    
    * fix linting errors
    
    * respond to PR comments
    
    * final commit

commit d6b447d0116c5f9da025964cd272ee89f3800103
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Sep 20 22:57:25 2022 -0500

    Fix python test for wheel build (#804)

commit c218445fb85f98c82c9671855d246f8ec8fdad29
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Sep 20 21:07:16 2022 -0500

    Refactor auto classifiers into new directories (#801)
    
    * Generalized Auto Classifier
    
    * Use dataloaders as api for auto classifiers
    
    * Streaming training for auto classifier
    
    * add metrics to predict return
    
    * Close file on restart
    
    * use seek to restart file
    
    * Start implementing auto classifiers with new api
    
    * Rename and add serialize
    
    * Re-implement text classifier
    
    * Multi-label-text classifier working
    
    * Tabular classifier
    
    * Cleanup autoclassifier base
    
    * Add tabular classifier
    
    * rename predict single
    
    * did something
    
    * Change to const&
    
    * Implement tabular classifier
    
    * Fix construct numpy arrays
    
    * Tabular classifier tests working
    
    * Add sequential classifier
    
    * Remove thresholding from base class
    
    * Move threshold to multilabel text classifier
    
    * Finish resolving comments
    
    * Make pointer
    
    * Implement interface changes
    
    * Make get index static
    
    * Fix python bindings
    
    * minor bug fixes
    
    * Fix tests
    
    * remove duplicate method
    
    * Cleanup interface
    
    * Migrate tests
    
    * Tabular classifier experiment
    
    * Fix script
    
    * fix text classifier benchmark
    
    * Tune text classifier test
    
    * Fix test
    
    * Fix text classifier test
    
    * use factory methodsg
    
    * C++ format
    
    * Store batch processor in tabular classifier
    
    * fix logic in tabular
    
    * resolve comments
    
    * add fmeasure
    
    * Update threshold method
    
    * Fix fmeasure
    
    * Add tabular tests
    
    * python format
    
    * Resolve comments
    
    * Shuffle in multilabel text classifier
    
    * Allow for overriding rehash/rebuild
    
    * Fix return
    
    * Undo odd changes
    
    * remove old multi label classifier python bindings
    
    * rehash + rebuild
    
    * Remove join tokens to sentence
    
    * Refactor auto classifiers into new directories
    
    * Refactor into seperate files
    
    * Refactor into seperate files
    
    * C++ format
    
    * Avoid redownloading for text classifier test

commit 5d7a840525e997a5b60e7d8109a06506d4b5e7d3
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Sep 20 20:40:37 2022 -0500

    Mlflow Callback (#800)
    
    * draft
    
    * working tests
    
    * revert mach changes
    
    * fix test
    
    * pyformat
    
    * fix tests and add comment
    
    * mocked unit test
    
    * update
    
    * fix run_name
    
    * psutil

commit aaa0e801d850cda1685fb74cddb0fedde8f15f61
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Sep 19 23:15:35 2022 -0500

    Migrate MultiLabelTextClassifier (#788)
    
    * Generalized Auto Classifier
    
    * Use dataloaders as api for auto classifiers
    
    * Streaming training for auto classifier
    
    * add metrics to predict return
    
    * Close file on restart
    
    * use seek to restart file
    
    * Start implementing auto classifiers with new api
    
    * Rename and add serialize
    
    * Re-implement text classifier
    
    * Multi-label-text classifier working
    
    * Tabular classifier
    
    * Cleanup autoclassifier base
    
    * Add tabular classifier
    
    * rename predict single
    
    * did something
    
    * Change to const&
    
    * Implement tabular classifier
    
    * Fix construct numpy arrays
    
    * Tabular classifier tests working
    
    * Add sequential classifier
    
    * Remove thresholding from base class
    
    * Move threshold to multilabel text classifier
    
    * Finish resolving comments
    
    * Make pointer
    
    * Implement interface changes
    
    * Make get index static
    
    * Fix python bindings
    
    * minor bug fixes
    
    * Fix tests
    
    * remove duplicate method
    
    * Cleanup interface
    
    * Migrate tests
    
    * Tabular classifier experiment
    
    * Fix script
    
    * fix text classifier benchmark
    
    * Tune text classifier test
    
    * Fix test
    
    * Fix text classifier test
    
    * use factory methodsg
    
    * C++ format
    
    * Store batch processor in tabular classifier
    
    * fix logic in tabular
    
    * resolve comments
    
    * add fmeasure
    
    * Update threshold method
    
    * Fix fmeasure
    
    * Add tabular tests
    
    * python format
    
    * Resolve comments
    
    * Shuffle in multilabel text classifier
    
    * Allow for overriding rehash/rebuild
    
    * Fix return
    
    * Undo odd changes
    
    * remove old multi label classifier python bindings
    
    * rehash + rebuild
    
    * Remove join tokens to sentence

commit fe52caee5108ca54c7b089696c8c167052ab57df
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Sep 19 13:45:41 2022 +0530

    Refactoring communication class for distributed bolt (#784)
    
    * Done Separating
    
    * Added docstring and rPLACED COMM WITH tRAINER
    
    * Added AVAILABLE_METHODS to communication class, removed some redundant change
    
    * Removed subwork communication
    
    * Revert "Removed subwork communication"
    
    This reverts commit a76bcad174a4961c1ad72bc8689d0b4731eebdb1.
    
    * Removed None assignment to workers
    
    * Solved issue with linear communication[Out of Memory]
    
    * cHANGED dOCSTRING fORMAT
    
    * Chnaged variable name to w_gradients
    
    * Nits
    
    * Python Formatting
    
    * unsaved changes
    
    * Refactoring Bug
    
    * Python Formatting
    
    * Updated the update_id from -ve values to something meaning ful
    
    * Modifying test_all_reduce_circular_communication for new code
    
    * Added appropriate changes to tests
    
    * Done with changes
    
    * Adding changes for rst file
    
    * hi
    
    * Making examples default
    
    * Making examples default
    
    * uncommented pytest-xfail
    
    * nots
    
    * Added changes to tests
    
    * changed some functions to private
    
    * Python Formatting

commit f6aa11277062ba6665957c719cbce55209b65f1d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Sep 16 16:31:42 2022 -0500

    Print compiler in build (#798)

commit 2f2524e4c9867db353e0ab406cd6deba033b030e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Sep 16 16:27:56 2022 -0500

    Dlrm dot product attention (#730)
    
    * DLRM Dot Product Feature Interaction
    
    * dot product
    
    * forward pass
    
    * backward pass
    
    * Embedding tests work
    
    * Test for dlrm attention
    
    * cleaning up layer test
    
    * Refactor embedding tests
    
    * Cleanup embedding config
    
    * Refactor config and add comments
    
    * Add comment
    
    * cleanup dlrm attention layer
    
    * fix python test and update embedding summary
    
    * Fix assertion
    
    * Add concatenation reduction to embedding layer
    
    * ready for test
    
    * Fix backprop in attention node
    
    * Fix dlrm attention summary

commit 63bfaa7fc4122ceafd194f4de58163d038e5fd5f
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Sep 16 14:40:08 2022 -0500

    Hosting docs on t2 micro instance using nginx, and fixing docs to include all of our modules (#793)
    
    * Nginx server conf
    
    * Commiting manual way, now going to try automatic
    
    * Added all docs
    
    * Fixing order
    
    * Adding function you can run on blade to sync the docs
    
    * Adding comments to explain things
    
    * Removing unneeded comment
    
    * Adding TODO for auto sync
    
    * Adding sync docs action
    
    * Renaming sync docs job
    
    * Completing sync-docs.yml
    
    * Fixing scp command
    
    * Removing duplication in rst files and fixing upload script
    
    * Workflow only runs on main

commit 94709156f9734c7523b2507de3957dda05b49c54
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Fri Sep 16 18:52:03 2022 +0530

    Remove redundant epoch printing (#792)
    
    * Remove redundant epoch printing
    
    * Adding a colon to progressbar start-string

commit 76b5bd49c48f131f3cacd0e20a3f718de14be31b
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 15 11:22:21 2022 -0500

    Bump version 1.10 (#790)

commit f5e5ffa6fd678e1e1c9dc9c3cc3d84c8a687776d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 15 08:31:05 2022 -0500

    Fix stream loading (#786)
    
    * Generalized Auto Classifier
    
    * Use dataloaders as api for auto classifiers
    
    * Streaming training for auto classifier
    
    * add metrics to predict return
    
    * Close file on restart
    
    * use seek to restart file
    
    * Start implementing auto classifiers with new api
    
    * Rename and add serialize
    
    * Re-implement text classifier
    
    * Multi-label-text classifier working
    
    * Tabular classifier
    
    * Cleanup autoclassifier base
    
    * Add tabular classifier
    
    * rename predict single
    
    * did something
    
    * Change to const&
    
    * Implement tabular classifier
    
    * Fix construct numpy arrays
    
    * Tabular classifier tests working
    
    * Add sequential classifier
    
    * Remove thresholding from base class
    
    * Move threshold to multilabel text classifier
    
    * Finish resolving comments
    
    * Make pointer
    
    * Implement interface changes
    
    * Make get index static
    
    * Fix python bindings
    
    * minor bug fixes
    
    * Fix tests
    
    * remove duplicate method
    
    * Cleanup interface
    
    * Migrate tests
    
    * Tabular classifier experiment
    
    * Fix script
    
    * fix text classifier benchmark
    
    * Tune text classifier test
    
    * Fix test
    
    * Fix text classifier test
    
    * use factory methodsg
    
    * Create binary text classifier
    
    * Fix binary text classifier
    
    * Predict single batch
    
    * Test for predict batch
    
    * C++ format
    
    * Predict single c++ tests
    
    * batch predict tabular classifier test
    
    * Store batch processor in tabular classifier
    
    * fix logic in tabular
    
    * Add hidden layer param
    
    * Return numpy array
    
    * resolve comments
    
    * add fmeasure
    
    * Update threshold method
    
    * Fix fmeasure
    
    * Add tabular tests
    
    * python format
    
    * Add comment
    
    * Remove delete files
    
    * Resolve comments
    
    * Update binary text classifier
    
    * resolve comments
    
    * resolve comments
    
    * Fix createModel
    
    * Merge
    
    * Restore multi label tests
    
    * python format
    
    * Fix issue in empty dataset on stream

commit d4c8a4fbb14f8394fe53a18fce838390fc018266
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Thu Sep 15 11:26:52 2022 +0530

    Improve logging and restore compilation speeds (#785)
    
    * Previously Logging.h included Version.h for thirdai::version() to be visible in
      logs as follows:
    
          thirdai 0.1.9+<commit-sha>
    
      However, the setup_logging function being inline caused recompilation in every
      units including Logging.h hurting compilation speeds (Because Version.h is
      generated per compilation and change in commits trigger a change). This PR
      moves the function to a .cc file to be not inline. We need thirdai::version(..)
      for proper reproducible experiment tracking (baking commit into mlflow or logs
      is common practice to pinpoint to exact commit).
    
    * The namespace name log:: is in conflict with C standard math library's log
      function, so changing it to logging:: (Discovered while trying to use log in
      CategoricalCrossEntropy loss, can work around this by using std::log, but
      cleaner to pick and fix this early).
    
    * Enables clang-tidy-14 and LSP, which appear to scream louder than the Ubuntu
      20.04 clang-tidy-10. Bunch of missing braces in and if/else ladder are fixed,
      and _DEFINE, which is reserved in C/C++ standard are replaced to DEFINE.

commit c28ddc1295396fcf81b8174674f1ab5d8578ed68
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Sep 14 22:03:29 2022 -0500

    Metric tracking in TrainState (#770)
    
    * draft:
    
    * use train state in callbacks
    
    * finalizing changes
    
    * fix build errors
    
    * draft
    
    * fix trampoline to bind params by reference
    
    * add metric tracking
    
    * remove duplicate train state and add train accuracy test
    
    * pyformat
    
    * i forgot what i did
    
    * add train based stop test
    
    * comments and prefix bug
    
    * store all previous metrics, only early stop on validation metrics
    
    * epoch times
    
    * const reef for validation stuff
    
    * slightly change metric tracking
    
    * update train metrics
    
    * add metric aggregator to train state
    
    * update train metrics
    
    * clean up training and validation metric tracking
    
    * early stop bug
    
    * nicks comments
    
    * fix comment
    
    * remove print

commit 62e7331eebd85d1f8ffb5bd5b13de62cee75588f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Sep 14 15:04:17 2022 -0500

    [3/3] Csdisco classifier (#775)
    
    * Generalized Auto Classifier
    
    * Use dataloaders as api for auto classifiers
    
    * Streaming training for auto classifier
    
    * add metrics to predict return
    
    * Close file on restart
    
    * use seek to restart file
    
    * Start implementing auto classifiers with new api
    
    * Rename and add serialize
    
    * Re-implement text classifier
    
    * Multi-label-text classifier working
    
    * Tabular classifier
    
    * Cleanup autoclassifier base
    
    * Add tabular classifier
    
    * rename predict single
    
    * did something
    
    * Change to const&
    
    * Implement tabular classifier
    
    * Fix construct numpy arrays
    
    * Tabular classifier tests working
    
    * Add sequential classifier
    
    * Remove thresholding from base class
    
    * Move threshold to multilabel text classifier
    
    * Finish resolving comments
    
    * Make pointer
    
    * Implement interface changes
    
    * Make get index static
    
    * Fix python bindings
    
    * minor bug fixes
    
    * Fix tests
    
    * remove duplicate method
    
    * Cleanup interface
    
    * Migrate tests
    
    * Tabular classifier experiment
    
    * Fix script
    
    * fix text classifier benchmark
    
    * Tune text classifier test
    
    * Fix test
    
    * Fix text classifier test
    
    * use factory methodsg
    
    * Create binary text classifier
    
    * Fix binary text classifier
    
    * Predict single batch
    
    * Test for predict batch
    
    * C++ format
    
    * Predict single c++ tests
    
    * batch predict tabular classifier test
    
    * Store batch processor in tabular classifier
    
    * fix logic in tabular
    
    * Add hidden layer param
    
    * Return numpy array
    
    * resolve comments
    
    * add fmeasure
    
    * Update threshold method
    
    * Fix fmeasure
    
    * Add tabular tests
    
    * python format
    
    * Add comment
    
    * Remove delete files
    
    * Resolve comments
    
    * Update binary text classifier
    
    * resolve comments
    
    * resolve comments
    
    * Fix createModel
    
    * Merge
    
    * Restore multi label tests
    
    * python format
    
    * Fix save/load binary text

commit 6c10b46409d0969e260885fa0ad2508115fc279e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Sep 14 12:04:17 2022 -0500

    Disable checks for exceptions on windows (#787)
    
    * Disable checks for exceptions on windows
    
    * Fix reason
    
    * Fix import

commit 46357e9a4381da49f275ea3e2923d632b42a791c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Sep 14 11:18:13 2022 -0500

    [2/3] Batch predict (#772)
    
    * Generalized Auto Classifier
    
    * Use dataloaders as api for auto classifiers
    
    * Streaming training for auto classifier
    
    * add metrics to predict return
    
    * Close file on restart
    
    * use seek to restart file
    
    * Start implementing auto classifiers with new api
    
    * Rename and add serialize
    
    * Re-implement text classifier
    
    * Multi-label-text classifier working
    
    * Tabular classifier
    
    * Cleanup autoclassifier base
    
    * Add tabular classifier
    
    * rename predict single
    
    * did something
    
    * Change to const&
    
    * Implement tabular classifier
    
    * Fix construct numpy arrays
    
    * Tabular classifier tests working
    
    * Add sequential classifier
    
    * Remove thresholding from base class
    
    * Move threshold to multilabel text classifier
    
    * Finish resolving comments
    
    * Make pointer
    
    * Implement interface changes
    
    * Make get index static
    
    * Fix python bindings
    
    * minor bug fixes
    
    * Fix tests
    
    * remove duplicate method
    
    * Cleanup interface
    
    * Migrate tests
    
    * Tabular classifier experiment
    
    * Fix script
    
    * fix text classifier benchmark
    
    * Tune text classifier test
    
    * Fix test
    
    * Fix text classifier test
    
    * use factory methodsg
    
    * Predict single batch
    
    * Test for predict batch
    
    * C++ format
    
    * Predict single c++ tests
    
    * batch predict tabular classifier test
    
    * Store batch processor in tabular classifier
    
    * fix logic in tabular
    
    * resolve comments
    
    * add fmeasure
    
    * Update threshold method
    
    * Fix fmeasure
    
    * Add tabular tests
    
    * python format
    
    * Add comment
    
    * Remove delete files
    
    * Resolve comments
    
    * Merge
    
    * Restore multi label tests
    
    * python format
    
    * Restart gh actions

commit 78a80ea7f93b00def81ab95fc965b5e56f0c6fbd
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Sep 13 22:04:06 2022 -0500

    [1/3] Migrate autoclassifiers to new API (#759)
    
    * Generalized Auto Classifier
    
    * Use dataloaders as api for auto classifiers
    
    * Streaming training for auto classifier
    
    * add metrics to predict return
    
    * Close file on restart
    
    * use seek to restart file
    
    * Start implementing auto classifiers with new api
    
    * Rename and add serialize
    
    * Re-implement text classifier
    
    * Multi-label-text classifier working
    
    * Tabular classifier
    
    * Cleanup autoclassifier base
    
    * Add tabular classifier
    
    * rename predict single
    
    * did something
    
    * Change to const&
    
    * Implement tabular classifier
    
    * Fix construct numpy arrays
    
    * Tabular classifier tests working
    
    * Add sequential classifier
    
    * Remove thresholding from base class
    
    * Move threshold to multilabel text classifier
    
    * Finish resolving comments
    
    * Make pointer
    
    * Implement interface changes
    
    * Make get index static
    
    * Fix python bindings
    
    * minor bug fixes
    
    * Fix tests
    
    * remove duplicate method
    
    * Cleanup interface
    
    * Migrate tests
    
    * Tabular classifier experiment
    
    * Fix script
    
    * fix text classifier benchmark
    
    * Tune text classifier test
    
    * Fix test
    
    * Fix text classifier test
    
    * use factory methodsg
    
    * C++ format
    
    * Store batch processor in tabular classifier
    
    * fix logic in tabular
    
    * resolve comments
    
    * add fmeasure
    
    * Update threshold method
    
    * Fix fmeasure
    
    * Add tabular tests
    
    * python format
    
    * Resolve comments
    
    * Shuffle in multilabel text classifier
    
    * Allow for overriding rehash/rebuild
    
    * Fix return
    
    * Remove multi label classifier changes

commit 11efcc8b6dd084f83e7fe6e8b7b4ca8e45e9c4b7
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Sep 13 19:16:58 2022 -0500

    Fix relative import issue (#771)

commit 7b3f8920a201819f760466449506684616707f01
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Sep 13 12:01:31 2022 -0500

    Fixing benchmarking run script to report failures, and fixing previously silent failure (#781)
    
    * Fixing script to make sure it fails, then will fix actual problem
    
    * Fixing utils import in benchmarking scripts
    
    * Cleaning up adding the parent dir
    
    * Removing extra print

commit 1ab393f8fab5900e2530f0f6b646b9e12c688edc
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Sep 13 10:24:13 2022 -0500

    Fix logging in predict (#780)

commit 980cddd4bdd5778a6f952ec6951572e37ed529af
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Tue Sep 13 12:16:27 2022 +0530

    Fixes to get wheel builds back to green (#776)
    
    This resets the MacOS wheel builds to `gcc-11`.
    
    Builds with AppleClang after compiler switch (#663) have been working for a
    while now, until 206880d (See corresponding
    [builds](https://github.com/ThirdAILabs/Universe/runs/8226375532?check_suite_focus=true)).
    A sync with main at 515b273 broke Windows builds in many ways.
    
    1. #773 fixes a DragonVector OMP clang issue
    2. Existence of double OMP (perhaps from a numpy?) solved short term by an
       environment variable: 1786348
    3. A few tests related to exceptions are now failing, for which I have been
       unable to narrow down the source of. These tests are disabled just for Windows
       with 7caa15e
    4. Also throwing in 8844d3b to get rid of a `/openmp`, `/openmp:llvm` warning
       (this does not solve 2 from what I see from the build logs, it's
       independent).
    
    See also: TSK-561

commit 229eb4b4bac8bb79874edc9ad2398cd7491939e8
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Tue Sep 13 11:15:03 2022 +0530

    Build only _thirdai (no tests/all) via setup.py (#777)
    
    There is no need to wait for all the test executables to build while the
    package is being built via setup.py. From what I see locally, there is a long
    waiting for the test executables to build for a change that's only related to
    python (no testing, >2 min). Towards simplifying the situation, the bare
    minimum requirement (i.e _thirdai, which is the pybind target) alone is
    configured to be built via setup.py (while the wheel builds are in play).
    
    The time gain from not having to build a lot of executables should also reflect
    across CI and wheel builds.

commit 5c26dbfd2247d14121de556e607785ed6889bb15
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Mon Sep 12 11:34:18 2022 +0530

    Disable omp pragma in DragonVector::sketch (#773)

commit bf9335e37300514fbe44b70671087ed2f9db244f
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Mon Sep 12 10:36:10 2022 +0530

    Relax GH actions for wheel builds (#774)
    
    Earlier concurrent jobs would cancel other jobs, which is wasteful.
    Also, fail-fast:true being default cancels other workflows if any of
    Windows / Ubuntu / MacOS fails. This is perhaps an attempt to save CI
    minutes, but is pointless now that these run only on main and we may
    re-run only failed jobs.

commit 29341562ddb6eff3e2a3d326958ac85a7827097e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Sep 9 18:16:47 2022 -0500

    Generalized Auto Classifier (#736)

commit d1ff4372557eecd7a6ad29128ff349d450b96e56
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Sep 9 17:46:05 2022 -0500

    Add state to train() for callbacks (#767)
    
    * draft:
    
    * use train state in callbacks
    
    * finalizing changes
    
    * fix build errors
    
    * fix trampoline to bind params by reference

commit 6e24d0b311422a0d1939802088c968c2fbe6bc9a
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Sep 9 17:44:43 2022 -0500

    [3/?] Sequential classifier Mlflow experiment script (#752)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * streaming string lookup class
    
    * cmakelists
    
    * cmakelists
    
    * many tries
    
    * trials
    
    * trials
    
    * test quirks
    
    * test quirks
    
    * test quirks
    
    * cleanerish
    
    * speed test
    
    * I will get back to you old friend ...
    
    * proto
    
    * proto
    
    * user item history block
    
    * streaming string lookup categorical encoding
    
    * pragma
    
    * format
    
    * format
    
    * I added pragma omp instead of pragma once and that failed the build T-T
    
    * format
    
    * sequential classifier
    
    * compiles! Need to change UserItemHistoryBlockTests
    
    * script
    
    * seems like we're getting the results we want
    
    * recall at k metric
    
    * works ish!
    
    * non parallel generic batch proc
    
    * dense hid lay
    
    * support mb
    
    * support mb
    
    * remove what isnt sposed to be there
    
    * fixed user item test
    
    * works!
    
    * fixed the user item history test
    
    * remove unnecessary
    
    * format
    
    * format
    
    * format
    
    * format
    
    * show time
    
    * .
    
    * const
    
    * multi label cat tracking
    
    * see if it works?
    
    * can do multi label
    
    * api
    
    * no cat delim
    
    * resolving Dave's comments
    
    * static factory methods
    
    * static methods
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc
    
    cleaner current_history.insert
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * single string categorical encoding
    
    * comments
    
    * cerealization
    
    * remove unnecessary constructor
    
    * more testo
    
    * more comments
    
    * almost there
    
    * cleaner trycatch
    
    * format
    
    * lint issues
    
    * use deque
    
    * awright
    
    * fixed merge
    
    * some renaming
    
    * vocab size
    
    * moving to new vocab
    
    * fix method name
    
    * some fixes
    
    * cleanupss
    
    * merged with thread safe vocab again
    
    * remove metric agg changes
    
    * remove autoclassifier base changes
    
    * remove autoclassifier base changes
    
    * remove categorical block changes
    
    * i think it works
    
    * cleanups
    
    * cleanup
    
    * added serialization
    
    * added load save
    
    * need to fix
    
    * serialization
    
    * fixed serialization
    
    * format
    
    * fixed serialization
    
    * refactor text block. Haven't fixed things that depend on this
    
    * refactor text block. Haven't fixed things that depend on this
    
    * refactor text block. Haven't fixed things that depend on this
    
    * delete old stuff bby
    
    * changed all c++ occurrences
    
    * changed all python occurrences
    
    * refactored categorical block
    
    * changed all C++ occurrences of categorical block
    
    * changed all python occurrences
    
    * fix
    
    * fixes
    
    * fix tests
    
    * comments and cleanup
    
    * make returns shared ptr to user item history block
    
    * resolve comments
    
    * Categorical tracking (#682)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * proto
    
    * proto
    
    * user item history block
    
    * pragma
    
    * format
    
    * I added pragma omp instead of pragma once and that failed the build T-T
    
    * format
    
    * format
    
    * .
    
    * multi label cat tracking
    
    * static methods
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc
    
    cleaner current_history.insert
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * almost there
    
    * use deque
    
    * moving to new vocab
    
    * some fixes
    
    * merged with thread safe vocab again
    
    * added serialization
    
    * serialization
    
    * fixed serialization
    
    * make returns shared ptr to user item history block
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * sequential classifier cleanup
    
    * fix build
    
    * serialization fix
    
    * oop that wasnt supposed to be there
    
    * added test
    
    * comments
    
    * Update bolt/src/auto_classifiers/sequential_classifier/SequentialClassifier.h
    
    * Update bolt/src/auto_classifiers/sequential_classifier/SequentialClassifier.h
    
    * fixed stuff
    
    * explanation / comment
    
    * fix compile
    
    * variants!!!
    
    * prints many predictions
    
    * tested hehe
    
    * format
    
    * multi class user item history block
    
    * Standard next item prediction metric
    
    * missing component
    
    * fix
    
    * fix
    
    * benchmarks
    
    * combined utils
    
    * no more hyperparams
    
    * much cleaner than before
    
    * much cleaner than before
    
    * new tests for multi class sequential classifier!
    
    * remove sampled recall stuff
    
    * fixed
    
    * format
    
    * change utils for merge
    
    * resolve Nick's comments
    
    * fix
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit b49eeea1b6c8efc380adb0baf2cd0d9982576704
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Sep 9 17:41:16 2022 -0500

    Quick fix to make building without extras work (#769)
    
    * Quick fix to make building without extra work
    
    * Fixing typo
    
    * Fixing extra metavar in build.py

commit 63e8607b2aaa4b7197b3b676102b2721b96fcd3d
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Sep 9 15:54:57 2022 -0500

    Remove requirements txt in favor of setup.py as the single source of truth (#768)
    
    * Removing requirements.txt
    
    * Fixing dockerfile path
    
    * Fixing copying and building Universe commands in Dockerfile
    
    * Adding back docker container name to benchmarking run
    
    * Fixing quotes in bash script
    
    * Fixing typo
    
    * Fixing ec2 instance check
    
    * Decreasing connection timeout
    
    * Making exclusion the same for python format check
    
    * Removing --it (interactive) flag
    
    * Adding toml to test dependencies

commit 0c0512772a3b847e054390af70c9b2586410ecda
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Fri Sep 9 13:48:26 2022 +0530

    Add basic logging primitives  (#721)
    
    Integrate spdlog into the ecosystem, providing primitives to use thirdai wide
    to add logging statements from C++. Logging is disabled by default (in favour
    of the existing ProgressBar) while there are options to set them to log to
    standard error or a file. Logging is implemented in the C++ library, with
    exports to python to only to configure where and what to write.
    
    In the future we may expose the logging functions to python so all logs are
    available at a single place.
    
    Also includes a minor bug-fix making version string inline so no duplicate
    symbols, discovered while bringing version info into the logging system.
    
    See: TSK-506

commit 0e3bdf7df16aca44ec8d29f261d72aa34305a9fd
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Sep 8 18:07:54 2022 -0500

    [2/?] Make sequential classifier support multi class categorical columns (#756)
    
    * multi class user item history block
    
    * much cleaner than before
    
    * much cleaner than before
    
    * new tests for multi class sequential classifier!
    
    * fixed
    
    * format
    
    * resolve dave comments
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 047b8a5ea542ce9c7df719b0ed8d53eaa6aa8351
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 8 16:34:06 2022 -0500

    Add static node factory methods (#729)
    
    * Add static node factory methods
    
    * Add TokenInput
    
    * Finish factory methods
    
    * Change everything to use factory methods
    
    * Fix config
    
    * Fix input print

commit 29e26b9942ac2937f15e9683cde27fd049996aaf
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Fri Sep 9 01:00:12 2022 +0530

    Add libomp via brew to install-mac.sh (#763)

commit 58a591f2e21d2d2b715af68cfd9bba9a45b4fe39
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 8 11:51:16 2022 -0500

    Add concatenation reduction to embedding layer (#735)
    
    * Add concatenation reduction to embedding layer
    
    * Add comments in embedding tests
    
    * Cleanup embedding test
    
    * Add reduction to benchmarks
    
    * Fix dimensions
    
    * Fix getOutputDim
    
    * Cleanup test
    
    * Add log to featurizer
    
    * Fix tests
    
    * Fix test
    
    * Fix test
    
    * Change to logf

commit 2efe202ff75ee1b873ccaa532a54584395132db4
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Sep 8 10:52:41 2022 -0500

    Custom Python Callbacks (#743)
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * temp
    
    * add test case
    
    * brainstorming
    
    * draft of early stop
    
    * validation-based-stopping
    
    * support for all metrics
    
    * helper function for simple dag model
    
    * fix circular imports
    
    * fix test
    
    * fix lint
    
    * bump version
    
    * start move to generic callbacks
    
    * circular import fixes
    
    * builds
    
    * fixes
    
    * builds and runs
    
    * comments
    
    * add checkpointing
    
    * formatting errors
    
    * incorrect merge
    
    * callbacks interface
    
    * callbacks interface
    
    * shared from this for boltgraph
    
    * comments
    
    * merge
    
    * comments
    
    * GEORDIE DISCUSSION
    
    * build bug
    
    * build bug
    
    * resolve geordie comments
    
    * unset model
    
    * cleanup
    
    * remove empty line
    
    * no storing of model. pass in model and train config to all callback functions
    
    * update api
    
    * failed merge
    
    * remove bad files
    
    * remove unneeded changes
    
    * update early stop logic
    
    * fix casting error on constructor
    
    * checkpoint to file and add flag to restore best weights
    
    * fix python bindings
    
    * ordering of constructor args
    
    * rename object, add comments, fix test
    
    * remove train config passed int
    
    * remove trian config from list
    
    * todo comments
    
    * unused parameter
    
    * remove line
    
    * pycallbacks
    
    * remove line
    
    * some tests
    
    * remove lines
    
    * tests
    
    * format
    
    * fix test?
    
    * fix test
    
    * bad line
    
    * comment update
    
    * fix test bug
    
    * fix merge

commit 27c06cd2272b8ad5f3f0045cc687774fbbb1653d
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Sep 8 10:05:02 2022 -0500

    [2/?] Validation based early stopping callback (#680)
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * temp
    
    * add test case
    
    * brainstorming
    
    * draft of early stop
    
    * validation-based-stopping
    
    * support for all metrics
    
    * helper function for simple dag model
    
    * fix circular imports
    
    * fix test
    
    * fix lint
    
    * bump version
    
    * start move to generic callbacks
    
    * circular import fixes
    
    * builds
    
    * fixes
    
    * builds and runs
    
    * comments
    
    * add checkpointing
    
    * formatting errors
    
    * incorrect merge
    
    * callbacks interface
    
    * callbacks interface
    
    * shared from this for boltgraph
    
    * comments
    
    * merge
    
    * comments
    
    * GEORDIE DISCUSSION
    
    * build bug
    
    * build bug
    
    * resolve geordie comments
    
    * unset model
    
    * cleanup
    
    * remove empty line
    
    * no storing of model. pass in model and train config to all callback functions
    
    * update api
    
    * failed merge
    
    * remove bad files
    
    * remove unneeded changes
    
    * update early stop logic
    
    * fix casting error on constructor
    
    * checkpoint to file and add flag to restore best weights
    
    * fix python bindings
    
    * ordering of constructor args
    
    * rename object, add comments, fix test
    
    * remove train config passed int
    
    * remove trian config from list
    
    * todo comments
    
    * unused parameter
    
    * remove line
    
    * remove line
    
    * remove lines
    
    * fix test
    
    * bad line
    
    * josh comments part 1
    
    * update pybind comments and init val trackers
    
    * josh comments part 2
    
    * josh changes
    
    * try/catch
    
    * fix bugs
    
    * add comment
    
    * fix tests

commit fe3f5f54f917838429c07389e044dbc4dc85d8cc
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Thu Sep 8 17:54:10 2022 +0530

    Add const to getHash and return seed method (#762)

commit 4be0a2cab6a2d861b0ef74686381f148570f7e0b
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Sep 8 16:07:14 2022 +0530

    Test thirdai.distributed_bolt using MNIST (#755)
    
    Add tests for distributed training on MNIST using ray's mock cluster
    feature. Both circular and linear are covered in tests.
    
    See: TSK-139/TSK-443
    Reviewed-By: Jerin Philip <jerin@thirdai.com>

commit 2f8e2e367bf3f2faa7f0d2d02fc890dbfa5533f6
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Thu Sep 8 12:05:51 2022 +0530

    Compression interface (#689)
    
    * basic
    
    * basic stuff, added methods,
    
    * basic dragon, a lot of debugging left, to change wrong shapes getting
    
    * added a few print statements here and there, few bugs
    
    * default compressed vector class added, tests to be added yet, to-do: setting gradients from a compressed vector, writing a decompress function for it
    
    * adding original_size and decompress methods
    
    * added decompressVector to DefaultCompressedVector
    
    * changed the order of initialization of dragon class variable
    
    * smol methods like get set and all
    
    * returning a dictionary instead of a tuple now
    
    * added a set gradients feature, numpy array const casting problems fixed, have to optimize to avoid a lot of copying
    
    * added tests for dragon vector
    
    * custom copy constructors, making non-explicit copy constructor for dragon, adding move, = and swap to the vector classes
    
    * changed the constructor to remove duplication
    
    * merged threshold functions into one, removed srand and rand, using mt19937 now, passing a seed for random sampling for reproducibility
    
    * adding comments to CompressionUtils.h
    
    * changed the splitVector function, made the loop more readable
    
    * removing concat
    
    * added comments to dragonvector, removed sketch_size as an internal feature for the dragon vector, made assign function non-virtual
    
    * added std::move inside the + operator in dragonvector, ig no more new copies being created
    
    * added a test class for DefaultCompressedVector, added an rvalue constructor to default to avoid copying
    
    * fixed CMake file
    
    * commitmessage
    
    * not returning compressed vector objects
    
    * not working rn, some namespace error, ZN7testing16AssertionSuccessEv not found in flat namespace
    
    * private added to cmake lists
    
    * fix cmake bug, should not use glob_recurse at all
    
    * removed murmur hash, started using universal hashing, modified the universalhash file to use the random seed
    
    * started using initialization lists in constructors
    
    * remove uint
    
    * formatting
    
    * added functions to dragon_vector to cast compressed_vector object to dragon_vector object, added functions -> addVectors, concatVectors to dragon, made a factory method for compressing and decompressing , correctness of factory method to be checked
    
    * removed default compressed vector
    
    * fixed gitignore
    
    * fixed MurmurHash.cc
    
    * removed the magic number 1 from compression utils
    
    * removed copy constructor
    
    * fixed copy constructor, default copy now
    
    * fixing distribution name
    
    * removed error messages
    
    * changing variable names a bit, modifying function name, decompressVector to decompress
    
    * integration, dynamic casting, dispatch things
    
    * Clean up the Compression Interface
    
    This commit cleans up the compression interface by removing
    several functions like add, split, amongst other things
    We will have to add these functionalities later but
    waiting to figure out a safer and cleaner way to work
    with RTTI of compressed vector without dynamic cast
    
    * Add python unit tests and integration tests
    
    This commit adds three python tests where we check the get, set features
    for dragon vectors. Also an integration test where  we train the model
    only using the compressed dragon gradients. Increased the learning rate
    to 0.002 instead of 0.001.
    
    The model is trained only on the compressed weight gradients, biases are
    left as it is.
    
    * Merge compresseion factory and dragon vector into one
    
    This commit cleans up the PR and makes a single file for
    dragon vector, compressed vector, and compression factory
    
    * Remove redundant .h files
    
    * Change getCompressionScheme to type
    
    In compressed vector, changed getCompressionScheme function to
    type. Now call compressed_vector->type() to get the  type of the
    vector.
    
    * Remove Split and printVector methods
    
    * Add compress and set to Parameter Inference
    
    Now, you can call .compress on Parameter Reference and specify your own compression
    scheme. You can also call .set(compressed_vector, compressed=True) for setting
    the parameter reference using your own compressed vector. .set works normally as
    before with default value of compressed being False.
    
    * Change Spelling Error in DistributedBolt
    
    * Add integration tests for the compression interface
    
    This commit adds tests namely get set tests and a training
    test. For some reason, the  training test in dag api gives
    a much lower accuracy whereas the same test gives a high
    accuracy in boltpython. The get set functions are working
    fine which means there is a problem with updating the gradi-
    -ents somewhere.
    
    * Small commit, adding test_dragon.py
    
    * Make compressed training work
    
    With this commit, now we can pass around a dragon vector to the
    model for training and the model will train. Gives a reasonable
    accuracy on simple numpy training data.
    
    * Reset the BoltPython* files
    
    * Fix Tests
    
    Fixed the training test function now
    
    * Remove test_compressed_training call from file end
    
    * Remove compressed flag from ParameterReference
    
    Checking the datatype of the py::object to figure out whether it
    is a compressed vector or a NumpyArray
    
    * Change TODO format, Remove Header Comment
    
    * Fix Initialization lists, logic error statement
    
    * Remove assign method
    
    * Make seed_for_hashing uint32_t, remove duplicated threshold function,, magic number 20
    
    * Comment original size
    
    * Make getThresholdForTopK simpler. Remove nits
    
    getThresholdForTopK -> thresholdForTopK.
    takes an argument: sample_population_size
    takes top_k as an argument
    returns the threshold for top_k
    
    * Changing function names, adding comments in compression utils
    
    * Clean DragonVectorTest, Modify CMakeLists, Change names of functions, remove utils.py file
    
    * Fix num_samples name
    
    * Add Comments, Make utils functions more generic
    
    * Fix naming scheme in test_dragon.py, make gradients->values
    
    * Adding comments
    
    * Resolve Comments, Add richer explainations to GraphPython.cc
    
    * Convert int to uint32 for seed for hashing, remove compression density
    
    * Add OpenMp to compression/src/CMake
    
    * Fix EfficienyDragonVectorTest
    
    Only Changed the seed for hashing
    
    Co-authored-by: Shubh Gupta <shubh@Shubhs-MacBook-Air.local>

commit bf550ce5024faca77f6e7925e1232bb64af2ac8d
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Sep 7 23:37:08 2022 -0500

    Account for Multiple Masked Tokens in MLM Batch Processor (#732)
    
    * edit masked sentence batch processor
    
    * edit unit test
    
    * python bindings
    
    * remove unnecessary comment
    
    * nits
    
    * edit batch processor for MLM
    
    * address PR comments

commit 0e21b3c6087aaa01fd56a9565cfcb0cd795d944e
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Sep 7 17:12:13 2022 -0500

    [1/?] multi class user item history block (#749)
    
    * multi class user item history block
    
    * Hopefully clarified things
    
    * rename
    
    * fix test
    
    * Resolve Josh suggestions
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 33e639331f2ab5dbc1cce18f2df367525fcdf266
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Sep 7 15:45:35 2022 -0500

    patch (#758)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 3ccb9ccf756c88326f04a4f614b18ffd3bc20cee
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Sep 7 15:04:52 2022 -0500

    Creating single requirments.txt (#757)
    
    * Creating single requirments.txt
    
    * Fixing spelling mistake
    
    * Fixing requirments.txt install in Docker
    
    * Lowering cryptography version
    
    * Adding tokenizers (a version there exists a wheel for)
    
    * Adding transformers to test dependencies
    
    * Removing extra transformers install
    
    * Adding torchvision to requirments.txt as well
    
    * Changing pip in test-pypi command to pip3
    
    * Setting cryptography back
    
    * Responding to pr comments

commit dda50efa012a4f17023bed19e897f873d3edc0f2
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Sep 6 18:42:32 2022 -0500

    Adding a DataLoader for S3 and testing it with the amazon_polarity benchmark (#742)
    
    * Basic S3 data loader and adding hooks for loading svm and csv from s3
    
    * Removing unnecesary wrapper
    
    * Cleaning up run_bolt_experiment and formatting
    
    * Cleaning up run_bolt_experiment and formatting
    
    * Improving aws detection
    
    * Trying to find bottleneck
    
    * Fixing next_batch method
    
    * Pass correct batch size to S3DataLoader
    
    * Fixing s3 resource name
    
    * Fixing parameter in S3DataLoader constructor
    
    * Adding pragma once to PyDataLoader
    
    * Mounting AWS credentials
    
    * Forgot to add a \ in bash file
    
    * Moving comment up
    
    * Fixing argument order
    
    * Adding restart method and use_s3 for mnist
    
    * Replacing batch_size computation with cached value
    
    * Formatting
    
    * Responding to pr comments
    
    * Adding moto tests for S3DataLoader
    
    * Formatting
    
    * Responding to pr comments

commit ac46ad02035c0b3ee0397d76b2f3d4614b17e814
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Sep 6 16:51:05 2022 -0500

    change make() return type (#751)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 810baf6a274f6e2cefd8de445fe89a7d90e4df2f
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Wed Sep 7 00:51:17 2022 +0530

    Clang support (#653)
    
    This change gets `cmake ..` work out of the box on MacOS with AppleClang.
    
    Additionally there are a few issues in code which clang brings to attention,
    and are fixed while achieving clang compilation. Most of these issues are regarding
    placement of explicit template instantiations, which have to be now moved down
    to the bottom of files after the definitions appear.
    
    Modern CMake suggests using target OpenMP::OpenMP_CXX to get -fopenmp (gcc)
    -fopenmp=libomp (for clang). Using this target makes OpenMP compilation errors
    go away.

commit 94141f045581f2b263f35371046d7f36c4f3e2ed
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Sep 6 12:10:46 2022 -0500

    Refactoring text and categorical blocks (#731)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * streaming string lookup class
    
    * cmakelists
    
    * cmakelists
    
    * many tries
    
    * trials
    
    * trials
    
    * test quirks
    
    * test quirks
    
    * test quirks
    
    * cleanerish
    
    * speed test
    
    * I will get back to you old friend ...
    
    * proto
    
    * proto
    
    * user item history block
    
    * streaming string lookup categorical encoding
    
    * pragma
    
    * format
    
    * format
    
    * I added pragma omp instead of pragma once and that failed the build T-T
    
    * format
    
    * sequential classifier
    
    * compiles! Need to change UserItemHistoryBlockTests
    
    * script
    
    * seems like we're getting the results we want
    
    * recall at k metric
    
    * works ish!
    
    * non parallel generic batch proc
    
    * dense hid lay
    
    * support mb
    
    * support mb
    
    * remove what isnt sposed to be there
    
    * fixed user item test
    
    * works!
    
    * fixed the user item history test
    
    * remove unnecessary
    
    * format
    
    * format
    
    * format
    
    * format
    
    * show time
    
    * .
    
    * const
    
    * multi label cat tracking
    
    * see if it works?
    
    * can do multi label
    
    * api
    
    * no cat delim
    
    * resolving Dave's comments
    
    * static factory methods
    
    * static methods
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc
    
    cleaner current_history.insert
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * single string categorical encoding
    
    * comments
    
    * cerealization
    
    * remove unnecessary constructor
    
    * more testo
    
    * more comments
    
    * almost there
    
    * cleaner trycatch
    
    * format
    
    * lint issues
    
    * use deque
    
    * awright
    
    * fixed merge
    
    * some renaming
    
    * vocab size
    
    * moving to new vocab
    
    * fix method name
    
    * some fixes
    
    * cleanupss
    
    * merged with thread safe vocab again
    
    * remove metric agg changes
    
    * remove autoclassifier base changes
    
    * remove autoclassifier base changes
    
    * remove categorical block changes
    
    * i think it works
    
    * cleanups
    
    * cleanup
    
    * added serialization
    
    * added load save
    
    * need to fix
    
    * serialization
    
    * fixed serialization
    
    * format
    
    * fixed serialization
    
    * refactor text block. Haven't fixed things that depend on this
    
    * refactor text block. Haven't fixed things that depend on this
    
    * refactor text block. Haven't fixed things that depend on this
    
    * delete old stuff bby
    
    * changed all c++ occurrences
    
    * changed all python occurrences
    
    * refactored categorical block
    
    * changed all C++ occurrences of categorical block
    
    * changed all python occurrences
    
    * fix
    
    * fixes
    
    * fix tests
    
    * comments and cleanup
    
    * make returns shared ptr to user item history block
    
    * resolve comments
    
    * Categorical tracking (#682)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * proto
    
    * proto
    
    * user item history block
    
    * pragma
    
    * format
    
    * I added pragma omp instead of pragma once and that failed the build T-T
    
    * format
    
    * format
    
    * .
    
    * multi label cat tracking
    
    * static methods
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc
    
    cleaner current_history.insert
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * almost there
    
    * use deque
    
    * moving to new vocab
    
    * some fixes
    
    * merged with thread safe vocab again
    
    * added serialization
    
    * serialization
    
    * fixed serialization
    
    * make returns shared ptr to user item history block
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * sequential classifier cleanup
    
    * fix build
    
    * serialization fix
    
    * oop that wasnt supposed to be there
    
    * added test
    
    * comments
    
    * Update bolt/src/auto_classifiers/sequential_classifier/SequentialClassifier.h
    
    * Update bolt/src/auto_classifiers/sequential_classifier/SequentialClassifier.h
    
    * fixed stuff
    
    * explanation / comment
    
    * fix compile
    
    * fix fix fix
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit 832a49c1a7d079f5db1c0915dad29af40523161b
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Sep 6 11:20:58 2022 -0500

    Add AUC to bolt benchmarks (#733)
    
    * Dropout and roc auc in benchmarks
    
    * Fix layer construction bug
    
    * Undo log_metrics change
    
    * Fix python format
    
    * Add new criteo benchmark
    
    * Fix data path
    
    * make experiment consistnent
    
    * make experiment consistnent
    
    * Fix data dimensions in criteo small
    
    * Resolve comments
    
    * Fix construct fc node
    
    * add comment in auc computation

commit aae06472b65d6058ad0ce2994ecb5a5716204710
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Tue Sep 6 15:51:33 2022 +0530

    Added new version number in thirdai.version (#747)

commit 7a05a6137d2c7fbc103b129010fbf486dcef305c
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Tue Sep 6 14:53:36 2022 +0530

    Etch version to library (py, cpp) from single source of truth (#746)
    
    We want C++, Python (and future bindings) if any to be able to report versions
    at runtime, so we can checkout to the particular commit for debugging or
    reproducing bugs purposes. We should be able to hook this onto mlflow, logging
    etc so a trail is left when we have to investigate something or go back in time
    to test something. The additions should also help reproducibility.
    
    The reported string is intended to be set as:
    
    Format:   [Major].[Minor].[Patch]+[Commit-short-SHA]
    Example:  0.1.8+c838f9e
    
    [Major], [Minor], [Patch] are read from a `thirdai.version` file in the root
    folder (Not using VERSION because the naming has caused issues with MacOS and
    WebAssembly before). setup.py, which previously had the value hardcoded and was
    bumped from time to time is reconfigured to read from `thirdai.version`.
    [Commit-short-SHA] is obtained by Git package in CMake and configured into a
    header file at build time.

commit c838f9e9326d43d3a594863e49ba0c71786b1bdb
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Sep 5 17:30:48 2022 +0530

    Added some changes to remove warnings and redundancy (#745)
    
    * Added changes to supress some warnings, and removed redundancy
    
    * Updated Comments
    
    * removed unused library
    
    * cahnges num_cpus to num_cpu_per_worker

commit b3e6c2afbf724b17de11b80ffa7b33797e51d51a
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Mon Sep 5 10:52:20 2022 +0530

    Fix PyPI workflow on GitHub CI (#744)
    
    Older versions of python (3.6) on cibuildwheel are failing due to import
    differences, breaking the CI workflow for wheels.  This change fixes this with
    an `import thirdai.distributed`. This gets us further in the build on CI but
    Windows builds appear to be failing due to lack of `ray` package via PyPI.
    Testing ray is temporarily disabled on Windows to get the wheels workflow green
    (as Windows distributed is not high priority).
    
    See also: #641, #739
    Reviewed-By: Pratik Pranav <pratik@thirdai.com>

commit 1014e70d162ff6b675f0904383b7eabce1d3b7be
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Sep 2 15:58:45 2022 -0500

    [1/?] Generic callbacks interface (#711)
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * bump version
    
    * callbacks interface
    
    * callbacks interface
    
    * shared from this for boltgraph
    
    * comments
    
    * comments
    
    * GEORDIE DISCUSSION
    
    * build bug
    
    * build bug
    
    * unset model
    
    * remove empty line
    
    * no storing of model. pass in model and train config to all callback functions
    
    * update api
    
    * remove train config passed int
    
    * remove trian config from list
    
    * todo comments

commit 6396c96a4166d7e11e9923443748e1afc6ce76c1
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Sep 2 15:50:09 2022 -0500

    Optimize update parameters (#686)
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * testing configs
    
    * update configs
    
    * move configs and add mark active neurons helper
    
    * add len out
    
    * change sparse-sparse update method
    
    * bug ex
    
    * mixup input and output
    
    * optimizations
    
    * remove config files and add comments
    
    * move line up
    
    * remove dockerfile line
    
    * comments
    
    * 3 versions for sparse dense updates
    
    * OPTIONS FOR SPARSE DENSE UPDATES
    
    * SPARSE-DENSE MNIST CONFIGS
    
    * remove configs and choose option 1
    
    * SPARSE SPARSE CONFIGS RERUN
    
    * remove configs
    
    * remove active neurons pair
    
    * add bias update to update functions
    
    * Adding threshold and both options for sparse sparse
    
    * Cleaning up FullyConnectedLayer private variables
    
    * Adding back bias updates to sparse sparse optimized
    
    * Adding an interbatchUpdate method to switch on sparsesparse optimization
    
    * Adding temporary print statement to tell whether sparse sparse is enabled
    
    * Automatic working, now going to go back to manual
    
    * Switching to manual activation of optimization
    
    * Adding changes to amazon polarity config to enable sparse sparse optimization
    
    * Forgot to return layer after making changes
    
    * Finishing optimized and non optimized sparse sparse test
    
    * Fixing numpy test
    
    * Going back to seperate weight, bias, cleanup in updateParameters
    
    * Simplifying when is_active and _prev_is_active are used
    
    * Removing extra include and cleaning up comment
    
    * Moving back active pairs array to be cleaned up in update weights
    
    * Responding to pr comments
    
    * Adding back an option to enable sparse inference
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit c83813c28343fc2036bc1a0d1f25e2485700b00f
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Fri Sep 2 18:49:13 2022 +0530

    Disable thirdai.distributed_bolt import with package (#739)
    
    Apple M1 Silicon ends up with an irrecoverrable error on a default install with ray.
    Trying to import GRPC fails. To avoid this from happening, this commit changes
    the package to no longer import thirdai.distributed_bolt by default. Users are
    expected to explicitly import the package as thirdai.distributed_bolt.
    
    Also includes fix for test-PyPI workflows to be tested in main.
    
    Reviewed-By: Jerin Philip <jerin@thirdai.com>

commit f08bf40dcbccd58d0caf11f5ec1ccbdf98b01c88
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Fri Sep 2 10:42:51 2022 +0530

    Allow ccache configuration in setup.py through envvar (#737)

commit 1d4ed2bd408abd24119346e79e055a1f26c5e987
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Sep 1 22:17:59 2022 +0530

    Initial Python APIs for Distributed Bolt (#641)
    
    This PR builds on #663 and uses the functions to build a data parallel
     distributed engine. It uses ray for all communication between the nodes.
    
    For further details about this PR, Look at:
    * https://www.notion.so/Distributed-Bolt-using-Ray-b27194b51b5f4f3f86ff6b2b1c6718a8
    
    Reviewed-by: Jerin Philip <jerin@thirdai.com>

commit b2d2829f760e2fc6fe60ec3eda791d3abab6105c
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Thu Sep 1 13:47:57 2022 +0530

    Normalise input gradients (#734)

commit ca78bd45643e58a2d167068d5401bf8a68052cbd
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Aug 31 22:57:09 2022 -0500

    Fix MSE and re-enable tests (#728)
    
    * Fix MSE and re-enable tests
    
    * Cleanup mse
    
    * Cleanup mse
    
    * Resolve comments
    
    * refactor conditional
    
    * fix comment

commit c9951e30703b74a15be1bf10de10243b41d7bd13
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Aug 30 18:33:01 2022 -0500

    Sequential classifier wrapper (#727)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * streaming string lookup class
    
    * cmakelists
    
    * cmakelists
    
    * many tries
    
    * trials
    
    * trials
    
    * test quirks
    
    * test quirks
    
    * test quirks
    
    * cleanerish
    
    * speed test
    
    * I will get back to you old friend ...
    
    * proto
    
    * proto
    
    * user item history block
    
    * streaming string lookup categorical encoding
    
    * pragma
    
    * format
    
    * format
    
    * I added pragma omp instead of pragma once and that failed the build T-T
    
    * format
    
    * sequential classifier
    
    * compiles! Need to change UserItemHistoryBlockTests
    
    * script
    
    * seems like we're getting the results we want
    
    * recall at k metric
    
    * works ish!
    
    * non parallel generic batch proc
    
    * dense hid lay
    
    * support mb
    
    * support mb
    
    * remove what isnt sposed to be there
    
    * fixed user item test
    
    * works!
    
    * fixed the user item history test
    
    * remove unnecessary
    
    * format
    
    * format
    
    * format
    
    * format
    
    * show time
    
    * .
    
    * const
    
    * multi label cat tracking
    
    * see if it works?
    
    * can do multi label
    
    * api
    
    * no cat delim
    
    * resolving Dave's comments
    
    * static factory methods
    
    * static methods
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc
    
    cleaner current_history.insert
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * single string categorical encoding
    
    * comments
    
    * cerealization
    
    * remove unnecessary constructor
    
    * more testo
    
    * more comments
    
    * almost there
    
    * cleaner trycatch
    
    * format
    
    * lint issues
    
    * use deque
    
    * awright
    
    * fixed merge
    
    * some renaming
    
    * vocab size
    
    * moving to new vocab
    
    * fix method name
    
    * some fixes
    
    * cleanupss
    
    * merged with thread safe vocab again
    
    * remove metric agg changes
    
    * remove autoclassifier base changes
    
    * remove autoclassifier base changes
    
    * remove categorical block changes
    
    * i think it works
    
    * cleanups
    
    * cleanup
    
    * added serialization
    
    * added load save
    
    * need to fix
    
    * serialization
    
    * fixed serialization
    
    * format
    
    * fixed serialization
    
    * comments and cleanup
    
    * make returns shared ptr to user item history block
    
    * resolve comments
    
    * Categorical tracking (#682)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * proto
    
    * proto
    
    * user item history block
    
    * pragma
    
    * format
    
    * I added pragma omp instead of pragma once and that failed the build T-T
    
    * format
    
    * format
    
    * .
    
    * multi label cat tracking
    
    * static methods
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc
    
    cleaner current_history.insert
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * almost there
    
    * use deque
    
    * moving to new vocab
    
    * some fixes
    
    * merged with thread safe vocab again
    
    * added serialization
    
    * serialization
    
    * fixed serialization
    
    * make returns shared ptr to user item history block
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * sequential classifier cleanup
    
    * fix build
    
    * serialization fix
    
    * oop that wasnt supposed to be there
    
    * added test
    
    * comments
    
    * Update bolt/src/auto_classifiers/sequential_classifier/SequentialClassifier.h
    
    * Update bolt/src/auto_classifiers/sequential_classifier/SequentialClassifier.h
    
    * fixed stuff
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit 71c78436918bc2d4d1b74ea86ee763034b908241
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Aug 30 09:05:54 2022 -0500

    Dropout for Fully Connected Layer (#703)
    
    * Dropout in fully connected layer
    
    * optimize random sampling
    
    * Optimize sampling for random sampling
    
    * Dropout python test
    
    * Dropout determinism
    
    * Rename and fix summary
    
    * Fix bug
    
    * Resolve comments
    
    * Fix python test

commit 10206566b493cae03f682ed7062c1cde7997db6c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Aug 30 03:29:50 2022 -0500

    Rewrite flaky test for explainability  (#724)
    
    * New test for explainability
    
    * fix python format

commit 4bed705393a3bb59ed97ed32f87dbdd7010c7bf9
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Aug 30 02:10:13 2022 -0500

    Remove token dataset (#718)
    
    * Deprecate old bolt api
    
    * Python format
    
    * Remove BoltTokenDataset
    
    * Fix tests
    
    * Rename and restore python tests
    
    * python format
    
    * Error checking in switch layer
    
    * Fix switch test
    
    * Fix python format
    
    * Fix c++ test
    
    * Add max and min nonzero
    
    * Resolve comments
    
    * Fix python test
    
    * fix clang tidy

commit 11a4cd8f701dd4f2e5c958162c503fe6c583acb4
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Aug 29 23:22:57 2022 -0500

    Remove old hybrid python data pipeline (#726)
    
    * remove old python stuff
    
    * remove deprecated test
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit ea618faf989f6f8b59c97f128d5df8b4a20feb91
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Aug 29 22:14:35 2022 -0500

    String categorical encoding but no need to build map beforehand (uses critical section) (#683)
    
    * streaming string lookup class
    
    * cmakelists
    
    * cmakelists
    
    * many tries
    
    * trials
    
    * trials
    
    * test quirks
    
    * test quirks
    
    * test quirks
    
    * cleanerish
    
    * speed test
    
    * I will get back to you old friend ...
    
    * streaming string lookup categorical encoding
    
    * format
    
    * works!
    
    * format
    
    * const
    
    * resolving Dave's comments
    
    * static factory methods
    
    * single string categorical encoding
    
    * comments
    
    * cerealization
    
    * remove unnecessary constructor
    
    * more testo
    
    * more comments
    
    * cleaner trycatch
    
    * format
    
    * lint issues
    
    * awright
    
    * fixed merge
    
    * some renaming
    
    * vocab size
    
    * fix method name
    
    * cleanupss
    
    * resolve comments
    
    * Categorical tracking (#682)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * proto
    
    * proto
    
    * user item history block
    
    * pragma
    
    * format
    
    * I added pragma omp instead of pragma once and that failed the build T-T
    
    * format
    
    * format
    
    * .
    
    * multi label cat tracking
    
    * static methods
    
    * Update dataset/tests/UserItemHistoryBlockTests.cc
    
    cleaner current_history.insert
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * almost there
    
    * use deque
    
    * moving to new vocab
    
    * some fixes
    
    * merged with thread safe vocab again
    
    * added serialization
    
    * serialization
    
    * fixed serialization
    
    * make returns shared ptr to user item history block
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * fix build
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit f8304ddff87aa1eb2458e85c2ae508dc325a33ca
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Aug 29 16:03:31 2022 -0500

    Fix syntax error in discover dataset tests (#725)

commit 0128ea1ba1524afc58885d74819391859bdfba3c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Aug 29 15:42:31 2022 -0500

    Old Bolt API 🔫☠️🤗 (#716)
    
    * Deprecate old bolt api
    
    * Python format
    
    * Rename and restore python tests
    
    * python format
    
    * Fix tests

commit 386fde491ec38060e988184c51045accffc8f095
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Mon Aug 29 11:29:09 2022 +0530

    Make UniversalHash deterministic for a given seed (#719)
    
    Earlier implementation of UniversalHash does not use the seed provided
    and output is non-deterministic. If the user has provided a seed, then
    hash functions of the same seed should give the same hashes for the
    same elements.
    
    Earlier,
    
    ```
    UniversalHash h1(seed), h2(seed);
    
    h1.getHash(some_value) != h2.getHash(some_value)
    ```
    
    which is unwanted behavior.
    
    Now, the hash functions return the same values.

commit 48a9e208590383e234476dcae5e82fb93012b348
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Fri Aug 26 19:23:44 2022 -0500

    Clean up LP Norm Code for BoltVector (#713)
    
    * clean up the lp norm stuff and move file to bolt/src/utils
    
    * add back getNorm function
    
    * migrate bolt vector norm to bolt_vector directory
    
    * remove data_pipeline_guide.ipynb from PR

commit 3b90d7c392a728d720f5e4d021cd1407870165c4
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Aug 26 16:49:35 2022 -0500

    Bolt batch iterators (#714)
    
    * making bolt batches range-based-for-loop-able
    
    * range-based-for-loop-ing bolt batches where appropriate
    
    * clang format did not enjoy
    
    * Remove test input gradietn for now
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 5273ff46b9c305fb28a53260c89cfb9d266191ec
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Aug 26 16:44:17 2022 -0500

    Remove test input gradietn for now (#717)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit ca60c17a24a74bb0493ce32a7750ddf83e808e44
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Aug 26 14:58:12 2022 -0500

    Move bolt vector out of bolt/src/layers (#715)
    
    * Move bolt vector out of bolt/layers
    
    * format
    
    * Rename namespace

commit fcd14f37147ff4367a0997a1a37fd4dcc3ff1bf9
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Aug 26 12:48:07 2022 -0500

    cleanup multi label text classifier (#712)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 4a46e2bdd7ac6feefc717ab2254ae73985d36726
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Aug 26 10:22:29 2022 -0500

    Zero input gradients (#710)
    
    * Zero input gradients in fc layer
    
    * Zero gradients in the forward pass
    
    * Fix test
    
    * Fix test
    
    * Remove new lines
    
    * Resolve comments
    
    * move clear output grad

commit f9d1c4e921493651cdf617b56bdb6f4ecaf1b139
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Aug 26 09:58:11 2022 -0500

    Recall at K (#709)
    
    * just cleaner
    
    * resolving comments
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 27e4f33a3456c6b45334dbf8c7d640edb1f14579
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Fri Aug 26 09:02:37 2022 +0530

    Increase timeout for GoogleTest discovery on CI (#704)
    
    * Raise GoogleTest DISCOVERY_TIMEOUT (on Windows CI) to 30 (from 5)
    https://cmake.org/cmake/help/v3.24/module/GoogleTest.html indicates
    DISCOVERY_TIMEOUT can be used to control how much a test waits for
    discovery. This is currently taking longer for Windows causing builds to
    timeout.
    
    * Introduce a THIRDAI_GTEST_DISCOVERY_TIMEOUT cmake argument
    * Supply THIRDAI_GTEST_DISCOVERY_TIMEOUT via Windows environment

commit e35f0810547b13c6cdb5eff106bea3283913cb5e
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Aug 24 16:59:02 2022 -0500

    Remove optimizer on load(..) (#690)
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * testing configs
    
    * update configs
    
    * move configs and add mark active neurons helper
    
    * add len out
    
    * change sparse-sparse update method
    
    * bug ex
    
    * mixup input and output
    
    * optimizations
    
    * remove config files and add comments
    
    * move line up
    
    * remove dockerfile line
    
    * comments
    
    * brainstorming
    
    * inference load
    
    * prepare nodes for training
    
    * update comments and backwards compatability
    
    * rename to init optimizer
    
    * remove comments
    
    * fix bugs
    
    * remove comments
    
    * modify readme
    
    * modify readme
    
    * add comment
    
    * comments
    
    * comments
    
    * merge
    
    * 3 versions for sparse dense updates
    
    * OPTIONS FOR SPARSE DENSE UPDATES
    
    * SPARSE-DENSE MNIST CONFIGS
    
    * remove configs and choose option 1
    
    * merge and combine optimizer and active neurons trackers
    
    * merge back to main
    
    * rename and better merge
    
    * comment formatting
    
    * small fixes
    
    * rename against geordie's will
    
    * remove prints
    
    * rename misnamed function
    
    * use adam optimizer struct
    
    * add asserts
    
    * explcit
    
    * nicks comments

commit 55ff563efe77965e3877290db906a40a364a6dd6
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Aug 24 16:49:14 2022 -0500

    fix flaky multi label classifier tests (#707)
    
    * fix flaky tests
    
    * oops removed the stuff at the bottom
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit ea1fa9dc2165830d077b16193b24ae862957f4a8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Aug 23 16:03:27 2022 -0500

    Add categorical multilabel block (#702)

commit 84da33fd1ed9e0f42b75e0e97ab366275a371549
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Tue Aug 23 19:47:42 2022 +0530

    Remove unused variable in sumRepeatedIndices (#705)

commit 280415ddcfe0ef35246921e5bf7227cc9dcf7ced
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Mon Aug 22 12:09:44 2022 +0530

    Use envar additionally for dataset prefix path (#700)
    
    Introduce THIRDAI_DATASET_PATH environment variable in addition to the
    prefix paths provided from the toml config files.
    
    Previously usernames and paths are stored into dataset_path.toml, which
    is not desirable. Users are expected to configure the environment
    variable or supply it via command-line during time of run.
    
    Environment variable path gets more precedence over config paths.

commit 85e2685a893f06b4ea581a015a714ac1bd182492
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Aug 19 14:56:31 2022 -0500

    Bump version 0.1.8 (#695)
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * bump version

commit 2f665df23c58caf213d84a9541513b651106fcda
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Aug 19 14:56:20 2022 -0500

    Multi label text classifier (#696)
    
    * close
    
    * f measure
    
    * works?
    
    * passed trivial tests!
    
    * multiple thresholds
    
    * serialization for pywayfairclassifier
    
    * no sparse inference
    
    * test predict single thresholding
    
    * fixed numpy conversion
    
    * remove unnecessary prints
    
    * fixes
    
    * formatting and more tests!
    
    * python binding update
    
    * python
    
    * loading message + metric vars
    
    * print statements
    
    * no silent for now
    
    * no silent for now
    
    * debugaroo
    
    * bla
    
    * critical hehe
    
    * no more print la
    
    * bleh
    
    * batch size ........
    
    * no more auto classifier base : (
    
    * shuffle
    
    * fix tests
    
    * fix
    
    * format
    
    * separate processor
    
    * py bnd
    
    * shuffle default false
    
    * the correct processor
    
    * no artificial limit
    
    * hardcoded stuff  : )
    
    * presets
    
    * wayfair
    
    * 86% bby
    
    * remove unnecessary
    
    * print time
    
    * remove unnecessary
    
    * rename
    
    * rename
    
    * separate sentence and token predict function
    
    * separate sentence and token predict function
    
    * Minor cleanup
    
    * Minor cleanup
    
    * fix singl inference
    
    * python tests
    
    * format
    
    * metric cleanup
    
    * formatting
    
    * hopefully resolves Vihan's concerns
    
    * Update bolt/python_bindings/BoltPython.cc
    
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>
    
    * Update bolt/src/auto_classifiers/MultiLabelTextClassifier.h
    
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>
    
    * Update bolt/src/auto_classifiers/tests/MultiLabelTextClassifierTest.cc
    
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>
    
    * formatting
    
    * should resolve
    
    * python format
    
    * pragma once
    
    * fix debug assertion
    
    * test fix?
    
    * remove alloca
    
    * remove alloca
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>

commit bb24c4d6879c495e776ee90d180a25849bffb4b5
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Aug 19 12:46:16 2022 -0500

    Multi label text classifier (#694)
    
    * close
    
    * f measure
    
    * works?
    
    * passed trivial tests!
    
    * multiple thresholds
    
    * serialization for pywayfairclassifier
    
    * no sparse inference
    
    * test predict single thresholding
    
    * fixed numpy conversion
    
    * remove unnecessary prints
    
    * fixes
    
    * formatting and more tests!
    
    * python binding update
    
    * python
    
    * loading message + metric vars
    
    * print statements
    
    * no silent for now
    
    * no silent for now
    
    * debugaroo
    
    * bla
    
    * critical hehe
    
    * no more print la
    
    * bleh
    
    * batch size ........
    
    * no more auto classifier base : (
    
    * shuffle
    
    * fix tests
    
    * fix
    
    * format
    
    * separate processor
    
    * py bnd
    
    * shuffle default false
    
    * the correct processor
    
    * no artificial limit
    
    * hardcoded stuff  : )
    
    * presets
    
    * wayfair
    
    * 86% bby
    
    * remove unnecessary
    
    * print time
    
    * remove unnecessary
    
    * rename
    
    * rename
    
    * separate sentence and token predict function
    
    * separate sentence and token predict function
    
    * Minor cleanup
    
    * Minor cleanup
    
    * fix singl inference
    
    * python tests
    
    * format
    
    * metric cleanup
    
    * formatting
    
    * hopefully resolves Vihan's concerns
    
    * Update bolt/python_bindings/BoltPython.cc
    
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>
    
    * Update bolt/src/auto_classifiers/MultiLabelTextClassifier.h
    
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>
    
    * Update bolt/src/auto_classifiers/tests/MultiLabelTextClassifierTest.cc
    
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>
    
    * formatting
    
    * should resolve
    
    * python format
    
    * pragma once
    
    * fix debug assertion
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>

commit c40cbe35c439532403628a41a98c234eaa2860ad
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Aug 19 10:42:39 2022 -0500

    F measure (#692)
    
    * Minor cleanup
    
    * Minor cleanup
    
    * metric cleanup
    
    * formatting
    
    * hopefully resolves Vihan's concerns
    
    * formatting
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 5bcab71e69b3f747086a5180551017238472507f
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Thu Aug 18 09:13:04 2022 +0530

    Dag explainability (#649)
    
    * started
    
    * some changes
    
    * some changes
    
    * some changes
    
    * some changes
    
    * test case and some changes
    
    * some changes
    
    * some changes
    
    * some changes
    
    * changes
    
    * changes
    
    * changes
    
    * changes
    
    * some changes
    
    * gradients single
    
    * removed token arguments added getgradientssingle
    
    * some changes
    
    * some changes
    
    * added gradients single test case
    
    * pr comments
    
    * removed all things correspond to gradients for batch
    
    * pr comments
    
    Co-authored-by: Yashwanth Adunukota <yashwanthadunukota@Yashwanths-MacBook-Air.local>

commit 0273174508da2bfcdde1c626e531b9b91db67f47
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Aug 17 10:15:51 2022 -0500

    Normalize Activations in a Specific Layer (#667)
    
    * implement a class for normalizing activations in a specific layer
    
    * fix a few node state errors
    
    * add c++ unit tests
    
    * add python bindings for layer normalization
    
    * add backprop implementation for layer norm
    
    * remove temporary testing folder from PR
    
    * remove unnecessary files from PR
    
    * fix segmentation fault from model.predict
    
    * edit backpropagation implementation
    
    * edit unit test that saves model to include layer norm
    
    * restore deleted files
    
    * re-implement unit test
    
    * add layer norm to save-load test
    
    * edit gradient computation function
    
    * add serialization for layer norm
    
    * edit save load test to use sparsity in one layer
    
    * edit normalization layer config
    
    * combine verifyOutputIsNotNormalization & verifyOutputIsNotConcat
    
    * edit save load test
    
    * respond to PR comments
    
    * respond to PR comments
    
    * re-enforce the builder pattern
    
    * edit layer norm class string doc
    
    * clean up

commit 40442bb4bb3089ba1931b00b3ddba9ac7e30fd1d
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Wed Aug 17 09:13:21 2022 +0530

    Add optional requirements via setup.py for benchmarks (#681)

commit 312a799d6ba9294ca83d50739ef6683d72ed2c34
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Tue Aug 16 14:21:42 2022 +0530

    Rename num_numerical_features to max_num_numerical_features (#688)

commit 1c5e0ce963877c7751091550a4fbdc864aa104cb
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Aug 11 11:10:32 2022 -0500

    date block (#676)
    
    * date block
    
    * clang format didn't think it's good enough
    
    * hope it looks good to david now
    
    * Update dataset/src/utils/TimeUtils.h
    
    just comment
    
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: David Torres <97477655+dtr3@users.noreply.github.com>

commit b379c20c0b60244de3cf46ca8d0928bd0866996b
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Aug 11 11:05:50 2022 -0500

    encode single row with generic batch processor + predictSingle unit tests (#677)
    
    * tabular experiment
    
    * pyformat
    
    * initial commit
    
    * accuracy bug
    
    * uncomment
    
    * pyformat
    
    * comments and expects header
    
    * change bins back
    
    * fix header problem
    
    * pyformat
    
    * brainstorming
    
    * finish testing
    
    * messed up merge
    
    * labels() and test comment
    
    * remove comment
    
    * some changes
    
    * better pair unpacking
    
    * protected constructor and add destructor
    
    * change output of predict single and add some comments
    
    * fix lint
    
    * predict single changes
    
    * change to boltvector output
    
    * remove unused functions
    
    * predict changes
    
    * variable name comment
    
    * temp
    
    * nicks comments
    
    * migrate to dag. few todos. no large file processing yet
    
    * metrics
    
    * comments and small formats
    
    * comment
    
    * exception
    
    * comment
    
    * adjust comment
    
    * exception in predict
    
    * variable name but
    
    * nick comments
    
    * nicks comment
    
    * remove const
    
    * remove const
    
    * bad merge
    
    * const ref
    
    * tabular column names from header
    
    * stringview
    
    * predict-single
    
    * add single inference to tabular experiment
    
    * nicks comments and serialize bug
    
    * lint
    
    * col names
    
    * column inference based on names
    
    * change
    
    * fix merge
    
    * change
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * test fixes
    
    * buggy test
    
    * before other pr start
    
    * fix bug
    
    * comment
    
    * geordies comments
    
    * experiment changes
    
    * fix tabular experiment
    
    * pyformat
    
    * make input vector changes
    
    * comment
    
    * fix
    
    * fix
    
    * fix
    
    * fix bug and add unit tests
    
    * fix load save
    
    * yash fix
    
    * comment

commit 7db5bf649b637a3fa5e8dbefb195bba898006f83
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Aug 11 10:28:09 2022 +0530

    removed samping config from release tests (#678)

commit 35521b056d0bad45cc7938d2caffeeb042869b47
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Wed Aug 10 17:47:42 2022 -0500

    Adding LP Norm Computations for the Outputs of Nodes in the DAG (#661)
    
    * add functionality for computing the lp norms
    
    * add unit tests for lp norms
    
    * fix build issues
    
    * respond to PR comments
    
    * edit unit tests for node utils
    
    * change class name from NodeProperties to VectorNorm

commit 0553238d88c2898cb8897a1c4aacbc97693ecbcf
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Aug 9 17:26:54 2022 -0500

    Tabular predict single (#675)
    
    * tabular experiment
    
    * pyformat
    
    * initial commit
    
    * accuracy bug
    
    * uncomment
    
    * pyformat
    
    * comments and expects header
    
    * change bins back
    
    * fix header problem
    
    * pyformat
    
    * brainstorming
    
    * finish testing
    
    * messed up merge
    
    * labels() and test comment
    
    * remove comment
    
    * some changes
    
    * better pair unpacking
    
    * protected constructor and add destructor
    
    * change output of predict single and add some comments
    
    * fix lint
    
    * predict single changes
    
    * change to boltvector output
    
    * remove unused functions
    
    * predict changes
    
    * variable name comment
    
    * temp
    
    * nicks comments
    
    * migrate to dag. few todos. no large file processing yet
    
    * metrics
    
    * comments and small formats
    
    * comment
    
    * exception
    
    * comment
    
    * adjust comment
    
    * exception in predict
    
    * variable name but
    
    * nick comments
    
    * nicks comment
    
    * remove const
    
    * remove const
    
    * bad merge
    
    * const ref
    
    * tabular column names from header
    
    * stringview
    
    * predict-single
    
    * add single inference to tabular experiment
    
    * nicks comments and serialize bug
    
    * lint
    
    * col names
    
    * column inference based on names
    
    * change
    
    * fix merge
    
    * change
    
    * gnu parallel to clang-tidy
    
    * undo
    
    * test fixes
    
    * buggy test
    
    * before other pr start
    
    * fix bug
    
    * comment
    
    * geordies comments
    
    * experiment changes
    
    * fix tabular experiment
    
    * pyformat

commit 79877739c05e554b92289116cf4914f620285505
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Aug 9 15:06:34 2022 -0500

    Column names (#666)
    
    * tabular experiment
    
    * pyformat
    
    * initial commit
    
    * accuracy bug
    
    * uncomment
    
    * pyformat
    
    * comments and expects header
    
    * change bins back
    
    * fix header problem
    
    * pyformat
    
    * brainstorming
    
    * finish testing
    
    * messed up merge
    
    * labels() and test comment
    
    * remove comment
    
    * some changes
    
    * better pair unpacking
    
    * protected constructor and add destructor
    
    * change output of predict single and add some comments
    
    * fix lint
    
    * predict single changes
    
    * change to boltvector output
    
    * remove unused functions
    
    * predict changes
    
    * variable name comment
    
    * temp
    
    * migrate to dag. few todos. no large file processing yet
    
    * metrics
    
    * comments and small formats
    
    * comment
    
    * exception
    
    * comment
    
    * adjust comment
    
    * exception in predict
    
    * variable name but
    
    * bad merge
    
    * const ref
    
    * tabular column names from header
    
    * stringview
    
    * fix merge
    
    * test fixes

commit 6788c376b071417816cd961ff5d4dc507eb161f5
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Aug 8 15:42:23 2022 -0700

    Add include to fix windows build (#671)

commit 0039732cd2d57d4e63fdedb406281dedeed87459
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Aug 8 13:31:23 2022 -0500

    Added shuffling to streaming generic data loader (#651)
    
    * shuffleable streaming generic dataset loader
    
    * remove unnecessary
    
    * circular queue refactor
    
    * circular queue refactor
    
    * shuffle batch buffer refactor
    
    * generic batch processor refactor
    
    * fix segfault
    
    * more refactor
    
    * kawaii tests
    
    * formatting
    
    * proper cmakelists
    
    * more cmakelists fix
    
    * fix lint issue
    
    * test improvements
    
    * comments
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit b6405a9e70a9867a47676cb841349f530a62cc2b
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Aug 8 14:03:55 2022 +0530

    Distributed on DAG (#663)
    
    * Implemented Distributed For DAGs
    
    * Written the test(Not working now)
    
    * Tests Not working correctly
    
    * Working on Tests
    
    * Formaating
    
    * Solved a bug
    
    * removed redundant function
    
    * Done changes to PR according to comments
    
    * Formatting
    
    * Added all hte changes suggested by Nick

commit 74aa566170dc6744a53a07224e22c84e3df104b8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Aug 5 20:45:33 2022 -0700

    Serialize Embedding Layers and clean up test dataset generation (#669)
    
    * Serialize Embedding Layers and clean up test dataset generation
    
    * Resolve comments

commit b597b68b7c4ea07266f8e023334e2598e6c1eac7
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Aug 5 15:51:11 2022 -0500

    Autoclassifier load/save tests (#658)
    
    * tabular experiment
    
    * pyformat
    
    * initial commit
    
    * accuracy bug
    
    * uncomment
    
    * pyformat
    
    * comments and expects header
    
    * change bins back
    
    * fix header problem
    
    * pyformat
    
    * brainstorming
    
    * finish testing
    
    * messed up merge
    
    * labels() and test comment
    
    * remove comment
    
    * some changes
    
    * better pair unpacking
    
    * protected constructor and add destructor
    
    * change output of predict single and add some comments
    
    * fix lint
    
    * predict single changes
    
    * change to boltvector output
    
    * remove unused functions
    
    * predict changes
    
    * variable name comment
    
    * temp
    
    * migrate to dag. few todos. no large file processing yet
    
    * metrics
    
    * comments and small formats
    
    * comment
    
    * exception
    
    * comment
    
    * adjust comment
    
    * exception in predict
    
    * tabular test
    
    * fix tabular load save bug
    
    * comments
    
    * text classifier test
    
    * variable name but
    
    * bad merge
    
    * const ref
    
    * nicks comments and serialize bug
    
    * lint
    
    * autoclassifier base. remove static methods
    
    * bug
    
    * lint

commit 854dfe1a0e5ce326ed6e5060cb821fa5d908579b
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Aug 5 15:04:26 2022 -0500

    Migrate autoclassifiers to DAG (#657)
    
    * tabular experiment
    
    * pyformat
    
    * initial commit
    
    * accuracy bug
    
    * uncomment
    
    * pyformat
    
    * comments and expects header
    
    * change bins back
    
    * fix header problem
    
    * pyformat
    
    * brainstorming
    
    * finish testing
    
    * messed up merge
    
    * labels() and test comment
    
    * remove comment
    
    * some changes
    
    * better pair unpacking
    
    * protected constructor and add destructor
    
    * change output of predict single and add some comments
    
    * fix lint
    
    * predict single changes
    
    * change to boltvector output
    
    * remove unused functions
    
    * predict changes
    
    * variable name comment
    
    * temp
    
    * migrate to dag. few todos. no large file processing yet
    
    * metrics
    
    * comments and small formats
    
    * comment
    
    * exception
    
    * comment
    
    * adjust comment
    
    * exception in predict
    
    * variable name but
    
    * bad merge
    
    * const ref
    
    * nicks comments and serialize bug
    
    * lint
    
    * autoclassifier base. remove static methods
    
    * bug
    
    * lint

commit 5faa14126450baf73f7f6543ca5d8c025334e9d6
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Aug 4 14:24:53 2022 -0700

    Bump to version 1.7 (#668)

commit 4fb935f3b9ccd2479f7874dbf97ef2648434451e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Aug 4 13:14:29 2022 -0700

    Eigen Bolt Optimizations (#665)
    
    * Use eigen for dense dense forward
    
    * Make sure update parameters is correct
    
    * Fix update parameters
    
    * Fix nan issue
    
    * Backprop working in eigen
    
    * Cleanup backprop
    
    * 0 gradient trick
    
    * Feature flag for eigen backprop
    
    * Undo comment change
    
    * Resolve comments
    
    * Add comment

commit 1dfd82314c645b0d21d01a74c77acb0741ddb8cd
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Thu Aug 4 10:19:33 2022 +0530

    Add install_requires so package installs clean (#659)
    
    * Add install_requires so package installs clean

commit b2097c53dd74cce2420e54d41d8ccf7c53764e8e
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Aug 2 17:31:14 2022 -0500

    DAG single sample inference (#647)
    
    * tabular experiment
    
    * pyformat
    
    * accuracy bug
    
    * uncomment
    
    * pyformat
    
    * comments and expects header
    
    * change bins back
    
    * fix header problem
    
    * pyformat
    
    * brainstorming
    
    * finish testing
    
    * messed up merge
    
    * labels() and test comment
    
    * remove comment
    
    * some changes
    
    * better pair unpacking
    
    * protected constructor and add destructor
    
    * change output of predict single and add some comments
    
    * fix lint
    
    * change to boltvector output
    
    * remove unused functions
    
    * variable name comment
    
    * nicks comments
    
    * nick comments
    
    * nicks comment

commit 3c60262896628c8ea80e41d80c3d3074594d952d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Aug 2 14:14:15 2022 -0700

    [2/2] Serialize bolt datasets (#655)
    
    * Serialization for BoltVector
    
    * Serialization for bolt datasets
    
    * Test utils function for bolt vector equality
    
    * cpp test for serializtion
    
    * Add pragma once
    
    * add python bindings
    
    * Remove save handle

commit b8a0276d512acdb0a7ab5201694afc5f7bbc499f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Aug 2 10:49:01 2022 -0700

    [1/2] Serialize BoltVector (#654)
    
    * Serialization for BoltVector
    
    * Test utils function for bolt vector equality
    
    * Add pragma once

commit 3bbedf1be4e89128b95dd6aaf11425f11d2ff957
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Aug 2 10:48:49 2022 -0700

    Fix memory overhead in numpy dataset processing (#656)
    
    * Add noexcept to force move
    
    * Add reserve to avoid memory allocations
    
    * copy constructos probably shouldn't be noexcept since they allocate memory
    
    * Add print statements to test
    
    * More-prints
    
    * more print statements
    
    * More prints
    
    * More prints
    
    * remove prints
    
    * Remove prints
    
    * Remove prints
    
    * Remove prints
    
    * check reserve is error
    
    * Remove reserve and add back all tests

commit 6fe6b271fc67c76a52e7e6ee55d83f685e48c303
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Jul 31 03:13:05 2022 -0500

    Get set gradients dag (#648)
    
    * Get gradients function
    
    * comments for return_policy
    
    * set gradients
    
    * Parameter reference for get/set weights/gradients
    
    * Docs for new methods
    
    * getStrides() method
    
    * Fix compile error
    
    * Use callback and gradient to test
    
    * Resolve comments
    
    * Undo strange change
    
    * Undo strange change
    
    * Fix test
    
    * Lower threshold

commit a924f8ec4b58f7c19bee2ad7ac25fa9af032c16f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Jul 29 14:44:02 2022 -0500

    Switch to constexpr if (#650)
    
    * Switch to constexpr if
    
    * Constexpr length
    
    * Switch to constexpr if

commit 99b6e99e62f4d6eba7efcfaa942a172faa62cbb3
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Jul 28 17:20:47 2022 -0500

    Adding flamegraph generation to Universe (#638)
    
    * Adding flamegraph repo
    
    * Adding flamegraph profiling script
    
    * Correctly checking for perf
    
    * Adding script to generate flamegraphs from benchmarks
    
    * Modifying to use py-spy
    
    * Making executable
    
    * Adding backslash
    
    * Fixing create flamegraph script
    
    * Forgot one level of folder jumping back
    
    * Seems to not like command on multiple lines
    
    * Fixing file naming
    
    * Fixing name of output file
    
    * Switching back to perf
    
    * Fixing typos

commit f6a6da16302890502b27592c2c645c8042a5af50
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jul 28 15:39:05 2022 -0500

    Add batch and epoch callbacks to dag (#644)
    
    * Add batch and epoch callbacks to dag
    
    * remove import
    
    * python format
    
    * Rename symbol and fix lint error
    
    * remove import
    
    * resolve comments

commit 48df0c2e4f6ee2784c2203c149edb59ab98bb9ea
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Thu Jul 28 14:49:36 2022 -0500

    Set and get weights for a specific node in the DAG (#623)
    
    * add setter and getter for node weights in the dag
    
    * add getter and setter for node bias vector
    
    * change test to use a generic dataset instead of MNIST
    
    * refactor the code
    
    * change return values of setNodeSparsity & setNodeWeights to FullyConnectedNode*
    
    * use shared pointers instead of the this pointer
    
    * reply to PR comments
    
    * change the test for bad numpy array input

commit ab0802c09c89ebd00d60bcd367f6bb624cb9cd55
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Jul 28 11:34:48 2022 -0500

    Fixing gcc version to 11.2.0 (#645)

commit 8771bc5087a0b68b8f699a1fc253d87603f08804
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Jul 28 10:15:51 2022 -0400

    Tabular Experiment (#633)
    
    * tabular experiment
    
    * pyformat
    
    * accuracy bug
    
    * uncomment
    
    * pyformat
    
    * comments and expects header
    
    * change bins back
    
    * fix header problem
    
    * pyformat
    
    * uncomment bolt train line and rename function
    
    * strip

commit 750098400ffe2dd56e99812b4344d7aa420311cb
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jul 27 16:03:45 2022 -0500

    Switch Layer Node For BERT-In-A-Box (#612)
    
    * Swtich layer
    
    * Integrate switch layer with graph
    
    * test
    
    * Add unit test
    
    * Switch layer experiment
    
    * experiment
    
    * cpp format
    
    * add token input
    
    * add input
    
    * Fix bugs
    
    * add switch summary
    
    * Fix clang tidy error
    
    * update parameters in switch
    
    * standardize experiemnt
    
    * Update constructor
    
    * Add comments and cleanup test
    
    * mlm benchmarks
    
    * python format
    
    * remove duplicate config key
    
    * fix load type
    
    * fix data path
    
    * Merge and fix compile errors
    
    * Resolve comments

commit f147b0bee7f754cbc5df0f10f1dbc13b7aebc012
Author: AIHenry <89421348+AIHenry@users.noreply.github.com>
Date:   Wed Jul 27 09:50:22 2022 -0500

    Cookie mlm (#618)
    
    * wrote cookie monster class with dag api
    
    * added test file
    
    * more edits
    
    * chasing a seg fault
    
    * reported seg faults. Finding solutions
    
    * finish up test file after shallow layer bug is fixed
    
    * changes to pr
    
    * format, commented out mlflow section
    
    * small fix
    
    * fixes
    
    * structure
    
    * writing mlm experiments
    
    * adding tests for mlm
    
    * formats and edits
    
    * misc
    
    * Use dataset pipeline instead of svm reader.
    
    * Changed test cases
    
    * delete file
    
    * fix python tests
    
    * clean up tests and scripts
    
    * changed the training method in cookie monster.
    
    * format
    
    * Changes to mlm training and vihan's comment
    
    * Changes to data loading according to changes in mlm loader
    
    * changes to Nick's comments
    
    * added back a line

commit d95620cadac336a87d95a07df8667b1675470d38
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jul 27 09:13:50 2022 -0500

    Fix release test (#643)
    
    * Fix broken release test
    
    * python format

commit 2e87eea979d02541a04a85cac11ba227f14d1e99
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jul 26 17:54:17 2022 -0500

    Create sampling config interface (#639)
    
    * Cleanup dataset organization
    
    * Remove old string stuff
    
    * cpp format
    
    * no lint
    
    * no lint
    
    * Migrate dlrm c++ tests to dag api
    
    * delete old clickthrough loader and add a new one
    
    * remove click through batch and masked sentence batch
    
    * python benchmark working
    
    * Starting migration
    
    * python benchmark working
    
    * Code written, now need to test benchmarks
    
    * Cleanup dataset loader
    
    * Working on mnist
    
    * Fixing amazon polarity, adding amazon670k
    
    * Deleting criteo for now
    
    * Modifying to say clickthrough not implemented yet
    
    * Reorganizing the run experiment file so that top level functions come first and dependent functions go down breadth-first style
    
    * cpp format
    
    * Fix test
    
    * Responding to pr comments (including going back to one config file)
    
    * Fixing benchmark script
    
    * Removing max test batch changes from C++
    
    * Renaming amazon670 config to original name
    
    * Fixing upload artifacts call
    
    * Renaming to correct name
    
    * criteo benchmark
    
    * Resolve comments from last pr
    
    * Resolve comments from last pr
    
    * Finish dlrm benchmark
    
    * add todo
    
    * python format
    
    * Sampling Config Interface
    
    * Fix bolt hash function tests
    
    * Fix python tests
    
    * format
    
    * Delete old sampling config
    
    * Add detailed summary
    
    * Add better error message for get activation function
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit 5f40fecc70ea840fbf783dc6cb96f3b8dd0c7e4b
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jul 26 16:35:29 2022 -0500

    Fix build on windows (#642)

commit 7cb3299afef85f206c39ce9d21cfd916541077e9
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jul 26 12:22:43 2022 -0500

    Move DLRM to DAG API (#634)
    
    * Cleanup dataset organization
    
    * Remove old string stuff
    
    * cpp format
    
    * no lint
    
    * no lint
    
    * Migrate dlrm c++ tests to dag api
    
    * delete old clickthrough loader and add a new one
    
    * remove click through batch and masked sentence batch
    
    * python benchmark working
    
    * Starting migration
    
    * python benchmark working
    
    * Code written, now need to test benchmarks
    
    * Cleanup dataset loader
    
    * Working on mnist
    
    * Fixing amazon polarity, adding amazon670k
    
    * Deleting criteo for now
    
    * Modifying to say clickthrough not implemented yet
    
    * Reorganizing the run experiment file so that top level functions come first and dependent functions go down breadth-first style
    
    * cpp format
    
    * Fix test
    
    * Responding to pr comments (including going back to one config file)
    
    * Fixing benchmark script
    
    * Removing max test batch changes from C++
    
    * Renaming amazon670 config to original name
    
    * Fixing upload artifacts call
    
    * Renaming to correct name
    
    * criteo benchmark
    
    * Resolve comments from last pr
    
    * Resolve comments from last pr
    
    * Finish dlrm benchmark
    
    * add todo
    
    * python format
    
    * Resolve comments
    
    * format
    
    * Resolve comments
    
    * Disable broken clang-tidy check
    
    * Re-delete file
    
    * refactor test
    
    * Initialize owns data
    
    * Enable clang-tidy check again
    
    * Enable clang-tidy check again
    
    * Delete stupid clang tidy check
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit d7a0e372a9cb1bf257c7abf5e182737606c04b59
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Tue Jul 26 20:56:18 2022 +0530

    explainability feature (#582)
    
    * added a function to get difference of input gradients
    
    * some changes
    
    * some changes
    
    * some changes
    
    * added a bool to get difference or only with second highest
    
    * some changes
    
    * changed default boolean value to false
    
    * some changes
    
    * some changes
    
    * added a parameter to take in required labels
    
    * some changes
    
    * some changes
    
    * some changes
    
    * some changes
    
    * added test case
    
    * some changes
    
    * test case and fixed the initialization issue
    
    * some changes
    
    * formatting
    
    * some changes
    
    * added some changes
    
    * changed test case
    
    * changed first to best_index
    
    * some changes
    
    * formatting
    
    * some changes
    
    * some changes
    
    * some changes
    
    * some changes
    
    * changes
    
    * some changes
    
    * some changes
    
    * some changes
    
    Co-authored-by: Yashwanth Adunukota <yashwanthadunukota@Yashwanths-MacBook-Air.local>

commit 0edb9b743705e061ae55e52c8d5b4c5bcec9a14a
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Tue Jul 26 13:47:27 2022 +0530

    Data parallel[1/n] Python Bindings (#587)
    
    * Added the PyBindings
    
    * Added the Tests
    
    * Data Parallel Implementation for Fully Connected Network Complete
    
    * Removed thehe MNIST File
    
    * Added changes to uspport sparcity
    
    * Solved Clang issues
    
    * Added code to support sparcity training on multiple nodes
    
    * Did Some changes to pybindings
    
    * Added Some debug statements
    
    * AAAdded Some Changes
    
    * Added shuffle seed
    
    * Added some debug statements
    
    * Added some more debug statements
    
    * Solved a bug
    
    * Solved the Bug
    
    * Starting Cleaning the Code
    
    * Added Remote Changes
    
    * making PR to see changes
    
    * see changes
    
    * Adding some changes
    
    * Added all the changes as required
    
    * Moved the code to better design
    
    * changed the setLayerSparsity to support hash_seed ans shuffle seed as well
    
    * Added Some changes to setSparsity Function
    
    * Cleaning and Annotating the code is done
    
    * Added the suggested changes
    
    * Formatting Done
    
    * Changing enable_sparse_inference to freezeHashTable
    
    * Some additional changes
    
    * Formatted the code
    
    * Returned the pointer directly in place of copying it to vector
    
    * Added the subsequent changes to conv layers
    
    * Added formatting
    
    * Some cleaning
    
    * Removed redundant code
    
    * Removed redundant code II
    
    * Cleaning the code
    
    * Merged some conflicts
    
    * Done Formatting
    
    * Cleaned some code
    
    * Changed ENUMS
    
    * Done Formatting
    
    * Some files were unsaved
    
    * Cleaned the Dimension Checks
    
    * Formatted
    
    * Cleaned the code further
    
    * Formatting
    
    * Added the dataset library to util
    
    * Formatting
    
    * Changed inheritance from Model to Fully Connected
    
    * Cleaned the tests
    
    * Cleaned up Tests
    
    * Cleaned the function description
    
    * added os lib to test_mnist
    
    * Changed the code
    
    * Cleaned the code
    
    * Cleaning the code further
    
    * made use_sparsity true
    
    * Done Minor Chnages
    
    * Improved Chack for Layer Index in SET/GET Functions
    
    * Done Formatting
    
    * Adding the changes
    
    * Formatting
    
    * Cleaned Some Code
    
    * Trying to find the issue
    
    * Merged to main
    
    * Solved a issue
    
    * Solved the issue with ctrl_c test
    
    * solved a bug
    
    * formatting
    
    * solved another bug
    
    * Added all the changes
    
    * Removed redirectCoutToPython Function
    
    * Added Some Changes
    
    * fORMATTED
    
    * Missed Library
    
    * Done all the changes
    
    * Merged with changes
    
    * Saved some changes
    
    * Saved unsaved files
    
    * updated functions with new parameters
    
    Co-authored-by: Pratikq Pranav <pratikqpranav@Pratikqs-MacBook-Air.local>

commit a726e12b144afd1d934a4816a68cc17e2219d69d
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jul 25 12:59:38 2022 -0500

    Migrating benchmarks to DAG (#635)
    
    * Starting migration
    
    * Code written, now need to test benchmarks
    
    * Working on mnist
    
    * Fixing amazon polarity, adding amazon670k
    
    * Deleting criteo for now
    
    * Modifying to say clickthrough not implemented yet
    
    * Reorganizing the run experiment file so that top level functions come first and dependent functions go down breadth-first style
    
    * Responding to pr comments (including going back to one config file)
    
    * Fixing benchmark script
    
    * Removing max test batch changes from C++
    
    * Renaming amazon670 config to original name
    
    * Fixing upload artifacts call
    
    * Renaming to correct name
    
    * Responding to comments

commit b76cf658a6cc968c46e3145cf82f33403a12c034
Author: Jerin Philip <109502794+jerin-thirdai@users.noreply.github.com>
Date:   Mon Jul 25 22:22:37 2022 +0530

    Add vim specific patterns to .gitignore (#632)

commit 8b63129f197b7e80e8d3e6296598927609dbc29e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Jul 24 22:16:39 2022 -0500

    Cleanup dataset organization (Nicks dataset purge) (#625)
    
    * Cleanup dataset organization
    
    * Remove old string stuff
    
    * cpp format
    
    * no lint
    
    * no lint
    
    * Remove dataset/vectors.h
    
    * no lint for load in memory
    
    * Try clang tidy version
    
    * check clang tidy version
    
    * try updating clang tidy
    
    * add --std=c++17 flag
    
    * install llvm 13
    
    * install llvm 13
    
    * More options to clang-tidy
    
    * More options to clang-tidy
    
    * Modify tuple op
    
    * manual allocation instead of make_shared
    
    * try unique ptr
    
    * change to shared_ptr in return
    
    * move in return
    
    * resolve comments
    
    * Fix pragma once
    
    * Add no lint
    
    * Try to fix clang-tidy error
    
    * Fix clang-tidy error

commit e55236ca785de9ba468d66985432bc3f76c8561d
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jul 22 10:34:38 2022 -0500

    Adding support for multiple vectors/token inputs and refactoring numpy -> bolt dataset (#629)
    
    * First part of multiple inputs
    
    * Finish dataset changes and fix tests
    
    * fix format
    
    * fix bug
    
    * Tuple batch processor
    
    * finish cleaning up dataset stuff
    
    * resolve comments
    
    * python format
    
    * resolve comments
    
    * Trying fix
    
    * Initial commit
    
    * Hunting down a bug
    
    * Fixed concat bug
    
    * Adding sparse dataset conversion
    
    * Migrating all python tests over for deleting and more testing purposes
    
    * Deleting DenseBatch and SparseBatch
    
    * Now debugging python tests
    
    * Python unit tests working
    
    * Fixing mach tests
    
    * Deleting magsearch
    
    * Now just need to fix mnist
    
    * Adding back parallel
    
    * Deleting unneeded import and half done tests
    
    * Formatting
    
    * Fixing ctrl c test
    
    * Responding to pr comments
    
    * Adding multiple input (multiple tokens) test
    
    * Responding to last pr comment
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit 0993e5aa6d760fa1e28e16cae2e84afb5b5d872d
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Fri Jul 22 11:18:13 2022 -0400

    check empty (#630)

commit e62b314950dd00647907094f34c08d03be36fd42
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Jul 21 12:10:26 2022 -0400

    upgrade (#628)

commit 71c92d0016b6bf83c3fac9047e8fb22577e1ea56
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Jul 21 08:56:43 2022 -0400

    bump to 0.1.6 (#626)

commit f436cc959b7b591d32e78d873a250499c8e3506f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jul 20 14:01:11 2022 -0500

    Multiple inputs for dag API (#621)
    
    * First part of multiple inputs
    
    * Finish dataset changes and fix tests
    
    * fix format
    
    * fix bug
    
    * Tuple batch processor
    
    * finish cleaning up dataset stuff
    
    * resolve comments
    
    * python format
    
    * resolve comments
    
    * Trying fix
    
    * run clang tidy only on single file
    
    * run clang tidy only on single file
    
    * remove docker from clang tidy
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * binary search
    
    * Add no lint
    
    * Add no lint
    
    * remove all clang tidy
    
    * no lint
    
    * no lint
    
    * Undo debugging changes
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit 657a8865cc02682d8bdf190bd21b7d75d7e215a2
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Wed Jul 20 08:16:53 2022 -0400

    Text encoding updates (#619)
    
    * brainstorm
    
    * changes
    
    * before benchmarking
    
    * version0, not super clean, also bug with creating buffers of a certain size before reducing that size in deduplication
    
    * changes
    
    * tosparsevector
    
    * bolt tokenizer
    
    * delete useless stuff
    
    * renaming and removing
    
    * format
    
    * comments
    
    * comments
    
    * henry comment
    
    * = after param names

commit 500785eafeb67371b2049cfec69c822752e8a1f7
Author: Blaise Muhirwa <blaise@thirdai.com>
Date:   Tue Jul 19 13:33:26 2022 -0500

    Adding functionality for modifying node sparsity in the DAG implementation (#615)
    
    * Temp commit
    
    * add setting node sparsity in the DAG implementation
    
    * add more unit tests
    
    * add more unit tests
    
    * Changes for Nick
    
    * Solving weird bug
    
    * add more unit tests
    
    * refactor the code in the unit tests
    
    * Removed a modified file from pull request
    
    * Fix minor errors and used custom formatting
    
    * responding to comments
    
    * fixed minor comments
    
    * responding to more comments
    
    Co-authored-by: Blaise Munyampirwa

commit 9567431866c79334dd4f9534058d673ca34f05a8
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Jul 19 08:49:17 2022 -0400

    Move windows.h import out of .h file (#622)
    
    * move to .cc
    
    * lint
    
    * lint std::move

commit 33a2c9872545a2597e94414d12cca9bbd4b51a0c
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Mon Jul 18 20:36:53 2022 +0530

    Added flush statement in print (#620)
    
    * Added flush statement in print
    
    * Formatting
    
    Co-authored-by: Pratikq Pranav <pratikqpranav@Pratikqs-MacBook-Air.local>

commit 8c7e0928507d439b9e8deec34f5d4012b334bdb7
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Sun Jul 17 23:01:40 2022 -0400

    Tabular Classifier (#572)
    
    * initial commit
    
    * constructor and load/save
    
    * pseudocode
    
    * pseudocode and outline
    
    * everything except metadata calculations
    
    * starting metadata changes
    
    * computing metadata
    
    * python bindings
    
    * bug with metadata cereal
    
    * finished, untested version
    
    * use safefileio
    
    * small fixes
    
    * cmakelists and autotuneutils bugfixes
    
    * tests and cmakelists
    
    * many small bug fixes
    
    * test outlines
    
    * first 3 tests
    
    * numeric processing and tests
    
    * finished tests
    
    * geordies changes
    
    * static function
    
    * remove testing files
    
    * comment
    
    * small changes and remove header requirement
    
    * python test
    
    * python format
    
    * python test bug
    
    * started adding block exception message
    
    * bugs with block_exception_message and autotuneutils
    
    * auto_classifiers directory with all .h files
    
    * remedy leaky abstraction
    
    * bugfixes
    
    * numeric hashing
    
    * parse csv row util
    
    * comments and small changes
    
    * nicks comments
    
    * return the exception_ptr instead of passing it
    
    * lint
    
    * ref
    
    * one line
    
    * last changes
    
    * remove unused stuff from merge
    
    * .
    
    * NOLINT THROW
    
    * pytest update
    
    * pyformat
    
    * pytest bug
    
    * pyformat

commit 64bd0adcc93f37de53a83e3e72368546f00ed7f4
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Fri Jul 15 20:24:14 2022 +0530

    Predict on sentence for text classifier (#594)
    
    * predict on sentence for text classifier
    
    * some changes
    
    * return the output class
    
    * test case added
    
    * formatting
    
    * some changes
    
    * some changes
    
    * fixed random seed issue
    
    * some changes
    
    * changes
    
    * fixed the rand issue in selectactiveneurons
    
    * nit changes
    
    Co-authored-by: Yashwanth Adunukota <yashwanthadunukota@Yashwanths-MacBook-Air.local>

commit f70a07ff9d86f930c99d8879b936e1290ff03b02
Author: AIHenry <89421348+AIHenry@users.noreply.github.com>
Date:   Fri Jul 15 09:50:21 2022 -0500

    quick fix for toml import (#617)
    
    * quick fix for toml import
    
    * format

commit b18a42b0a16127f1d71191d2be45a581f8b8dc5b
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jul 15 09:49:54 2022 -0500

    Migrating mach to the DAG api (#614)
    
    * Initial commit
    
    * Basically working now
    
    * Now just need to clean up and add tests
    
    * Cleaning up
    
    * Fixing memory bug
    
    * Continuing to clean up
    
    * Fixing order
    
    * Responding to pr comments
    
    * Python format
    
    * Responding to second round of comments
    
    * Initial commit
    
    * Making test faster
    
    * Making save load work
    
    * Fixing bug causing longer test time
    
    * Removing extra print statement
    
    * Responding to pr comments

commit 0e07e3c70473d1541320c7625309323976e9002a
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Jul 15 10:44:04 2022 +0530

    Add github action to run full benchmark jobs weekly (#616)
    
    * Add benchmarking suite action
    
    * Change cron time
    
    * Fix comments
    
    * Fix path
    
    * Add spaces between stars

commit 78f60f67e21a93d4252a0f46f7e18e8d440d1d1e
Author: AIHenry <89421348+AIHenry@users.noreply.github.com>
Date:   Thu Jul 14 12:55:07 2022 -0500

    Cookie Monster w/ DAG API (#600)
    
    * wrote cookie monster class with dag api
    
    * added test file
    
    * more edits
    
    * chasing a seg fault
    
    * reported seg faults. Finding solutions
    
    * finish up test file after shallow layer bug is fixed
    
    * changes to pr
    
    * format, commented out mlflow section
    
    * small fix
    
    * fixes

commit d1f1299a716ad3b4668d57bc10dcc0ea58202f7f
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jul 13 17:36:48 2022 -0500

    Adding bad input and bad label tests (Josh's Hall of Horrors part 1) (#613)
    
    * Adding input and label tests
    
    * Cleaning up batch dim checks

commit bef48786e57b99d34f71fd1e1ccd0af459388e2f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jul 13 13:05:43 2022 -0500

    Cleanup save/load API  (#611)
    
    * Simplified save api
    
    * Format
    
    * cleanup test
    
    * cleanup test
    
    * Fix broken tests
    
    * python format
    
    * Resolve comments
    
    * add comment

commit 2bf49cb75735bb2b8b42d4f43c5f40c1103c99be
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Wed Jul 13 10:24:48 2022 +0530

    saveload_MACH_bug (#610)
    
    * added seed
    
    * formatting
    
    * make seed a class attribute
    
    Co-authored-by: Shubh Gupta <shubh@Shubhs-MacBook-Air.local>

commit 901b3d4b2d97266fff5e541295fab5f76fc4d8c3
Author: bmeisburger <89763488+bmeisburger@users.noreply.github.com>
Date:   Tue Jul 12 20:33:29 2022 -0500

    Product search demo (#589)
    
    * Product Search Webapp Demo
    
    * remove debug mode
    
    * format
    
    * add readme
    
    * fix readme
    
    * added css styling
    
    * Remove debug and get gh actions to run
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>
    Co-authored-by: Benjamin Meisburger <ben@Benjamins-Air.attlocal.net>
    Co-authored-by: ben <bmeisburger@gmail.com>

commit 735eadba1c6be62b120ea0c673a69f9a99e005b8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jul 12 17:48:45 2022 -0500

    MLM with FC network - DAG API (#607)
    
    * Fc mlm network in dag api
    
    * Format
    
    * Fix parallelism and new train method
    
    * c++ script
    
    * mlm loader
    
    * Add mlm to train and predict
    
    * Add mlm to train and predict

commit 4c500dfd51cf17df280b4f2ce5c83708cce84ca5
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jul 11 15:37:23 2022 -0400

    Adding license (#608)

commit 70aaac3174a37f9b6a274a6b853c13d9d2079fdf
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jul 11 14:20:29 2022 -0400

    Adding numpy support to the new DAG API (#598)
    
    * Initial commit
    
    * Basically working now
    
    * Now just need to clean up and add tests
    
    * Cleaning up
    
    * Fixing memory bug
    
    * Continuing to clean up
    
    * Fixing order
    
    * Responding to pr comments
    
    * Python format
    
    * Responding to second round of comments
    
    * Fixing batch label check bug

commit ba1ac880eeefebdd11a68ab3a93e04149da2a3c3
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Jul 8 17:32:44 2022 -0500

    Fix bug (#599)

commit 001106244dd08c6f810bce53d2f28de8449656f0
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jul 7 17:59:04 2022 -0500

    Categorical multi label block (#597)
    
    * Categorical multi label block
    
    * Add optional delimiter

commit 0e567b20313169c47a57dd4dce97f50618a9f251
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jul 7 16:44:38 2022 -0500

    Freeze hash tables in dag (#596)
    
    * Make test file name consistent
    
    * Freeze hash tables in dag
    
    * Reorganize tests
    
    * Test for freeze hash tables
    
    * Python format
    
    * Fix test
    
    * fix name
    
    * flag for insert labels
    
    * flag for insert labels

commit 50b4d156e9e20c05b499ccc62f559c4afbbd0e4f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jul 7 12:25:26 2022 -0500

    Make test file name consistent (#595)
    
    * Make test file name consistent
    
    * Reorganize tests

commit 1679d8f3c395de0fd387129d29ebfc10496823d1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jul 7 00:51:59 2022 -0500

    Save/Load Dag and individual nodes (#593)
    
    * Serialization for Bolt DAG API
    
    * Tests for load/save
    
    * remove file
    
    * fix format
    
    * merge
    
    * Add python tests
    
    * Format
    
    * format
    
    * fix compile error
    
    * resolve comments
    
    * weird clang tidy error

commit a6d413890a69dcc020b64478444684e272eca71a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jul 6 20:22:43 2022 -0500

    Dag embedding node (#586)
    
    * Cleanup embedding layer
    
    * embedding tests
    
    * Support for token input batches
    
    * embedding state machine
    
    * State machine for fully connected node
    
    * Fix cpp format
    
    * State machine in node interface
    
    * fix assertions
    
    * clean up test
    
    * state machine for embedding node
    
    * Embedding test
    
    * remove prints
    
    * resolve comments
    
    * merge from state machine
    
    * Merge from printdag pr
    
    * Fix test
    
    * resolve comments
    
    * Fixed format
    
    * Check inputs are used
    
    * resolve comments
    
    * format

commit 3882f42f0fe269ec5331d1c47024fda5b8d0eecd
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jul 6 11:25:56 2022 -0400

    Adding the ability to get node by name (#592)
    
    * Basic printing
    
    * Adding summary test
    
    * Adding compile to state machine and setting name in compile
    
    * Fixing test
    
    * Abstracting more methods
    
    * Adding exception in input node
    
    * Adding some comments
    
    * Fixing mock graph traversal node
    
    * Removing old assertion
    
    * Fixing small bug
    
    * Responding to comments
    
    * Forgot to delete these
    
    * Removing unneeded variable setting in constructor
    
    * Responding to comments round 2
    
    * Initial commit
    
    * Temp commit
    
    * Fixing string to string reference
    
    * Formatting
    
    * Simple getting node/layer by name

commit ca9d2627d45c6e7f2f71920e63a68abc41de5ec8
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Jul 5 19:41:06 2022 -0400

    Printing dag and adding compiled state to Concatenate node (#590)
    
    * Basic printing
    
    * Adding summary test
    
    * Adding compile to state machine and setting name in compile
    
    * Fixing test
    
    * Abstracting more methods
    
    * Adding exception in input node
    
    * Adding some comments
    
    * Fixing mock graph traversal node
    
    * Removing old assertion
    
    * Fixing small bug
    
    * Responding to comments
    
    * Forgot to delete these
    
    * Removing unneeded variable setting in constructor
    
    * Responding to comments round 2

commit 9a6206d99493b203114189af0599a0057e18380e
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Jul 5 14:19:07 2022 -0400

    Fixing license files to work for the next year (#591)
    
    * Fixing license files to work for the next year
    
    * Fixing typo
    
    * Removing new line

commit c9a303a2480a705aa799d6930f12118a0831ac9d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jul 5 11:12:50 2022 -0500

    Sentiment Classification Demo (#557)
    
    * Setup training
    
    * Fix bug
    
    * save for inference
    
    * add webapp
    
    * cleanup pr
    
    * format
    
    * cleanup app
    
    * ready for dev
    
    * prettified the webapp
    
    * rounded latency
    
    * config for demo
    
    * fix webapp
    
    * app working
    
    * format
    
    * Cleanup pr
    
    * Cleanup pr
    
    * fix readme
    
    * undo changes
    
    * fix readme
    
    * ready to merge
    
    * fix format
    
    * enable sparse inference
    
    Co-authored-by: ben <bmeisburger@gmail.com>

commit 3e5f0dcd3e3eef37bea4b219c56a532556eab1f3
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Tue Jul 5 10:11:52 2022 +0530

    save, load, checkpoint mach (#581)
    
    * added save, load, checkpoint
    
    * cleaning up code
    
    Co-authored-by: Shubh Gupta <shubh@Shubhs-MacBook-Air.local>

commit 1a1299412861d66c8499db103eebb86123e990be
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jul 4 23:00:20 2022 -0500

    State machine for fully connected node (#584)
    
    * State machine for fully connected node
    
    * Fix cpp format
    
    * State machine in node interface
    
    * fix assertions
    
    * clean up test
    
    * remove prints
    
    * resolve comments
    
    * fix test
    
    * fix batch_index -> vec_index

commit 8ad7840fc96f6b6dcba0a6a85d5efa7c8ffdba39
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Jul 1 22:19:55 2022 -0500

    Product Search Webapp Demo (#562)
    
    * Product Search Webapp Demo
    
    * remove debug mode
    
    * format
    
    * add readme
    
    * fix readme

commit 3f6c4acfb02741af13a9d88c18ed30793177081b
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jul 1 17:35:17 2022 -0400

    Parse a website and answer questions on it demo (#560)
    
    * Fixing 1 centroid and max collision cases
    
    * Removing print statements
    
    * Basic web parsing app
    
    * Formatting
    
    * Demo working
    
    * Finished demo

commit 2be0edf856cabc2fb7e2add6c15551369f370271
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jul 1 14:41:13 2022 -0400

    Fix (#583)

commit b964e6f120f1077977668e133efe1fa2dffe8022
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jul 1 13:06:42 2022 -0400

    Adding concatenate layer to Bolt DAG (#580)
    
    * Adding mock node
    
    * Responding to comments
    
    * In progress
    
    * In theory this should work
    
    * Fixing CMake
    
    * Passing first test!
    
    * Forward pass tests working
    
    * Need to debug this segfault, clean up multiple inputs and batch tests
    
    * Preventing dense concatenation of sparse input
    
    * Fixed bugs, now need to cleanup and add more tests
    
    * Adding graph checks
    
    * Have e2e python test now
    
    * Now just need to figure out why these tests aren't working, then clean up
    
    * Found bug, now to clean up
    
    * Adding comments and clarifying some variable names
    
    * Concatenated class cleaned up
    
    * Cleaning up concatenated node test
    
    * Reverting uneeded change
    
    * Adding pragma once to ConversionUtils
    
    * Responding to section 1 of comments
    
    * Responding to section 2 of comments
    
    * Responding to section 3 of comments
    
    * Responding to last pr comments
    
    * Python format
    
    * Moving neuron index into if statement
    
    * Fixing concatenate tests
    
    * Making nullopt clearer for debug build
    
    * Cleaning up iota
    
    * Responding to comments
    
    * Renaming concatenate and adding assert no throw

commit 283f4ca3d12f1e843c1f677f4a253098a7b90402
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jun 30 12:04:18 2022 -0400

    Have build return errors on build failure (#575)
    
    * Have build return errors on build failure
    
    * print code
    
    * error code 1

commit 93ea1b3e966276f262246da455aa66599a5d28e6
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Jun 30 09:34:36 2022 -0400

    Fixing github actions to actually run tests in debug and asan (#574)
    
    * Fixing github actions to actually run tests in debug and asan
    
    * Format
    
    * Fixing workflow names

commit d4d75a9978cbfa52ecaecb7dbab4c07418843eea
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jun 29 20:33:48 2022 -0400

    Fix memory leak in graph test (#576)

commit 1a6b37caa8679a40332af6b4366d18f9615b2975
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jun 29 16:16:27 2022 -0400

    Adding a MockNode class for testing (#573)
    
    * Adding mock node
    
    * Responding to comments

commit 24ade7c28a8daae60e2beb51ca8c09ab7208a3c6
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Jun 29 14:29:59 2022 -0400

    Bolt DAG API for fully connected layers (#569)
    
    * graph api
    
    * comments
    
    * predecessors for concat
    
    * comments
    
    * comment
    
    * Work on api
    
    * Train method on graph
    
    * Fix metric include
    
    * predict
    
    * working on mnist
    
    * ready for benchmark
    
    * remove ;
    
    * fix update parameters
    
    * Renaming and add python test
    
    * remove files
    
    * Add cpp tests
    
    * remove unnecessary changes
    
    * Cleanup fully connected constructor
    
    * Fix rehash rebuild autotune
    
    * Graph traversal test
    
    * Add checks and tests
    
    * refactor rehash and rebuild
    
    * add sparsity for inference
    
    * comments
    
    * comments
    
    * rename for consistency
    
    * Fix test
    
    * fix python test
    
    * python format
    
    * resolve comments
    
    * fix compile error
    
    * fix tests
    
    * add train/predict config
    
    * rename
    
    * comment
    
    * fix graph traversal
    
    * resolve last commment
    
    * fix test
    
    * resolve last comments

commit 3d626442ed9b4dc8aa05bf1bbcd2e71694900ce8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jun 28 17:03:25 2022 -0400

    Fix Broken Release Test (#571)
    
    * fix python test
    
    * Make tests unit by default
    
    * Fix python format
    
    * Fix bug
    
    * fix name

commit cf9fd4be171de2181fcbd52b94ddf8f5fae6fdf7
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Jun 28 10:25:28 2022 -0400

    Python implementation of mach (#570)
    
    * Testing on amazon670k
    
    * Not working so trying normal amazon 670 again
    
    * Fixing training metadata
    
    * Cleaning up
    
    * Benchmarking mostly working
    
    * Adding a test for mach
    
    * Mach test working
    
    * Getting ready to run on mlflow
    
    * Getting ready for mlflow benchmark
    
    * Removing extra line
    
    * Responding to comments
    
    * Small change
    
    * Moving act func definition outside of the layer constructor

commit 51ec461c341455ee47b959ec88e0e459c8b39c70
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jun 28 09:05:00 2022 -0400

    Cleanup sparse inference (#565)
    
    * Remove 'shuffleActiveNeurons'
    
    * Remove from dlrm
    
    * Cleanup sparse inference
    
    * Cleanup sparse inference
    
    * Add sparse inference flag
    
    * remove file
    
    * fix python tests
    
    * fix python tests
    
    * fix python tests
    
    * fix python tests
    
    * fix bug
    
    * Resolve comments

commit 08a8189b3dc6ff81cca0b79ed4a2d1da465381be
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Jun 28 15:42:26 2022 +0800

    Streaming generic (block-configurable) data pipeline (#554)
    
    * all changes corresponding to sigmoid activation
    
    * added python bindings to BCE
    
    * bug fix in bce
    
    * added a stabilizing subtraction in sigmoid calculation
    
    * tests
    
    * tests
    
    * python
    
    * python
    
    * updated python binding
    
    * updated python binding
    
    * all the blocks we need
    
    * fix cmakelists
    
    * add includes
    
    * fix cmakelists
    
    * bindings and comments!
    
    * minor fixes
    
    * cmakelists fixes
    
    * fixed binding
    
    * minor fixes
    
    * shortcut
    
    * fix batch processor
    
    * fix wrong index bug
    
    * input and target dim bug fix
    
    * tryna make fast
    
    * remove increment at indices
    
    * speed up pair gram.
    
    * sanity check
    
    * added unigram
    
    * format
    
    * format
    
    * format
    
    * format
    
    * cleaned up text classification shortcut
    
    * parallel dataset export and support no target
    
    * format
    
    * fix
    
    * better shortcut
    
    * better comments
    
    * slight refactor
    
    * format
    
    * more in a batch
    
    * inlined things for speedup
    
    * threading gives another 15-20% improvement
    
    * fixed the seg fault
    
    * removed normalization of labels
    
    * temporary revert to elementLossGradient
    
    * tokenize_to_svm is now in dataset
    
    * extendable vectors test!
    
    * comments
    
    * formatting
    
    * test cmakelists
    
    * fixes
    
    * tests! and subsequent bug fixes
    
    * added gil release
    
    * responded to nick's comments
    
    * Modified to new bolt api with separate labels and examples
    
    * formatting
    
    * typing
    
    * remove unnecessary file
    
    * added test case for no label
    
    * formatting
    
    * python tests
    
    * formatting
    
    * resolve David's comments (except extendable vector stuff)
    
    * comments
    
    * Finished tests!
    
    * formatting
    
    * comments
    
    * more merge stuff
    
    * format
    
    * wrote test for categorical block, formatted
    
    * ExtendableVector->SegmentedFeatureVector refactor
    
    * hopefully fix linting
    
    * hopefully fix linting
    
    * struct -> class
    
    * struct -> class
    
    * struct -> class
    
    * hopefully fix linting
    
    * text block tests
    
    * small fixes
    
    * hopefully fixed testpypi
    
    * integration test with amazon polarity
    
    * change default to csv instead of tsv
    
    * fix test builds and move shared pointer
    
    * added sigmoid derivative function and cleaned switch cases
    
    * added unit test for sigmoid activation function
    
    * fixed formatting
    
    * fixed flaky unit test
    
    * cleaned conditional tree
    
    * template BatchProcessor
    
    * Masked sentence featurizer
    
    * format
    
    * fix test
    
    * fix test
    
    * debug text block test
    
    * resolve nick's review
    
    * resolving Nick's comments but getting errors
    
    * bug fix
    
    * resolve Nick's requests and fixed bugs
    
    * Add streaming to model
    
    * add test for masked sentence batch processor
    
    * Added Anshu and Nick's vector allocation suggestions
    
    * add start and end pos
    
    * merged with amazon polarity stuff
    
    * Resolve comments
    
    * resolved comments
    
    * resolved comments
    
    * resolved .has_value() comments
    
    * resolved .has_value() comments
    
    * remove keep alive, add doc for est_num_elems
    
    * remove keep alive
    
    * format
    
    * formatting
    
    * format
    
    * formatting
    
    * cleanups
    
    * Fixed BatchProcessor naming conflict
    
    * formatting
    
    * merge and cleanup
    
    * formatting
    
    * resolve Nick's comments
    
    * formatting
    
    * remove unnecessary header
    
    * more comments
    
    * formatting
    
    * remove unnecessary header
    
    * intermediate logging in trainOnStream
    
    * resolve comments and add tests
    
    * comments
    
    * comments
    
    * undo odd formatting changes
    
    * python format
    
    * fix error check in filesize
    
    * remove unwanted test
    
    * pipeline + streaming
    
    * fixed tests
    
    * formatting
    
    * streaming generic dataset loader + trigrams
    
    * more tests and formattin
    
    * data pipeline guide
    
    * more in data pipeline guide
    
    * Check for number of columns
    
    * Check for number of columns
    
    * generic batch processor handles erroneous input
    
    * no from_chars with float
    
    * blocks have expected num cols method
    
    * formatting
    
    * formatting
    
    * guide
    
    * data pipeline guide
    
    * parallel, no throw error in omp block
    
    * trigrams!
    
    * todo
    
    * guide
    
    * added delimiter test case
    
    * dense array block
    
    * bindings for accessing and printing vectors in dataset
    
    * formatting
    
    * fix python test error
    
    * pragma once
    
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: David Torres <david@thirdai.com>
    Co-authored-by: ben <bmeisburger@gmail.com>
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit 393453a2287c0e337983a389cc3c0e8470f170a0
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Jun 28 11:32:48 2022 +0530

    [BugFix] verify valid files (#563)
    
    * initial commit
    
    * remove bad file
    
    * more safe file opens
    
    * common function
    
    * safe file open functions
    
    * SafeFileMaker class and make sure all file opens are safe
    
    * linting
    
    * forgot to change old fileverifier code
    
    * rename to safefileio

commit 61033206442bd97fc1d057d69fdac05db92dbd73
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Jun 28 10:42:32 2022 +0800

    Add trigram text encoding (#553)
    
    * all changes corresponding to sigmoid activation
    
    * added python bindings to BCE
    
    * bug fix in bce
    
    * added a stabilizing subtraction in sigmoid calculation
    
    * tests
    
    * tests
    
    * python
    
    * python
    
    * updated python binding
    
    * updated python binding
    
    * all the blocks we need
    
    * fix cmakelists
    
    * add includes
    
    * fix cmakelists
    
    * bindings and comments!
    
    * minor fixes
    
    * cmakelists fixes
    
    * fixed binding
    
    * minor fixes
    
    * shortcut
    
    * fix batch processor
    
    * fix wrong index bug
    
    * input and target dim bug fix
    
    * tryna make fast
    
    * remove increment at indices
    
    * speed up pair gram.
    
    * sanity check
    
    * added unigram
    
    * format
    
    * format
    
    * format
    
    * format
    
    * cleaned up text classification shortcut
    
    * parallel dataset export and support no target
    
    * format
    
    * fix
    
    * better shortcut
    
    * better comments
    
    * slight refactor
    
    * format
    
    * more in a batch
    
    * inlined things for speedup
    
    * threading gives another 15-20% improvement
    
    * fixed the seg fault
    
    * removed normalization of labels
    
    * temporary revert to elementLossGradient
    
    * tokenize_to_svm is now in dataset
    
    * extendable vectors test!
    
    * comments
    
    * formatting
    
    * test cmakelists
    
    * fixes
    
    * tests! and subsequent bug fixes
    
    * added gil release
    
    * responded to nick's comments
    
    * Modified to new bolt api with separate labels and examples
    
    * formatting
    
    * typing
    
    * remove unnecessary file
    
    * added test case for no label
    
    * formatting
    
    * python tests
    
    * formatting
    
    * resolve David's comments (except extendable vector stuff)
    
    * comments
    
    * Finished tests!
    
    * formatting
    
    * comments
    
    * more merge stuff
    
    * format
    
    * wrote test for categorical block, formatted
    
    * ExtendableVector->SegmentedFeatureVector refactor
    
    * hopefully fix linting
    
    * hopefully fix linting
    
    * struct -> class
    
    * struct -> class
    
    * struct -> class
    
    * hopefully fix linting
    
    * text block tests
    
    * small fixes
    
    * hopefully fixed testpypi
    
    * integration test with amazon polarity
    
    * change default to csv instead of tsv
    
    * fix test builds and move shared pointer
    
    * added sigmoid derivative function and cleaned switch cases
    
    * added unit test for sigmoid activation function
    
    * fixed formatting
    
    * fixed flaky unit test
    
    * cleaned conditional tree
    
    * template BatchProcessor
    
    * Masked sentence featurizer
    
    * format
    
    * fix test
    
    * fix test
    
    * debug text block test
    
    * resolve nick's review
    
    * resolving Nick's comments but getting errors
    
    * bug fix
    
    * resolve Nick's requests and fixed bugs
    
    * Add streaming to model
    
    * add test for masked sentence batch processor
    
    * Added Anshu and Nick's vector allocation suggestions
    
    * add start and end pos
    
    * merged with amazon polarity stuff
    
    * Resolve comments
    
    * resolved comments
    
    * resolved comments
    
    * resolved .has_value() comments
    
    * resolved .has_value() comments
    
    * remove keep alive, add doc for est_num_elems
    
    * remove keep alive
    
    * format
    
    * formatting
    
    * format
    
    * formatting
    
    * cleanups
    
    * Fixed BatchProcessor naming conflict
    
    * formatting
    
    * merge and cleanup
    
    * formatting
    
    * resolve Nick's comments
    
    * formatting
    
    * remove unnecessary header
    
    * more comments
    
    * formatting
    
    * remove unnecessary header
    
    * intermediate logging in trainOnStream
    
    * resolve comments and add tests
    
    * comments
    
    * comments
    
    * undo odd formatting changes
    
    * python format
    
    * fix error check in filesize
    
    * remove unwanted test
    
    * pipeline + streaming
    
    * fixed tests
    
    * formatting
    
    * generic batch processor handles erroneous input
    
    * no from_chars with float
    
    * blocks have expected num cols method
    
    * formatting
    
    * parallel, no throw error in omp block
    
    * trigrams!
    
    * todo
    
    * fixed comment style
    
    * k gram vs tri gram
    
    * formatting and resolve nit
    
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: David Torres <david@thirdai.com>
    Co-authored-by: ben <bmeisburger@gmail.com>
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit 2eb99628eb534481c856c6f959291e8e455120dd
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jun 27 14:16:43 2022 -0400

    Remove 'shuffleActiveNeurons' (#564)
    
    * Remove 'shuffleActiveNeurons'
    
    * Remove from dlrm

commit 1394fc02b74c75e76b5f547444cd7d2223768d86
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jun 17 16:18:55 2022 -0400

    Fixing a couple of bugs in DocSearch (#559)
    
    * Fixing 1 centroid and max collision cases
    
    * Removing print statements
    
    * Responding to comments
    
    * Fixing typo

commit 0567f025a0422da7eba200e75499e057cb3bd93d
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Jun 17 16:10:28 2022 -0400

    Adding the ability to modify the layer sparsity (#556)
    
    * Changing sparsity of layers
    
    * Adding more tests
    
    * Couple of nits
    
    * Responding to comments

commit 2491be3a8347dff55bd7869899b42e053bf6fdc1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jun 16 17:25:14 2022 -0500

    Loss metrics for bolt (#543)
    
    * all changes corresponding to sigmoid activation
    
    * added python bindings to BCE
    
    * bug fix in bce
    
    * added a stabilizing subtraction in sigmoid calculation
    
    * fixed the seg fault
    
    * removed normalization of labels
    
    * temporary revert to elementLossGradient
    
    * added sigmoid derivative function and cleaned switch cases
    
    * added unit test for sigmoid activation function
    
    * fixed formatting
    
    * fixed flaky unit test
    
    * cleaned conditional tree
    
    * template BatchProcessor
    
    * Masked sentence featurizer
    
    * format
    
    * fix test
    
    * fix test
    
    * Add streaming to model
    
    * add test for masked sentence batch processor
    
    * Resolve comments
    
    * rename processSample to computeMetric
    
    * make loss functions into a metric
    
    * handle error cases
    
    * fixed cmake
    
    * Tests for loss metrics
    
    * comment
    
    * Loss tests
    
    * format
    
    * intermediate logging in trainOnStream
    
    * resolve comments and add tests
    
    * comments
    
    * comments
    
    * undo odd formatting changes
    
    * python format
    
    * fix comment
    
    * fix comment and categorical accuracy
    
    * fix comment and categorical accuracy
    
    * cpp_format
    
    * undo changes
    
    * undo changes
    
    * mean_squared_error_metric
    
    * fix format
    
    * remove import
    
    * fix header
    
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: ben <bmeisburger@gmail.com>

commit 04848249b99311cac1eda5d51f711a2d8cf09557
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Jun 16 15:23:54 2022 -0500

    Add step to clean up workspace after benchmarking action (#558)
    
    * Add step to clean up workspace after benchmarking action
    
    * Add sudo to the cleanup command
    
    * Move clean up to start
    
    * Add sudo
    
    * Explicitly provide path
    
    * Add open permissions command
    
    * Remove stray comment

commit 82cebd7d0cece50e178473d7ef17a734db7a2ec3
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Jun 16 19:27:18 2022 +0530

    Merging data pipeline with streaming dataset interface (#552)
    
    * all changes corresponding to sigmoid activation
    
    * added python bindings to BCE
    
    * bug fix in bce
    
    * added a stabilizing subtraction in sigmoid calculation
    
    * tests
    
    * tests
    
    * python
    
    * python
    
    * updated python binding
    
    * updated python binding
    
    * all the blocks we need
    
    * fix cmakelists
    
    * add includes
    
    * fix cmakelists
    
    * bindings and comments!
    
    * minor fixes
    
    * cmakelists fixes
    
    * fixed binding
    
    * minor fixes
    
    * shortcut
    
    * fix batch processor
    
    * fix wrong index bug
    
    * input and target dim bug fix
    
    * tryna make fast
    
    * remove increment at indices
    
    * speed up pair gram.
    
    * sanity check
    
    * added unigram
    
    * format
    
    * format
    
    * format
    
    * format
    
    * cleaned up text classification shortcut
    
    * parallel dataset export and support no target
    
    * format
    
    * fix
    
    * better shortcut
    
    * better comments
    
    * slight refactor
    
    * format
    
    * more in a batch
    
    * inlined things for speedup
    
    * threading gives another 15-20% improvement
    
    * fixed the seg fault
    
    * removed normalization of labels
    
    * temporary revert to elementLossGradient
    
    * tokenize_to_svm is now in dataset
    
    * extendable vectors test!
    
    * comments
    
    * formatting
    
    * test cmakelists
    
    * fixes
    
    * tests! and subsequent bug fixes
    
    * added gil release
    
    * responded to nick's comments
    
    * Modified to new bolt api with separate labels and examples
    
    * formatting
    
    * typing
    
    * remove unnecessary file
    
    * added test case for no label
    
    * formatting
    
    * python tests
    
    * formatting
    
    * resolve David's comments (except extendable vector stuff)
    
    * comments
    
    * Finished tests!
    
    * formatting
    
    * comments
    
    * more merge stuff
    
    * format
    
    * wrote test for categorical block, formatted
    
    * ExtendableVector->SegmentedFeatureVector refactor
    
    * hopefully fix linting
    
    * hopefully fix linting
    
    * struct -> class
    
    * struct -> class
    
    * struct -> class
    
    * hopefully fix linting
    
    * text block tests
    
    * small fixes
    
    * hopefully fixed testpypi
    
    * integration test with amazon polarity
    
    * change default to csv instead of tsv
    
    * fix test builds and move shared pointer
    
    * added sigmoid derivative function and cleaned switch cases
    
    * added unit test for sigmoid activation function
    
    * fixed formatting
    
    * fixed flaky unit test
    
    * cleaned conditional tree
    
    * template BatchProcessor
    
    * Masked sentence featurizer
    
    * format
    
    * fix test
    
    * fix test
    
    * debug text block test
    
    * resolve nick's review
    
    * resolving Nick's comments but getting errors
    
    * bug fix
    
    * resolve Nick's requests and fixed bugs
    
    * Add streaming to model
    
    * add test for masked sentence batch processor
    
    * Added Anshu and Nick's vector allocation suggestions
    
    * add start and end pos
    
    * merged with amazon polarity stuff
    
    * Resolve comments
    
    * resolved comments
    
    * resolved comments
    
    * resolved .has_value() comments
    
    * resolved .has_value() comments
    
    * remove keep alive, add doc for est_num_elems
    
    * remove keep alive
    
    * format
    
    * formatting
    
    * format
    
    * formatting
    
    * cleanups
    
    * Fixed BatchProcessor naming conflict
    
    * formatting
    
    * merge and cleanup
    
    * formatting
    
    * resolve Nick's comments
    
    * formatting
    
    * remove unnecessary header
    
    * more comments
    
    * formatting
    
    * remove unnecessary header
    
    * intermediate logging in trainOnStream
    
    * resolve comments and add tests
    
    * comments
    
    * comments
    
    * undo odd formatting changes
    
    * python format
    
    * fix error check in filesize
    
    * remove unwanted test
    
    * pipeline + streaming
    
    * fixed tests
    
    * formatting
    
    * generic batch processor handles erroneous input
    
    * no from_chars with float
    
    * blocks have expected num cols method
    
    * formatting
    
    * parallel, no throw error in omp block
    
    * fix lint issue
    
    * Resolved Nick's comments
    
    * clang tidy
    
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: David Torres <david@thirdai.com>
    Co-authored-by: ben <bmeisburger@gmail.com>
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit 6f852ac0dbc22cb8680f1d8f46f204c2a930223e
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Thu Jun 16 15:50:13 2022 +0530

    Generic hash function (#537)
    
    * initial stage
    
    * saving the work
    
    * benchmark scripts updation
    
    * calculated accuracies for DWTA and FastSRP among some configs
    
    * applied formatting stuff
    
    * added bolt.cc also
    
    * done some changes based on clang-tidy error
    
    * some issue with clang-tidy
    
    * some issue with cpp-format
    
    * changes done to get hash function as enum
    
    * formatting stuff
    
    * formatting
    
    * some changes
    
    * some changes
    
    * some changes
    
    * removed DensifiedMinHash as it is not yet implemented for singledense
    
    * added test file for testing hash functions
    
    * formatting
    
    * some changes
    
    * some changes
    
    * some changes
    
    * some changes
    
    * some changes
    
    * changes done
    
    * changes done
    
    * some changes
    
    * some changes
    
    * changes
    
    * changes
    
    * changes
    
    * suggested change in .summary()
    
    * suggested change in .summary()
    
    * some changes
    
    Co-authored-by: Yashwanth Adunukota <yashwanthadunukota@Yashwanths-MacBook-Air.local>

commit eca5c2dfc469bae7677c5511ea857ef032acb6b7
Author: PRATIK PRANAV <45529064+pratkpranav@users.noreply.github.com>
Date:   Thu Jun 16 12:24:34 2022 +0530

    CTRL+C Funtionality added to train function(Pratik) (#527)
    
    * CTRL+C Funtionality added to train function(Pratik)
    
    * Added csignal library,(As Integration test were failing
    
    * Solved Clang-Tidy Issues
    
    * Added std:: to signal functions
    
    * Just running some checks to find buggit add .
    
    * Just running some checks to find buggit add .
    
    * Just running some checks to find bug
    
    * Just running some checks to find bug
    
    * Just running some checks to find bug
    
    * Done some changes
    
    * Done the changes suggested by Nick
    
    * Done the changes suggested by Nick
    
    * Some Additional Changes Done
    
    * Tests Added
    
    * Some Changes to Tests
    
    * Some changes done in Tests
    
    * Test files added
    
    * ran the formatting tests
    
    * Some error was in tests
    
    * Added a check the test ran only on linux and darwin
    
    * Some changes to tests
    
    * Formatting
    
    * Formatting
    
    * Running without tests
    
    * Removed errorneous flags
    
    * Working now, adding the test files again
    
    * Changed Test to run on windows too
    
    * Adding the pyunit test mark
    
    * Solving the formatting issue
    
    * Added all the necessary changes suggested
    
    * Done the formatting
    
    * Increased the epochs to 10000000 to make sure program doesnot terminates before time.sleep is called
    
    * Python Formatting
    
    * Added changes suggested by Josh
    
    * Formatting changes done
    
    * Changed the comments
    
    * Added all hte suggested changes
    
    * Added hte formatting
    
    * Changed load_factor to sparsity
    
    * Changing the sparsity back to load_factor
    
    * Added some changes
    
    * Added scipy to python-test.yml
    
    * Added commment for restoring old signal handler
    
    * Removed scipy library
    
    Co-authored-by: Pratikq Pranav <pratikqpranav@Pratikqs-MacBook-Air.local>

commit 074a1e1b91b8923dc8b9291dd3addde715d71aae
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Jun 15 15:01:22 2022 -0500

    Add test benchmark action (#550)
    
    * Add test benchmark action
    
    * Switch to github host as a test
    
    * Fix filename
    
    * Build package and install dependencies
    
    * Add missing dependency to installation list
    
    * Add boto3 to installation list
    
    * Disable mlflow artifact tracking temporarily
    
    * Switch back to self hosted runner
    
    * Add docker run steps
    
    * Fix yaml formatting
    
    * Remove -it flag from docker-run
    
    * Change back to interactive mode when running docker
    
    * add default shell
    
    * Change default shell settings
    
    * Test new shell
    
    * Another small test
    
    * Simpler test
    
    * Switch to ubuntu-latest
    
    * Another test on ubuntu-latest
    
    * Try new run command
    
    * Remove -it flag again
    
    * Add exec command
    
    * Try to print out test
    
    * Add pwd command
    
    * Add python command
    
    * Add build command
    
    * Add ls command
    
    * Change to simple ls
    
    * Full run (hopefully)
    
    * Move commands to bash script
    
    * Add full path
    
    * Add sudo
    
    * Add absolute path
    
    * Fix bad path
    
    * Add full path for benchmark config
    
    * Mount data folder
    
    * Switch back to self hosted
    
    * Switch to chaining commands within quotes
    
    * Switch to double quotes
    
    * Switch to single command
    
    * Add /bin/bash -c
    
    * Chain commands with semicolon
    
    * Clean up code
    
    * Add disable upload artifacts flag
    
    * Switch to ubuntu-latest
    
    * Switch back to self hosted

commit ff413cd23cda02dc202d8e8316d87cc327ea8dff
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Tue Jun 14 12:28:20 2022 +0530

    New serialize small (#532)
    
    * adding save load
    
    * adding get set functions
    
    * unit test for 4 combinations of load save, random order of training load checkpoint, etc.
    
    * ran formatter
    
    * remove sys_int
    
    * remove sys_int
    
    * made two more test functions, removed get set weights, removed exceptions
    
    * is_shallow function name fix in fully connected network
    
    * isShallow function call changed
    
    * made a new unit test file, made code more clear, added trim for inference method
    
    * updated load_factor to sparsity
    
    * changed acti functions, added save func
    
    * utils file, more comments
    
    * pytest.raises, load_factor to sparsity, made utils
    
    * spacing
    
    * changed utils
    
    * changed commenting style, modified functions in utils
    
    * nits
    
    Co-authored-by: Shubh Gupta <shubh@Shubhs-MacBook-Air.local>

commit ac9b4a49351b85f9c6ea29e48c22b8ef304278d4
Author: bmeisburger <89763488+bmeisburger@users.noreply.github.com>
Date:   Mon Jun 13 16:03:08 2022 -0500

    Added network.summary() and __str__ functionality (#548)
    
    * added summary functionality, unit tests, and __str__ method
    
    * Update bolt/src/networks/tests/FullyConnectedNetworkTest.cc
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * modified network.summary to take optional detailed parameter, exposed to python
    
    * fixed formatting
    
    * final tweaks
    
    * fixed formatting
    
    Co-authored-by: ben <bmeisburger@gmail.com>
    Co-authored-by: Joshua Engels <josh@thirdai.com>

commit ca5d42198ee20fcf6153b6d00a02810157500dbb
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jun 13 09:14:13 2022 -0500

    Add train/predict methods for streaming datasets (#533)
    
    * all changes corresponding to sigmoid activation
    
    * added python bindings to BCE
    
    * bug fix in bce
    
    * added a stabilizing subtraction in sigmoid calculation
    
    * fixed the seg fault
    
    * removed normalization of labels
    
    * temporary revert to elementLossGradient
    
    * added sigmoid derivative function and cleaned switch cases
    
    * added unit test for sigmoid activation function
    
    * fixed formatting
    
    * fixed flaky unit test
    
    * cleaned conditional tree
    
    * template BatchProcessor
    
    * Masked sentence featurizer
    
    * format
    
    * fix test
    
    * fix test
    
    * Add streaming to model
    
    * add test for masked sentence batch processor
    
    * Resolve comments
    
    * intermediate logging in trainOnStream
    
    * resolve comments and add tests
    
    * comments
    
    * comments
    
    * undo odd formatting changes
    
    * python format
    
    * fix error check in filesize
    
    * fix windows build error
    
    * resolve comments
    
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: ben <bmeisburger@gmail.com>

commit 96bac585af089316fedb297711d8928e1ea40d46
Author: shubh3ai <106235924+shubh3ai@users.noreply.github.com>
Date:   Mon Jun 13 10:03:34 2022 +0530

    non-trainable layer (#526)
    
    * ran mnist and random dataset test cases, norm difference for non-trainable=0, added a cout to convlayer to implement non-trainable
    
    * added a getTrainable function for fully connected layer returning whether a layer is trainable or not
    
    * clang-format
    
    * python-format
    
    * python-format
    
    * train_data
    
    * changed epochs
    
    * added forced build, changed assert to 0, changed names of some tests
    
    * python-format
    
    * changed spacing
    
    * removed force build from layers
    
    * Update bolt/python_bindings/BoltPython.cc
    
    Co-authored-by: Joshua Engels <josh@thirdai.com>
    
    * adding more comments, removed mnist test
    
    * ran formatter
    
    * changing sparsity
    
    * fixed sparsity
    
    * changed load factor to sparsity, some minor edits
    
    * nits
    
    Co-authored-by: Shubh Gupta <shubh@Shubhs-MacBook-Air.local>
    Co-authored-by: Joshua Engels <josh@thirdai.com>

commit 7b6feda8175b4176c115a96e76c9db893cf06bd9
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Fri Jun 10 19:31:06 2022 +0530

    [4/4] ExtendableVector->SegmentedFeatureVector refactor (#523)

commit 403ab7c027bb3c0eff8c9040aea1fa2becc241d3
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Jun 9 16:38:22 2022 -0500

    Text classifier benchmark (#544)
    
    * Add text classifier benchmark with mlflow
    
    * Test on oracle datasets
    
    * Checking in progress
    
    * Made more progress
    
    * Address PR comments
    
    * Fix typo
    
    * Address pr comments
    
    * Python formatting
    
    * Switch to kw arguments
    
    Co-authored-by: Vihan Lakshman <vihan@Vihans-MacBook-Air.local>

commit 26e97792110a689af38aceae46dd540e266acb1f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jun 9 10:24:05 2022 -0500

    Fix flaky mnist test (#547)

commit e97b93bf6e419803f9bfd260a32a610771e12823
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Jun 9 10:18:58 2022 -0400

    Adding manual workflow run for test pypi (#546)

commit 8c1386c2bf955e42ef6807d5921d0c8bca8ba0ac
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jun 8 11:07:07 2022 -0400

    Reduce cost of github actions by changing when wheel actions run (#542)
    
    * Fixing build and removing unused benchmark script
    
    * Modifying workflows to reduce billing
    
    * Moving back to a smaller change
    
    * Removing extra file

commit b34d92c23044e146f535f1774c41ab9286317cb1
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Jun 8 18:26:48 2022 +0530

    [3 / 3] Data pipeline for amazon polarity: featurizer implementations for sentiment analysis (#511)
    
    * tests
    
    * tests
    
    * python
    
    * python
    
    * updated python binding
    
    * updated python binding
    
    * all the blocks we need
    
    * fix cmakelists
    
    * add includes
    
    * fix cmakelists
    
    * bindings and comments!
    
    * minor fixes
    
    * cmakelists fixes
    
    * fixed binding
    
    * minor fixes
    
    * shortcut
    
    * fix batch processor
    
    * fix wrong index bug
    
    * input and target dim bug fix
    
    * tryna make fast
    
    * remove increment at indices
    
    * speed up pair gram.
    
    * sanity check
    
    * added unigram
    
    * format
    
    * format
    
    * format
    
    * format
    
    * cleaned up text classification shortcut
    
    * parallel dataset export and support no target
    
    * format
    
    * fix
    
    * better shortcut
    
    * better comments
    
    * slight refactor
    
    * format
    
    * more in a batch
    
    * inlined things for speedup
    
    * threading gives another 15-20% improvement
    
    * tokenize_to_svm is now in dataset
    
    * extendable vectors test!
    
    * comments
    
    * formatting
    
    * test cmakelists
    
    * fixes
    
    * tests! and subsequent bug fixes
    
    * added gil release
    
    * responded to nick's comments
    
    * Modified to new bolt api with separate labels and examples
    
    * formatting
    
    * typing
    
    * remove unnecessary file
    
    * added test case for no label
    
    * formatting
    
    * python tests
    
    * formatting
    
    * resolve David's comments (except extendable vector stuff)
    
    * comments
    
    * Finished tests!
    
    * formatting
    
    * comments
    
    * more merge stuff
    
    * format
    
    * wrote test for categorical block, formatted
    
    * hopefully fix linting
    
    * hopefully fix linting
    
    * struct -> class
    
    * struct -> class
    
    * struct -> class
    
    * hopefully fix linting
    
    * text block tests
    
    * small fixes
    
    * hopefully fixed testpypi
    
    * integration test with amazon polarity
    
    * change default to csv instead of tsv
    
    * fix test builds and move shared pointer
    
    * debug text block test
    
    * resolve nick's review
    
    * resolving Nick's comments but getting errors
    
    * bug fix
    
    * resolve Nick's requests and fixed bugs
    
    * Added Anshu and Nick's vector allocation suggestions
    
    * add start and end pos
    
    * resolved comments
    
    * resolved comments
    
    * resolved .has_value() comments
    
    * resolved .has_value() comments
    
    * remove keep alive, add doc for est_num_elems
    
    * remove keep alive
    
    * format
    
    * formatting
    
    * format
    
    * formatting
    
    * cleanups
    
    * Fixed BatchProcessor naming conflict
    
    * formatting
    
    * merge and cleanup
    
    * formatting
    
    * resolve Nick's comments
    
    * remove unnecessary header
    
    * more comments
    
    * formatting
    
    * remove unnecessary header
    
    * default arg for est_num_elems
    
    * fix test
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: David Torres <david@thirdai.com>

commit 1c6836f97c1445b9d7d4342c154ee0a49627e72a
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Jun 8 14:05:43 2022 +0530

    [2 / 3] Data pipeline for amazon polarity: python bindings and restructuring the python files (#510)

commit cb648f2b93ceacf9613b49f7ca053631b4e5563e
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Jun 8 10:35:28 2022 +0530

    [1 / 3] Data pipeline for amazon polarity: core components of data pipeline (#509)
    
    * tests
    
    * tests
    
    * fix cmakelists
    
    * minor fixes
    
    * cmakelists fixes
    
    * fix batch processor
    
    * remove increment at indices
    
    * format
    
    * parallel dataset export and support no target
    
    * format
    
    * fix
    
    * slight refactor
    
    * format
    
    * tokenize_to_svm is now in dataset
    
    * extendable vectors test!
    
    * comments
    
    * formatting
    
    * test cmakelists
    
    * fixes
    
    * tests! and subsequent bug fixes
    
    * responded to nick's comments
    
    * Modified to new bolt api with separate labels and examples
    
    * formatting
    
    * remove unnecessary file
    
    * added test case for no label
    
    * formatting
    
    * resolve David's comments (except extendable vector stuff)
    
    * comments
    
    * hopefully fix linting
    
    * hopefully fix linting
    
    * struct -> class
    
    * hopefully fix linting
    
    * hopefully fixed testpypi
    
    * resolve nick's review
    
    * bug fix
    
    * resolve Nick's requests and fixed bugs
    
    * resolved .has_value() comments
    
    * resolved .has_value() comments
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit f09400b89f7c14fe498c211314933cff875b6a02
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jun 6 15:32:52 2022 -0500

    Bert in a box data pipeline (#531)
    
    * all changes corresponding to sigmoid activation
    
    * added python bindings to BCE
    
    * bug fix in bce
    
    * added a stabilizing subtraction in sigmoid calculation
    
    * fixed the seg fault
    
    * removed normalization of labels
    
    * temporary revert to elementLossGradient
    
    * added sigmoid derivative function and cleaned switch cases
    
    * added unit test for sigmoid activation function
    
    * fixed formatting
    
    * fixed flaky unit test
    
    * cleaned conditional tree
    
    * template BatchProcessor
    
    * Masked sentence featurizer
    
    * format
    
    * fix test
    
    * fix test
    
    * add test for masked sentence batch processor
    
    * Resolve comments
    
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: ben <bmeisburger@gmail.com>

commit b060de33a29233b0e2bfa5b0ee483c70d42fd3fd
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jun 6 14:16:47 2022 -0500

    Bce (#530)
    
    * all changes corresponding to sigmoid activation
    
    * added python bindings to BCE
    
    * bug fix in bce
    
    * added a stabilizing subtraction in sigmoid calculation
    
    * fixed the seg fault
    
    * removed normalization of labels
    
    * temporary revert to elementLossGradient
    
    * added sigmoid derivative function and cleaned switch cases
    
    * added unit test for sigmoid activation function
    
    * fixed formatting
    
    * fixed flaky unit test
    
    * cleaned conditional tree
    
    * Add flag to avoid normalizing labels
    
    * Fix method signature
    
    * Resolve some comments
    
    * Cleanup layerUtils
    
    * rename data loader parameter and add loss derivation
    
    * cleanup docs
    
    * Remove problematic check
    
    * Resolve comment
    
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: ben <bmeisburger@gmail.com>

commit 9b2be2eb1bc3653c6dad9778a3c06533c6c4783e
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Mon Jun 6 10:24:30 2022 -0500

    Add script to make running benchmarks easier (#538)
    
    * Add python script for automated bolt benchmarking
    
    * Remove old benchmarking script
    
    * Use f-strings for formatting
    
    * Python formatting
    
    * Address PR comments

commit 370105fb1ca3661afebf21b3c4b2781ec124dd4e
Author: Joshua Engels <josh@thirdai.com>
Date:   Sat Jun 4 18:11:46 2022 -0400

    Renaming "flash" folder to "search" folder and fixing python test github actions (#540)
    
    * Renaming flash folder -> search folder and fixing github actions
    
    * Fixing unecessary change
    
    * Removing extra src/ in path
    
    * Fixing text classification tests
    
    * Adding needed python packages for testing
    
    * Forgot to import os
    
    * Ensuring license file gets set back to a valid value in testing
    
    * Forgot to run integration tests
    
    * Printing out the tests we are running before we run them

commit 6d02010864307bac462413c19fd4225b0c839083
Author: yashuroyal <106241157+yashuroyal@users.noreply.github.com>
Date:   Fri Jun 3 11:44:26 2022 +0530

    first commit of act-fn-string (#524)
    
    * first commit of act-fn-string
    
    * changed cpp-formating
    
    * rectified clang-tidy issue
    
    * checking
    
    * changes done
    
    * modified test_mnist.py to give activation function as string
    
    * Update bolt/python_tests/test_mnist.py
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/python_tests/test_mnist.py
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * done all changes
    
    Co-authored-by: Yashwanth Adunukota <yashwanthadunukota@Yashwanths-MacBook-Air.local>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit c3f3e213365d79c7a7a7891f76e6f4d4608ef4c4
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jun 2 14:05:05 2022 -0500

    Rename load_factor -> sparsity (#535)
    
    * Rename load_factor -> sparsity
    
    * fix formatting

commit 3e4055134b752bad7085e079cf6f56653c0ca928
Author: bmeisburger <89763488+bmeisburger@users.noreply.github.com>
Date:   Tue May 31 13:02:36 2022 -0500

    Added tanh activation function (#521)
    
    * Added tanh activation function in LayerUtils, FullyConnectedLayer
    
    * Updated python bindings to reflect additional activation function
    
    * Added tanh to layer config enum, added tanh unit test
    
    * fixed formatting
    
    * removed duplicate linear
    
    * fixed clang-tidy error, added comment, abstracted test case
    
    Co-authored-by: ben <bmeisburger@gmail.com>

commit 413f3c0403b7f65c5d637826b87341f2703b5f2d
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue May 31 13:11:48 2022 -0400

    Bumping to 0.1.5 (#529)

commit 02e977217a95186c63fcccfa9e2c62840a4c40d4
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon May 30 17:48:08 2022 -0500

    Generic text classifier (#520)

commit 17eaec040a359f1387303c2182136070c2f57969
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon May 30 16:56:41 2022 -0500

    Add targets to build script and fix GitHub actions (#528)
    
    * Add no clean option
    
    * fix cpp gh actions
    
    * remove weird import
    
    * fix dependency
    
    * Remove docker from tests
    
    * Make tests not verbose
    
    * Cleanup build.py
    
    * Labels to parameters

commit a429297d2df349df53804e8ad10c37f4841373ee
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri May 27 16:35:35 2022 -0500

    [2/2] Generalize Train/Predict to take in only py::object and construct dataset (#517)
    
    * new data loaders
    
    * Bolt cpp api working with new data loaders
    
    * Fix model tests
    
    * Fix dataset tests
    
    * Working on bolt python bindings
    
    * Python bindings fixed
    
    * Remove bolt input batch
    
    * remove extra semicolon
    
    * Fix python tests
    
    * Fix bolt benchmark
    
    * Add docs
    
    * remove optional
    
    * test casting with error checks
    
    * Basic version working
    
    * fix formating
    
    * Fix numpy passing bug
    
    * remove commented code
    
    * Generalize to int and uint
    
    * Change api to use context
    
    * Make labels work with any int
    
    * Resolve comments
    
    * Fix cpp format
    
    * switch to default move constructor
    
    * Cleanup PR
    
    * missed a merge conflict
    
    * Format
    
    * Docs for train/predict
    
    * Add comments and resolve suggestions

commit fc841ed777b85e151ab10f890589eed0a81a41c3
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu May 26 20:14:50 2022 -0500

    Python conv (#482)
    
    * initial interface
    
    * hashing changes
    
    * upper bound from >= to ==
    
    * change tuple to pair in conv
    
    * sparse inference corrections for ConvLayer
    
    * initial interface
    
    * hashing changes
    
    * upper bound from >= to ==
    
    * change tuple to pair in conv
    
    * sparse inference corrections for ConvLayer
    
    * nick hashing changes
    
    * Update bolt/src/layers/ConvLayer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * serialization (not tested)
    
    * working serialization
    
    * use vectors for buildHashTables
    
    * remove empty lines
    
    * v0 config changes. not compiling yet
    
    * small changes
    
    * small fixes and incomplete python bindings
    
    * constructor fix
    
    * change configs to classes
    
    * change to shared_ptr
    
    * initialization list
    
    * move act func derivative to layer utils
    
    * naming and shared ptr fixes
    
    * bolt python layer name changes
    
    * one more name change
    
    * input config and consolidate createLayer() into one function
    
    * add printing
    
    * get set weights
    
    * geordie's changes
    
    * Update bolt/src/layers/ConvLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * get set weights changes
    
    * revert get/set weights to unblock
    
    * remove using in dwta
    
    * dumb error
    
    * dumb merge change
    
    * naming changes
    
    * initial commit unfinished
    
    * move initialization to network
    
    * type alias
    
    * push to blade
    
    * python formatting
    
    * wmape python fix
    
    * trial test
    
    * finished script before mlflow logging
    
    * mlflow integration
    
    * remove unnecessary files
    
    * default sampling config values
    
    * default sampling config python bindings for convlayer
    
    * small fixes
    
    * python bindings fix
    
    * python format
    
    * update layer utils
    
    * joshs changes
    
    * py format
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>

commit 3d4fc582d9a655ba49fcf285ec2b0ef2b792274c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon May 23 19:48:04 2022 -0400

    [1/2] Change bolt to take in data and labels separately (#512)
    
    * new data loaders
    
    * Bolt cpp api working with new data loaders
    
    * Fix model tests
    
    * Fix dataset tests
    
    * Working on bolt python bindings
    
    * Python bindings fixed
    
    * Remove bolt input batch
    
    * remove extra semicolon
    
    * Fix python tests
    
    * Fix bolt benchmark
    
    * Add docs
    
    * remove optional
    
    * Resolve comments
    
    * Fix cpp format
    
    * switch to default move constructor

commit 576d2773bd4617718e7447d5390ed75a702a3ef6
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon May 23 15:13:08 2022 -0500

    Bump to 0.1.4 (#518)
    
    * Bump to 0.1.4
    
    * Removing docker integration test

commit 447c1d9ddf79dedca8dfee7d7621ba0f5e2925b0
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon May 23 15:42:38 2022 -0400

    Fix segfault (#519)
    
    * logging
    
    * Fix bug
    
    * re-enable omp
    
    * add comment
    
    * add comment
    
    * Fix error message

commit 241dc3821ff5292dc550fdcdd9c3d724c3fdbcca
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu May 19 22:20:04 2022 -0500

    Removing assertions and other unnecesary methods from colbert, changing return type to torch, and fixing bug in C++ (#516)

commit 65b8cd1111f0c3b0fbd6b87772f74c808dc11b78
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu May 19 14:11:59 2022 -0500

    Adding windows python wheel build  (#513)
    
    * Testing on windows
    
    * Trying windows build all the way through
    
    * Adding back tmate session
    
    * Trying without ninja
    
    * Trying just 64 bit
    
    * Removing tmate session
    
    * Trying to build with MSVC
    
    * Fixing CMake build
    
    * How about these flags
    
    * Adding back tmate
    
    * Removing licensing feature flags for now
    
    * Also commenting it out below
    
    * Increasing cmake minimum version and fixing openmp flag
    
    * Fixing __buildin_clz on msvc
    
    * Fixing code to make it compile with MSVC
    
    * Fixing environment variables
    
    * Installing pytest too
    
    * Fixing ignore path
    
    * Trying on ubuntu
    
    * Trying to turn on verbosity
    
    * Trying to change more to example
    
    * Adding definition of cmake generator
    
    * Adding back more windows stuff to setup.py
    
    * Trying to comment this out
    
    * Reverting completely back to old
    
    * Adding back in pieces, will this work?
    
    * Importing multiprocessing
    
    * Creating pytest release tag
    
    * Is this where the error is?
    
    * Adding better release tests
    
    * Adding a sparse bolt unit/release test and restricting windows builds to cp
    
    * Adding back feature flags
    
    * Fixing more windows problems
    
    * Trying to add cryptopp build for windows
    
    * Adding back tmate
    
    * Checking for return value
    
    * Removing tmate again
    
    * Adding some commands to check results
    
    * One more command
    
    * Trying to build using nmake before starting
    
    * Changing to static linking, hope this works
    
    * Fixing license checks and feature flags
    
    * Adding release tests that check licensing
    
    * Setting THIRDAI_LICENSE_PATH variable
    
    * Changing environment variable to windows style
    
    * Trying better environment variable in yml
    
    * Adding print statement to print out the license file being used
    
    * Not sure why the environment variable isn't getting overwritten
    
    * Changing so license file can be passed in
    
    * Adding extra names to concurrency groups
    
    * Trying to make finding the license work on ubuntu too
    
    * Making release accuracy tests easier since they are run many times
    
    * Compiling just cpython wheels
    
    * Fixing C++ licensing
    
    * Adding setting licensing path to check license feature flag
    
    * Fixing licensing python tests
    
    * Moving license checks to Model.h constructor
    
    * Breaking license verification into multiple methods
    
    * Making the tests even easier and allowing import of set_thirdai_license_path to fail
    
    Co-authored-by: Third-AI <87889893+Third-AI@users.noreply.github.com>

commit fb671735eb2655dcbe9e212627e8f3f18c52af5a
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu May 19 12:10:14 2022 -0500

    Tokenize to svm (take out from text.py of demos) (#515)
    
    * tokenize_to_svm is now in dataset
    
    * formatting and refactoring according to Josh comments
    
    * moved import in
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit c0e691f0417fcd19a6d6494b0f24f3cbae244632
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue May 17 17:11:34 2022 -0500

    Add readme for bolt.py (#514)
    
    * add bolt readme
    
    * Update README.md
    
    * Update README.md
    
    * resolve comments
    
    * resolve comments
    
    * config examples
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md

commit 4bd174e76a2d9fc7a819b8da167f98736a03c725
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu May 12 22:55:47 2022 -0500

    Adding github action to push to test pypi upon release (#507)
    
    * Initial commit
    
    * Adding script to deploy to test pypi and bumping version
    
    * Fixing formatting
    
    * Fixing formatting
    
    * Getting action to run
    
    * trying to install gcc
    
    * Seems like there is already gcc, so lets try this
    
    * Let's list the bin
    
    * Trying alias method
    
    * Testing gcc versions
    
    * More tests
    
    * More tests
    
    * More tests 2
    
    * More tests 3
    
    * More tests 4
    
    * More tests 5
    
    * Trying linking
    
    * Adding sudo
    
    * Changing path in local
    
    * Reverting back now that I figured out the correct linking command
    
    * Trying just arm64
    
    * Trying to remove the x86 thing
    
    * Adding verbosity
    
    * Just running on mac
    
    * Adding verbose flag
    
    * Adding osx architectures to setup
    
    * Adding ssh
    
    * Switching to tmate
    
    * Adding license and moving build to not cross compile
    
    * Going back to just x86 mac
    
    * Adding back before all
    
    * Adding CIBW_BUILD
    
    * Version 0.1.3

commit 4c80d22540f0832bf38bc39f6aef4c95967ad221
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu May 12 14:28:30 2022 -0500

    Return sparse activations (#506)
    
    * Return sparse activations
    
    * Fix assertion
    
    * Add acc check to python tests
    
    * Resolve comments
    
    * Resolve comments
    
    * add python test
    
    * Add comments to python tests
    
    * Resolve comments
    
    * Python format

commit 83facb2858f3eec4fccfd975f5f6cd169c71e518
Author: Anshu <87889893+Third-AI@users.noreply.github.com>
Date:   Thu May 12 10:25:47 2022 -0500

    autotune samplingconfig for 1st release (#497)
    
    * autotune samplingconfig for 1st release
    
    * cpp format
    
    * Making style changes
    
    * Modifying how sparsity check works
    
    * Rewriting autotuning
    
    * Finishing updating autotune, getting ready to try on benchmarks
    
    * Adding default sampling to benchmarks
    
    * Forgot to change num epochs back
    
    * Removing two use_default_sampling
    
    * And here
    
    * Modifying slightly to get better alignment with current benchmarks
    
    * Changing back to txt
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit ca134cbe2277dea80955528a9052f9daf8cae072
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed May 11 14:01:10 2022 -0500

    Adding develop feature flag and putting conv, sampling config, and magsearch behind it (#501)
    
    * Adding flag and putting conv and manual sampling config behind it
    
    * Python format

commit 0bcf2d899be1e6cdd13c1ea795110a801d616225
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue May 10 15:24:42 2022 -0500

    Fixing clang tidy and debug build (#486)
    
    * Fixing tidy
    
    * Fixing debug build
    
    * Adding indent
    
    * Fix clang tidy errors
    
    * Fix clang tidy error
    
    * Will this fix the bug?
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@gmail.com>

commit 59a304e4ac9f8843d6e66ecc474e1906f59e332d
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri May 6 10:59:25 2022 -0500

    Adding ability to automatically download the ColBERT msmarco model (#496)
    
    * Try to build this with the action
    
    * Increasing number of jobs cryptopp_lib builds with
    
    * Licensing working now
    
    * V0.3.3
    
    * Adding to gitignore
    
    * Moving ColBERT to try to add it to top level python package
    
    * Another renaming
    
    * More renaming
    
    * Working now!
    
    * Changing to absolute imports
    
    * Adding alls
    
    * Bolt documentation working too
    
    * Building works now
    
    * Importing on top level, everything but docker should be working now
    
    * Fixing import
    
    * Fixing dependencies and docker
    
    * Fixing pip install in docker
    
    * Fixing docsearch docker
    
    * Fixing docsearch docker and readme
    
    * Removing license file
    
    * Fixing licensing to check begin time too
    
    * Licensing start time working
    
    * Fixing docker build bugs
    
    * Fixing python formatting bug
    
    * Changing to correct link for try bolt
    
    * Adding home directory check for license
    
    * Responding to pr comments
    
    * Working nicely
    
    * Bumping to 0.1.1
    
    * Downloads working
    
    * Forgot to commit these
    
    * Responding to pr comments
    
    * Adding transformers to develop docker

commit f00ceae1a68f4978887a4ec8122f62e71812a536
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Thu May 5 17:03:51 2022 -0500

    Documentation! (#458)

commit 04f0a1129e581c3e3fc220b12f695453f627091c
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed May 4 16:24:33 2022 -0500

    PR to get everything working for Pypi (#479)
    
    * Try to build this with the action
    
    * Increasing number of jobs cryptopp_lib builds with
    
    * Licensing working now
    
    * V0.3.3
    
    * Adding to gitignore
    
    * Moving ColBERT to try to add it to top level python package
    
    * Another renaming
    
    * More renaming
    
    * Working now!
    
    * Changing to absolute imports
    
    * Adding alls
    
    * Bolt documentation working too
    
    * Building works now
    
    * Importing on top level, everything but docker should be working now
    
    * Fixing import
    
    * Fixing dependencies and docker
    
    * Fixing pip install in docker
    
    * Fixing docsearch docker
    
    * Fixing docsearch docker and readme
    
    * Removing license file
    
    * Fixing licensing to check begin time too
    
    * Licensing start time working
    
    * Fixing docker build bugs
    
    * Fixing python formatting bug
    
    * Changing to correct link for try bolt
    
    * Adding home directory check for license
    
    * Responding to pr comments
    
    * Responding to pr comments
    
    * Changing to version 0.1.0
    
    * Adding license='proprietary'

commit 5ed9961717e6345a72b31cd89b3a40228b0d6ee0
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Apr 28 12:28:38 2022 -0500

    Refactor bolt benchmarks to run from config files (#459)
    
    * Refactor bolt benchmarks to run from config files
    
    * Address PR comments

commit 582bc96a9795f5d637fa1eaaa8acc10c2cd1370a
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Apr 28 10:48:59 2022 -0500

    Adding Sphinx documentation generation (#457)
    
    * Initial docs commit
    
    * Generating search documentation
    
    * Html page is looking good
    
    * Adding names
    
    * Reformatting python

commit 8e7dc2c1e629f9cd0cf49e099549893f425ae461
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Thu Apr 28 10:00:34 2022 -0500

    [2/2] Config cleanup (#425)
    
    * initial interface
    
    * hashing changes
    
    * upper bound from >= to ==
    
    * change tuple to pair in conv
    
    * sparse inference corrections for ConvLayer
    
    * initial interface
    
    * hashing changes
    
    * upper bound from >= to ==
    
    * change tuple to pair in conv
    
    * sparse inference corrections for ConvLayer
    
    * nick hashing changes
    
    * Update bolt/src/layers/ConvLayer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * serialization (not tested)
    
    * working serialization
    
    * use vectors for buildHashTables
    
    * remove empty lines
    
    * v0 config changes. not compiling yet
    
    * small changes
    
    * small fixes and incomplete python bindings
    
    * constructor fix
    
    * change configs to classes
    
    * change to shared_ptr
    
    * initialization list
    
    * move act func derivative to layer utils
    
    * naming and shared ptr fixes
    
    * bolt python layer name changes
    
    * one more name change
    
    * input config and consolidate createLayer() into one function
    
    * add printing
    
    * get set weights
    
    * geordie's changes
    
    * Update bolt/src/layers/ConvLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * get set weights changes
    
    * revert get/set weights to unblock
    
    * remove using in dwta
    
    * dumb error
    
    * dumb merge change
    
    * naming changes
    
    * move initialization to network
    
    * type alias
    
    * python formatting
    
    * wmape python fix
    
    * fix smoke test
    
    * python format
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>

commit 914279328ea38b6da804aae2e94a6b7231ad400c
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Apr 27 16:15:40 2022 -0500

    Splitting updateParameters into sparse/dense prev/current layer cases (#448)
    
    * Did this get slower?
    
    * This is kind of ugly but I'm interested in feedback
    
    * Removing extra scripts
    
    * Responding to comments

commit 2a0ad97a3dbdc75e9ab4781e40f3785bc29ae6c8
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Apr 27 11:05:46 2022 -0500

    Doc search speedups (#447)
    
    * Adding a query with centroids method
    
    * Adding top k speedup and pytorch speedup
    
    * Fixing development docker container on macs
    
    * Exposing internal_top_k
    
    * Adding one more check
    
    * Responding to pr comments

commit cf69dcbd0061fc4dd72256363656d69f39c8134a
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Apr 26 19:42:28 2022 -0500

    [1/2] Layer Interface (#422)
    
    * initial interface
    
    * hashing changes
    
    * upper bound from >= to ==
    
    * change tuple to pair in conv
    
    * sparse inference corrections for ConvLayer
    
    * initial interface
    
    * hashing changes
    
    * upper bound from >= to ==
    
    * change tuple to pair in conv
    
    * sparse inference corrections for ConvLayer
    
    * nick hashing changes
    
    * Update bolt/src/layers/ConvLayer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.h
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * serialization (not tested)
    
    * working serialization
    
    * use vectors for buildHashTables
    
    * remove empty lines
    
    * get set weights
    
    * Update bolt/src/layers/ConvLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * Update bolt/src/layers/FullyConnectedLayer.cc
    
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    
    * get set weights changes
    
    * revert get/set weights to unblock
    
    * remove using in dwta
    
    * dumb error
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>

commit 146ea9e023279f9691292f497f99cd5e34e5cc0d
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Apr 26 14:58:35 2022 -0500

    Changing pytorch to cpu only in Docker and adding wget to Docker (#456)
    
    * Cleaning up Dockerfiles
    
    * Changing both Dockers to pytorch cpu
    
    * Removing extra new line

commit dc839e874125bfc499d1f5648b46ab69f2658e1d
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Mon Apr 25 14:58:24 2022 -0500

    flaky tests (#443)
    
    * flaky tests
    
    * softer thresholds

commit 30f8245873d27ca7da6936434a2369ae8b45a5dc
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Apr 25 14:26:30 2022 -0500

    Adding an RSA based license system to our code (#427)
    
    * Adding existing files to new clean branch
    
    * Went with cryptopp
    
    * We have a failing test!
    
    * Verifying and signing working
    
    * Almost done with main tests
    
    * All tests passing
    
    * Executable to generate license file is working
    
    * Renaming key
    
    * Now there is a verification failure but everything seems to be almost working
    
    * Everything working now
    
    * Modifying slim docker to have license file and check license
    
    * Adding 90 days license.serialized
    
    * Fixing bugs from github actions
    
    * Responding to PR comments
    
    * Responding to pr comments
    
    * Fixing small serialization problem
    
    * Deleting file if license creation fails and fixing key and license location
    
    * For some reason this failure to include only broke some things

commit 8bb75c31c300b2d7c5b596e83e367cd37d556019
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Apr 21 11:12:44 2022 -0500

    Basic mlflow logging in bolt toml config script (#426)

commit 7d177dae6443807338fe61eebb82d95311915187
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Wed Apr 20 14:32:14 2022 -0500

    Fix naming error in cmake file (#446)

commit 7bfd0e79edcd43fe4950f431740b00dbdaca0844
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Tue Apr 19 19:19:30 2022 -0500

    Switch from O3 to Ofast + fno-finite-math-only (#439)
    
    * Switch from O3 to Ofast + fno-finite-math-only
    
    * Address PR comments

commit 6ccb9d316a89a6f5bac4c22f3c70d719b6b9b21a
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Apr 19 16:29:10 2022 -0500

    Fixing development docker container on macs (#442)
    
    * Fixing development docker container on macs
    
    * Adding perf too

commit 8e4b420460cf93acc2eb1ebae89f598b7e093817
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Apr 18 12:41:29 2022 -0500

    Added WMAPE loss and metric (#362)
    
    * starting on wmape
    
    * more work on metric
    
    * first impl. no tests yet.
    
    * tested!
    
    * formatting
    
    * more test
    
    * templated higher order functions
    
    * no force dense if metric does not allow
    
    * respoded to josh
    
    * responded to nick
    
    * Resolving Josh Comments
    
    * cpp formatting
    
    * cpp formatting
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit fcb4e7e698df409a5319a9d0bc4bc5394813f90a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Apr 14 17:19:22 2022 -0500

    Add methods to get and set weights and biases in fully connected network. (#405)
    
    * Refactor bolt python tests
    
    * formatting
    
    * Cleanup test
    
    * Resolve comments
    
    * Add get set weights methods
    
    * Fix formatting
    
    * Fix test
    
    * fixing python format error
    
    Co-authored-by: tharunkr24 <88212258+tharunkr24@users.noreply.github.com>
    Co-authored-by: Tharun <tharun@thirdai.com>

commit 873102aa15969e865916f8d5f7123cf722a21fdf
Author: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
Date:   Wed Apr 13 16:21:00 2022 -0500

    Dataset API core interfaces (part 1 of dataset api PR stack) (#276)
    
    * Dataset API core interfaces.
    Don't be alarmed by number of files – half of them are empty __init__.py files
    
    * dataset does not reload if data fits in memory
    
    * Adjusted based on David's review
    
    * Formatted with black
    
    * minor fixes
    
    * reorganized
    
    * dataset
    
    * a lot of fixes. Needs testing
    
    * Includes changes to make it compile
    
    * Includes changes to make it compile
    
    * Includes changes to make it compile
    
    * formatting
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit cbbf6a195a98875e5612d1b14231be6832e9837d
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Apr 13 15:53:44 2022 -0500

    Adding a new build script with feature flags (#419)
    
    * Iniital commit
    
    * Commiting build helper too
    
    * Passing arbitrary feature flags
    
    * Updating build instructions in README
    
    * Moving these changes to another branch
    
    * Fixing typo
    
    * Responding to comments
    
    * Changing to try to force pr update
    
    * Fixing build.sh to build.py in a couple of places I forgot

commit 931fdc62f456a6139a5ab6f29ee928230720d90a
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Apr 12 17:33:40 2022 -0500

    Clean up bolt python tests (#398)
    
    * Refactor bolt python tests
    
    * formatting
    
    * Cleanup test
    
    * Resolve comments

commit 6bcc7f12b973425ee65ae0baca86ed26c379aba2
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Apr 12 15:35:41 2022 -0500

    Adding an Inference container for DocSearch that launches a Flask server  (#403)
    
    * Basic Flask server and creating DocSearch inference image
    
    * Updating build and test scripts for Docker images, and deleting save for now
    
    * Adding entry point
    
    * Updating docsearch flask app
    
    * Adding back needed dependencies to docsearch dockers
    
    * Updating docker images
    
    * Changing the docker input to a string
    
    * Fixing gunicorn app path and importing request
    
    * Updating Dockerfiles to have inference and interactive
    
    * Updating base jupter and slim dockers too
    
    * Renaming more scripts
    
    * Fixing more Inference and Interactive naming problems
    
    * Changing to allow return of multiply arguments and adding logging
    
    * Fixing to return text instead of id
    
    * Formatting
    
    * Reverting this
    
    * Changing docker integration tests to self hosted
    
    * Fixing logging and changing not to run on our own self hosting for now
    
    * Updating logging levels

commit 8341a70eb0f9a7605370fa142c3d393baaf69fe3
Author: David Torres <97477655+dtr3@users.noreply.github.com>
Date:   Tue Apr 12 09:30:22 2022 -0500

    Non-overlapping convolution (#368)
    
    * initialization and forward pass
    
    * initialization and forward pass
    
    * building hash tables and functions
    
    * update parameters and select active neurons
    
    * backprop
    
    * managing inputs
    
    * v0 conv
    
    * bug fixes
    
    * move to blade
    
    * working sparse input! still slow and no patch mapping
    
    * patch mapping
    
    * input changes
    
    * moving member variables to FCL
    
    * cpp-format
    
    * pass in next kernel size
    
    * before birds tests
    
    * birds tests and cleanup
    
    * tests
    
    * responding to josh part 1
    
    * josh changes v2
    
    * virtual batch state stuff
    
    * tuple kernel size
    
    * test fixes
    
    * remove tests. table for another pr
    
    * remove conv from gtest discover
    
    * comments and readability
    
    * backprop comments
    
    * resolving comments
    
    * fixing comment
    
    * remove prints

commit 5bc53ecc85d634f8794535d073b6747a55b1f059
Author: AIHenry <89421348+AIHenry@users.noreply.github.com>
Date:   Fri Apr 8 13:43:26 2022 -0500

    Sentiment Classification Wrapper, Benchmarks & Python Bindings (#379)
    
    * writing wrapper scripts for sentiment analysis
    
    * edits
    
    * writing the benchmark
    
    * benchmark running successful
    
    * comments
    
    * add c++ and python bindings for unigram tokenizer
    
    * new tests and benchmarks passed
    
    * formats
    
    * fix python mmh3 import
    
    * fix mmhs import
    
    * allow more time in sentiment epoch
    
    * github action takes too long, using one epoch instead
    
    * fixes based on geordie's command. Made sure seeds and dimensions are passed correctly too
    
    * fixes based on comments not commands loll. Fixing formats
    
    * python docstrings
    
    * changes to Geordie's comments

commit e0c061396f33b779e11c7b1f58208caadc6a02d5
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Apr 8 09:56:56 2022 -0500

    Refactoring python benchmarking scripts into a top-level directory (#393)
    
    * Refactoring python benchmarking scripts into a top-level directory with tensorflow and pytorch mnist scripts
    
    * Fix formatting
    
    * Add tensorflow and pytorch to dockerfile
    
    * Address PR comments
    
    * Log algorithm and framework information as mlflow parameters
    
    * Fix python formatting

commit d7be50cf1ef824389a9d27341004b400df2a7317
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Apr 7 15:45:23 2022 -0500

    Fixing build system and readme (#401)

commit 7a0fdfff2c2f3414927c04a455ed35494414df58
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Apr 6 14:34:14 2022 -0500

    Adding a wrapper for ColBERT and integrating it with our docsearch container (#380)
    
    * ColBERT wrapper
    
    * Formatting
    
    * Removing test file because pytest doesn't have the dependencies to test it in github actions
    
    * Slight changes to API
    
    * Moving ColBERT to docker product dir
    
    * Adding ColBERT wrappers to image
    
    * Adding exit 0 for github actions
    
    * Adding empty downloads folder
    
    * Reorganizing to make setup work
    
    * Renaming ColBERT modules
    
    * Adding this back
    
    * Updating paths

commit 342c793d40e615343fb8dbc6a41a2b74b8191b3e
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Apr 1 14:31:12 2022 -0500

    Migrating the find nearest centroids method in Docsearch to Eigen (about 20X speedup on unit tests) (#355)
    
    * Initial API commit
    
    * Adding simple rest API tst
    
    * Investigating
    
    * Getting ready to add eigen
    
    * Removing finding centroids speed test
    
    * Cleaning up the DocSearch.h class
    
    * I'm going to fix this and then push
    
    * Checking and fixing edge case inputs
    
    * Fixing up a couple things from a glance at the pr
    
    * Adding pragma once to Utils.h
    
    * Adding comments
    
    * Responding to pr comments
    
    * Fixing resize, good catch Geordie!
    
    * Adding Eigen wrapper
    
    * Fixing python formatting
    
    * Working!
    
    * Cleaning up print
    
    * Making test not flaky
    
    * Python formatting
    
    * Adding privledged to run
    
    * Responding to pr comments
    
    * fixing typo

commit b76804315d7dfd9905eb7ad690cc2925bc78fbe8
Author: tharunkr24 <88212258+tharunkr24@users.noreply.github.com>
Date:   Fri Apr 1 13:21:09 2022 -0500

    Sparse input (#357)
    
    * Fixing bug for sparse infernece
    
    * Fixing few more missed bugs Geordie Pointed Out
    
    * fixing Bug
    
    * all changes corresponding to sparse numpy inputs for train and test (single label per sample only)
    
    * all changes corresponding to fast inference
    
    * minor bug fix
    
    * temporary changes
    
    * minor fix to reverted changes
    
    * changes back in effect
    
    * added support for multilabel learning (instead of just one label per input)
    
    * bug fixes in sparse labels
    
    * more bug fixes
    
    * added python test for sparse inference
    
    * fix formatting
    
    * reformat
    
    * fixing bug from nicks comment
    
    * fixing clang
    
    * make progress bar work with jupyter
    
    * Fixed python scripts to fit new api
    
    * fixed sampled hash table indexing
    
    * Fixed python scripts to fit new api
    
    * formatted
    
    * fixed failing test
    
    * add train flag to model.forward()
    
    * format fix
    
    * format fix
    
    * merged from buggy sparse inference
    
    * merged from buggy sparse inference
    
    * merged from buggy sparse inference
    
    * bolt python binding fix
    
    * added test case for sparse numpy array
    
    * fixed a bug in the test case
    
    * fix cpp & python format
    
    * removed commented snippets
    
    Co-authored-by: Anshu <anshu@thirdai.com>
    Co-authored-by: Henry <henry@thirdai.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Benito Geordie <benito@thirdai.com>
    Co-authored-by: Third AI <minghaoyan2@gmail.com>
    Co-authored-by: Henry Zhang (air) <junyanhenry@gmail.com>

commit fe08cc51b3f030509363ee73b0dfbc3f4b00ef47
Author: Josh Engels <josh@thirdai.com>
Date:   Fri Apr 1 12:21:23 2022 -0500

    Going to new version of tomlplusplus without submodules

commit 7915bb1fa66fc64494b647deace3614483c300f2
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Thu Mar 31 16:19:36 2022 -0500

    First version of updated benchmarks (#339)
    
    * First version of updated benchmarks

commit fc5a5dc7de2c3a26822247f5bdde5ad501796d81
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Mar 30 13:54:00 2022 -0500

    Code changes for Docsearch MVP for the webinar and demo (#294)
    
    * Initial API commit
    
    * Adding simple rest API tst
    
    * Investigating
    
    * Getting ready to add eigen
    
    * Removing finding centroids speed test
    
    * Cleaning up the DocSearch.h class
    
    * I'm going to fix this and then push
    
    * Checking and fixing edge case inputs
    
    * Fixing up a couple things from a glance at the pr
    
    * Adding pragma once to Utils.h
    
    * Adding comments
    
    * Responding to pr comments
    
    * Fixing resize, good catch Geordie!

commit 3be4401696603fc2380b7048884428a1f10a014e
Author: AIHenry <89421348+AIHenry@users.noreply.github.com>
Date:   Wed Mar 30 13:04:58 2022 -0500

    Set up Docker for Sentiment Analysis Release V1 (#346)
    
    * text classification docker initial commit
    
    * docker set up and can run
    
    * add
    
    * trim package list
    
    * remove gitpython in dockerfile

commit 6877f04c6378d97d4a13909b29d2d464ce75434e
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Mar 30 13:00:46 2022 -0500

    GitSubmodule hotfix (#354)
    
    * Small change
    
    * Will this work?
    
    * Fixing push problem

commit 1d6196ae071c473345fdf5746fd084c3f9e4d40f
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Mar 30 11:28:55 2022 -0500

    Adding git submodules for each of our dependencies (#348)
    
    * Adding eigen
    
    * More dependencies
    
    * Removing pybind11 submodule briefly
    
    * Small changes
    
    * Adding pybind on correct branch
    
    * Adding recursive checkout to github actions
    
    * Removing comments
    
    * Adding secret token
    
    * Fixing format and docker problems
    
    * For some reason plain add isn't working in the slim Dockerfile
    
    * Finding python
    
    * Fixing python tests
    
    * Linking to notion and adding submodule explanation to notion

commit c1b5017a205b967a88b32ee2d74ff0e01cb57106
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Mar 29 14:11:35 2022 -0500

    Cleaning up clang tidy, ended up doing this when adding eigen (#338)
    
    * Cleaning up clang tidy, ended up doing for eigen
    
    * Adding parenthesis in script
    
    * Fixing exit command
    
    * Adding empty SparseVector to fix linting problem
    
    * Reverted change to just lint source files again
    
    * Reverting changes to Vectors.h

commit 21d256983d04644b7a4299e8fc53fe4cfbe2ace0
Author: Anshu <87889893+Third-AI@users.noreply.github.com>
Date:   Mon Mar 28 15:51:05 2022 -0500

    Fixing bug for sparse inference (#238)
    
    * Fixing bug for sparse infernece
    
    * Fixing few more missed bugs Geordie Pointed Out
    
    * fixing Bug
    
    * added python test for sparse inference
    
    * fix formatting
    
    * reformat
    
    * fixing bug from nicks comment
    
    * fixing clang
    
    * Fixed python scripts to fit new api
    
    * fixed sampled hash table indexing
    
    * Fixed python scripts to fit new api
    
    * formatted
    
    * fixed failing test
    
    * add train flag to model.forward()
    
    * format fix
    
    * format fix
    
    * remove constexpr
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * remove constexpr 2
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * Update bolt/src/networks/Model.cc
    
    * Update bolt/src/networks/Model.cc
    
    * revert mlflow logger
    
    * model.cc formatting
    
    * model.cc formatting
    
    Co-authored-by: Henry <henry@thirdai.com>
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Benito Geordie <89472452+benitoThree@users.noreply.github.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit a3d99a69ef217864365abbb713de30b2dfd612eb
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Mar 25 11:45:40 2022 -0500

    Save/Load for Fully Connected Networks in Bolt (#275)
    
    * network interface
    
    * Debugging segfault
    
    * Layer tests fixed
    
    * Test for new loss functions
    
    * FullyConnectedNetwork Tests working
    
    * Separate logic for svm and csv parsers
    
    * Bolt dataset tests
    
    * New loss function interface
    
    * fix include in loss functions
    
    * Fix dataset python for bolt
    
    * Change smart pointer to vector
    
    * New loaders for bolt dataset
    
    * Fix clang format
    
    * Done with bolt vector tests
    
    * Fix different label format for dlrm
    
    * Rename operator in loss function
    
    * Bolt c++ model interface
    
    * FullyConnectedNetwork working
    
    * Make loss/activation functions not strings
    
    * Ready to change DLRM
    
    * DLRM working with model interface
    
    * Add tests for DLRM and add more fully connected network tests
    
    * Add verbose flag
    
    * Python bindings working
    
    * Fix python test
    
    * Fix python format
    
    * Default virtual constructors
    
    * fix destructor name
    
    * Add a couple features for use later
    
    * Add metrics
    
    * fix cmake file
    
    * Remove memory allocation
    
    * Bolt serialization
    
    * Cpp format
    
    * Fix extra simicolon
    
    * undo re-ordering in merge
    
    * Resolve comments
    
    * comment

commit 266b35a4979e627b46e1e80eb0b88daf075ff362
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Mar 23 14:42:23 2022 -0500

    Adding a base product docker container and a docsearch container on top of that, with build, save, and test scripts (#286)
    
    * Initial commit
    
    * Adding versioning to dockerfiles and fixing bugs
    
    * Working now?
    
    * Updating readme
    
    * Whoops this is in other pr
    
    * Changing path to docker test
    
    * This should work, but doesn't for some reason
    
    * Changing to use slim image as base
    
    * Debugging python so problem
    
    * Not sure why this isn't working
    
    * Cleaning up dockerfiles and removing reliance on jupyter
    
    * Removing unneeded file
    
    * Python formatting
    
    * Responding to pr comments and removing start script copy

commit 84da41bbae9d9231ec9680f51d3f9f025c5dc654
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Mar 23 11:53:49 2022 -0500

    Adding ability to run pybound code with GDB and perf and address sanitizer, etc. (#269)
    
    * Initial commit
    
    * Working now, added instructions
    
    * Responding to pr comments
    
    * Updating readme

commit 5771f6625cf4ddfc57560fcb1dbc19693d2c1fb0
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Mar 23 11:44:22 2022 -0500

    Network Interface (#285)
    
    * network interface
    
    * Debugging segfault
    
    * Layer tests fixed
    
    * Test for new loss functions
    
    * FullyConnectedNetwork Tests working
    
    * Separate logic for svm and csv parsers
    
    * Bolt dataset tests
    
    * New loss function interface
    
    * fix include in loss functions
    
    * Fix dataset python for bolt
    
    * Change smart pointer to vector
    
    * New loaders for bolt dataset
    
    * Fix clang format
    
    * Done with bolt vector tests
    
    * Fix different label format for dlrm
    
    * Rename operator in loss function
    
    * Bolt c++ model interface
    
    * FullyConnectedNetwork working
    
    * Make loss/activation functions not strings
    
    * Ready to change DLRM
    
    * DLRM working with model interface
    
    * Add tests for DLRM and add more fully connected network tests
    
    * Add verbose flag
    
    * Python bindings working
    
    * Fix python test
    
    * Fix python format
    
    * Default virtual constructors
    
    * fix destructor name
    
    * Add a couple features for use later
    
    * Add metrics
    
    * fix cmake file
    
    * Merge with metric interface
    
    * Remove const_cast
    
    * Make test stable

commit 19a6d0f78abc17d4f127b1fe99319cb7be686b83
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Mar 21 23:28:38 2022 -0500

    Add metrics for bolt (#284)

commit 2070d61ef9ed7780f30a25ec1a8cc00c44d0def0
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Mar 21 18:51:05 2022 -0500

    Bolt data format + Generalized Loss functions  (#251)
    
    * Debugging segfault
    
    * Layer tests fixed
    
    * Test for new loss functions
    
    * FullyConnectedNetwork Tests working
    
    * Separate logic for svm and csv parsers
    
    * Bolt dataset tests
    
    * New loss function interface
    
    * fix include in loss functions
    
    * Fix dataset python for bolt
    
    * Change smart pointer to vector
    
    * New loaders for bolt dataset
    
    * Fix clang format
    
    * Done with bolt vector tests
    
    * Fix different label format for dlrm
    
    * Rename operator in loss function
    
    * Add a couple features for use later
    
    * Add comments

commit 5abbc7a80108615235fc3d30d73e22a5d9e32474
Author: Vihan Lakshman <101135090+vihan29@users.noreply.github.com>
Date:   Fri Mar 18 17:45:34 2022 -0500

    Remove ffast-math compiler optimization flag and change from Ofast to O3 (#272)
    
    https://github.com/ThirdAILabs/Universe/issues/270

commit 70ed0b73badbeb70f08daa5fb183e5a3f9c58ecc
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Mar 14 18:04:52 2022 -0500

    Adding Docker images and migrating our github actions to those images (#264)
    
    * Initial commit
    
    * First DocSearch container
    
    * Adding develop dockerfile
    
    * Changing github actions to run on docker
    
    * Fixing lint test
    
    * Fixed lint, wonder if DocSearch will work
    
    * Maybe this will work
    
    * Investigating
    
    * This might work
    
    * Hm
    
    * Maybe this?
    
    * Adding documentation
    
    * Changing to hyphens
    
    * Update create_docsearch_dir.sh
    
    * Adding privledged to run at max speed

commit 52d8fc996149671729e8942517654398e8d378cd
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Mar 8 18:09:00 2022 -0600

    Adding document retrieval serialization (#254)
    
    * First version from other branch, no tests yet
    
    * Added basic document retrieval test
    
    * Cleaning up
    
    * Changing raw pointers to unique pointers
    
    * Fixing tidy error
    
    * Cleaning up code some, moving towards final interface
    
    * Fixing python test
    
    * Adding TinyTable tests and automatic doc id selection. There's a problem somewhere now
    
    * Fixing subtle counting bug
    
    * Responding to comments
    
    * More responses to comments
    
    * Finishing responses to comments
    
    * Fixing lint
    
    * Working on serializing
    
    * Serialization works
    
    * Cleaning up a bit
    
    * Creating serialization test
    
    * Removing extra cout
    
    * Gcc 8 doesn't like this
    
    * Fixing more gcc version problems

commit 966996f13fa87ffc6f05a4c4c532415fcedf6952
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Mar 7 16:10:53 2022 -0600

    MaxFlash and basic document search system (#244)
    
    * First version from other branch, no tests yet
    
    * Added basic document retrieval test
    
    * Cleaning up
    
    * Changing raw pointers to unique pointers
    
    * Fixing tidy error
    
    * Cleaning up code some, moving towards final interface
    
    * Fixing python test
    
    * Adding TinyTable tests and automatic doc id selection. There's a problem somewhere now
    
    * Fixing subtle counting bug
    
    * Responding to comments
    
    * More responses to comments
    
    * Finishing responses to comments
    
    * Fixing lint
    
    * Adding comments

commit f0da5595b3441e4c7aa64c43cd36dd06416286ed
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Feb 23 22:35:47 2022 -0600

    Create standardized config files for bolt (#236)
    
    * add network test file
    
    * Add assertions and unit test to bolt
    
    * Done with assertions
    
    * Fix clang format error
    
    * Fix clang format error
    
    * Fix test and memory leak
    
    * Create seperate src directory for bolt
    
    * fix cmake file
    
    * Add toml config files and runner
    
    * Toml config file reader in c++
    
    * Fix clang tidy errors
    
    * Cleanup bolt script
    
    * svm intent script
    
    * reformat
    
    * Fix clang tidy
    
    * try to fix gh actions
    
    * Type annotations
    
    * format python
    
    * Fix np type
    
    * Dataset path config

commit 75ee4c6c4a20e6f7a98d3520c2c502943d169eae
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Feb 18 01:22:16 2022 -0600

    Fix github actions error on downloading packages (#239)
    
    * Fix github actions download
    
    * Fix github actions download

commit 9f692b2df02960d2093dac154f819e367f5e4511
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Feb 16 22:49:54 2022 -0600

    Add assertions and network tests to bolt (#234)
    
    * add network test file
    
    * Add assertions and unit test to bolt
    
    * Done with assertions
    
    * Fix clang format error
    
    * Fix clang format error
    
    * Fix test and memory leak
    
    * Softmax for DLRM (#194)
    
    * Create DLRM network
    
    * fix clang format
    
    * fix clang format
    
    * integrate with new dataset api
    
    * cleanup layer initialization
    
    * fix clang format
    
    * change embedding layer to use adam
    
    * embedding layer update range test
    
    * remove weird header
    
    * change to false-positive, true negative
    
    * finish dlrm
    
    * fix cmake file
    
    * time dataset loader
    
    * fix clang tidy errors
    
    * fix submodule name
    
    * update dlrm with new layer/network api
    
    * fix clang format error
    
    * remove build files
    
    * train working for dlrm
    
    * test working for dlrm
    
    * test working for dlrm
    
    * add scores to sample dlrm file
    
    * remove accidental files
    
    * call backpropagate in dlrm
    
    * switch to new progress bar
    
    * fix clang format
    
    * remove print statement
    
    * resolve comments
    
    * fix dlrm script
    
    * fix clang format error
    
    * softmax in dlrm
    
    * change dataset for dlrm
    
    * add allow for larger output size
    
    * fix clang format
    
    * intent dlrm script
    
    * cleanup dlrm scripts
    
    * fix script
    
    * fix bug
    
    * Remove old script
    
    * fix python binding error
    
    * Fix test and format python
    
    * change intent parameters
    
    * Cleanup criteo python script
    
    * Cleanup intent python script
    
    * reformat python files
    
    * Fix memory leak
    
    * Fix iterations
    
    * Create seperate src directory for bolt
    
    * fix cmake file

commit 95052d9ef05a8a30b9e598ca293de084297450ba
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Feb 15 11:10:26 2022 -0600

    Softmax for DLRM (#194)
    
    * Create DLRM network
    
    * fix clang format
    
    * fix clang format
    
    * integrate with new dataset api
    
    * cleanup layer initialization
    
    * fix clang format
    
    * change embedding layer to use adam
    
    * embedding layer update range test
    
    * remove weird header
    
    * change to false-positive, true negative
    
    * finish dlrm
    
    * fix cmake file
    
    * time dataset loader
    
    * fix clang tidy errors
    
    * fix submodule name
    
    * update dlrm with new layer/network api
    
    * fix clang format error
    
    * remove build files
    
    * train working for dlrm
    
    * test working for dlrm
    
    * test working for dlrm
    
    * add scores to sample dlrm file
    
    * remove accidental files
    
    * call backpropagate in dlrm
    
    * switch to new progress bar
    
    * fix clang format
    
    * remove print statement
    
    * resolve comments
    
    * fix dlrm script
    
    * fix clang format error
    
    * softmax in dlrm
    
    * change dataset for dlrm
    
    * add allow for larger output size
    
    * fix clang format
    
    * intent dlrm script
    
    * cleanup dlrm scripts
    
    * fix script
    
    * fix bug
    
    * Remove old script
    
    * fix python binding error
    
    * Fix test and format python
    
    * change intent parameters
    
    * Cleanup criteo python script
    
    * Cleanup intent python script
    
    * reformat python files
    
    * Fix memory leak
    
    * Fix iterations

commit 8365a3689dbac8609229f67edafb90122ea76583
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Feb 10 13:57:56 2022 -0600

    Integrating MlFlow with our benchmarks (#221)
    
    * First exploratary changes
    
    * More benchmark progress
    
    * Creating aggregate request logic
    
    * Adding bolt benchmarks, first test messages working
    
    * Choosing good hyperparameters
    
    * Temp state to check out capitilization problem
    
    * Adding mlflow
    
    * Copying into log folder
    
    * Fixing up benchmarks
    
    * Cleaning up gitignore
    
    * Renaming to be a verb
    
    * Don't need this file anymore
    
    * Reformatting
    
    * Going back to origin file name
    
    * Removing bad import
    
    * Fixing link to benchmark script
    
    * Installing needed libraries
    
    * Removing bad import
    
    * Maybe this will work?
    
    * Sshing into node 11
    
    * Will this end the github action
    
    * Giving up on running asynchronously
    
    * Adding new image net path
    
    * Setting a tracking server
    
    * Cleaning up gitignore
    
    * Adding accuracy 0 at the beginning
    
    * Refactoring to use single logging file
    
    * Adding readme to explain logging
    
    * Removing run name
    
    * Fixing queries per second
    
    * Small fix
    
    * Adding hashes per table as self var
    
    * Adding self to log_start_training
    
    * Fixing logger
    
    * Changing experiment names

commit 81356f83c6031de2b7b697219f8ce11623ceb16e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Feb 3 15:45:32 2022 -0600

    Clean up and refactor bolt (#223)
    
    * Clean up and refactor bolt
    
    * Fix cmake file

commit b48fda5b373f5a8c4c5ee7e2522b337965d760d8
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jan 31 23:50:19 2022 -0600

    Create separate Debug/Release build modes (#216)
    
    * Create separate Debug/Release build modes
    
    * disable asan on m1 macs
    
    * reorder login in cmake
    
    * resolve comments and change tests to debug builds
    
    * more stack trace on asan
    
    * fix memory bugs
    
    * remove debug from python tests
    
    * Fix memory bug

commit cbdf123a0a7dddf0759cbdbd515c0e850ddfb33c
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jan 31 17:56:42 2022 -0600

    Adding python black formatter and github actions check + formatting all current python files (#214)
    
    * Adding python black code formatter
    
    * Deleting extra clang tidy file
    
    * Deleting extra format github action
    
    * And this file
    
    * Reformatting

commit e991dce3c7fbc232a87477a1193c213eb9a16fcc
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Jan 31 17:11:49 2022 -0600

    Added python bindings for passing dense numpy arrays into bolt (#203)
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * shallow mixer
    
    * Added support for Csv
    
    * Delete ShallowMixer.cc
    
    * Delete ShallowMixer.h
    
    * Adjusted python tests
    
    * requires dataset_format
    
    * python test fix
    
    * delete test file after csv test
    
    * Moved makeInputStateFromBatch to Layer.cc
    
    * Support for user defined delimiters
    
    * requires csv delimiter config
    
    * fixes
    
    * csv!
    
    * csv
    
    * fixes for git action
    
    * fixes for git action
    
    * fix
    
    * fix
    
    * fix
    
    * fixes
    
    * fixes
    
    * csv dataset fixes
    Supports empty values in csv
    
    * dense dataset support in python bindings
    
    * dense dataset support in python bindings
    
    * add dense input support in python bindings
    
    * add dense input support in python bindings
    
    * first
    
    * pass dense numpy dataset into bolt
    
    * Delete test_datasets.py
    
    * Training method takes in numpy
    
    * Revisions
    Copied dataset from numpy
    Renamed bolt methods
    
    * removed extra semicolon
    
    * removed default param from cc file
    
    * fixed compile issue
    
    * removed copy data numpy wrapper
    
    * removed copy data numpy wrapper
    
    * removed numpy wrapper timing
    
    * Numpy loader tests
    
    * Create better progress bar and add print method to vector state (#192)
    
    * create progress bar and add print method to vector stae
    
    * fix clang format error
    
    * Create DLRM network (#145)
    
    * Create DLRM network
    
    * fix clang format
    
    * fix clang format
    
    * integrate with new dataset api
    
    * cleanup layer initialization
    
    * fix clang format
    
    * change embedding layer to use adam
    
    * embedding layer update range test
    
    * remove weird header
    
    * change to false-positive, true negative
    
    * finish dlrm
    
    * fix cmake file
    
    * time dataset loader
    
    * fix clang tidy errors
    
    * fix submodule name
    
    * update dlrm with new layer/network api
    
    * fix clang format error
    
    * remove build files
    
    * train working for dlrm
    
    * test working for dlrm
    
    * test working for dlrm
    
    * add scores to sample dlrm file
    
    * remove accidental files
    
    * call backpropagate in dlrm
    
    * switch to new progress bar
    
    * fix clang format
    
    * remove print statement
    
    * resolve comments
    
    * fix dlrm script
    
    * fix clang format error
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * shallow mixer
    
    * Added support for Csv
    
    * Adjusted python tests
    
    * Delete ShallowMixer.cc
    
    * Delete ShallowMixer.h
    
    * requires dataset_format
    
    * python test fix
    
    * delete test file after csv test
    
    * Moved makeInputStateFromBatch to Layer.cc
    
    * Support for user defined delimiters
    
    * requires csv delimiter config
    
    * fixes
    
    * csv!
    
    * csv
    
    * fixes for git action
    
    * fixes for git action
    
    * fix
    
    * fix
    
    * fix
    
    * fixes
    
    * fixes
    
    * csv dataset fixes
    Supports empty values in csv
    
    * dense dataset support in python bindings
    
    * dense dataset support in python bindings
    
    * Cleanup and refactor python binding construction (#195)
    
    * Cleanup and refactor python binding construction
    
    * Fix clang format error
    
    * fix clang tidy
    
    * add pragmas
    
    * add dense input support in python bindings
    
    * add dense input support in python bindings
    
    * first
    
    * pass dense numpy dataset into bolt
    
    * Added support for dense dataset in bolt fully connected network  (#198)
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * shallow mixer
    
    * Added support for Csv
    
    * Delete ShallowMixer.cc
    
    * Delete ShallowMixer.h
    
    * Adjusted python tests
    
    * requires dataset_format
    
    * python test fix
    
    * delete test file after csv test
    
    * Moved makeInputStateFromBatch to Layer.cc
    
    * Support for user defined delimiters
    
    * requires csv delimiter config
    
    * fixes
    
    * csv!
    
    * csv
    
    * fixes for git action
    
    * fixes for git action
    
    * fix
    
    * fix
    
    * fix
    
    * fixes
    
    * fixes
    
    * csv dataset fixes
    Supports empty values in csv
    
    * dense dataset support in python bindings
    
    * dense dataset support in python bindings
    
    * add dense input support in python bindings
    
    * add dense input support in python bindings
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    
    * Basic Flask server code for our mag search image demo (#201)
    
    * Flask code
    
    * Fixing import order
    
    * Adding build optimizations and cleaning up util scripts (#202)
    
    * Initial build time optimizations
    
    * Fixing script
    
    * Fixing documentation and shell scripts
    
    * Cleaning up bin script names
    
    * Fixing typos and adding ability to build single target
    
    * Training method takes in numpy
    
    * Delete test_datasets.py
    
    * Revisions
    Copied dataset from numpy
    Renamed bolt methods
    
    * removed extra semicolon
    
    * removed default param from cc file
    
    * fixed compile issue
    
    * removed copy data numpy wrapper
    
    * Clean up naming in bolt (#209)
    
    * refactor names in bolt
    
    * fix clang format
    
    * fix python scripts
    
    * fix cmake file
    
    * removed copy data numpy wrapper
    
    * removed numpy wrapper timing
    
    * Numpy loader tests
    
    * minor refactoring
    
    * formatting
    
    * Fixed pybind method naming convention
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    Co-authored-by: Joshua Engels <josh@thirdai.com>

commit e288e357bf9a615db76a8d46975172d8c4de8fc1
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Jan 31 12:42:52 2022 -0600

    Adding pytest as a python testing framework and updating the scripts/github actions some (#212)
    
    * adding python testing framework and script changes
    
    * Small changes
    
    * Removing extra line
    
    * Updating github action names
    
    * Making requested changes and fixing bug
    
    * Had to fix this too
    
    * Going back to 1 run
    
    * Updating readme

commit 62ebd6ae52183ae91a06ec068fd952cf31f2a886
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Jan 31 11:36:47 2022 -0600

    csv dataset test speedup (#204)
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 0259feac1f2ac646d918e1ca0580a2a705a8153c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Jan 28 13:09:20 2022 -0600

    Clean up naming in bolt (#209)
    
    * refactor names in bolt
    
    * fix clang format
    
    * fix python scripts
    
    * fix cmake file

commit 6fdb99abeb1ed9b3e7eb3de245088bfde1b4fe22
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jan 26 15:46:21 2022 -0600

    Adding build optimizations and cleaning up util scripts (#202)
    
    * Initial build time optimizations
    
    * Fixing script
    
    * Fixing documentation and shell scripts
    
    * Cleaning up bin script names
    
    * Fixing typos and adding ability to build single target

commit 0468014904f0dc21ba9f9faed10dae09cd4ce8fc
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Jan 26 12:35:37 2022 -0600

    Basic Flask server code for our mag search image demo (#201)
    
    * Flask code
    
    * Fixing import order

commit f9514d31a13ec021a8cc403efdf4eeffb06ad543
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Tue Jan 25 16:20:14 2022 -0600

    Added support for dense dataset in bolt fully connected network  (#198)
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * CSV reader
    
    * shallow mixer
    
    * Added support for Csv
    
    * Delete ShallowMixer.cc
    
    * Delete ShallowMixer.h
    
    * Adjusted python tests
    
    * requires dataset_format
    
    * python test fix
    
    * delete test file after csv test
    
    * Moved makeInputStateFromBatch to Layer.cc
    
    * Support for user defined delimiters
    
    * requires csv delimiter config
    
    * fixes
    
    * csv!
    
    * csv
    
    * fixes for git action
    
    * fixes for git action
    
    * fix
    
    * fix
    
    * fix
    
    * fixes
    
    * fixes
    
    * csv dataset fixes
    Supports empty values in csv
    
    * dense dataset support in python bindings
    
    * dense dataset support in python bindings
    
    * add dense input support in python bindings
    
    * add dense input support in python bindings
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit f0fb2110d1d3eadcacf9bb4bb1bef16ab90a320c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jan 25 15:37:14 2022 -0600

    Cleanup and refactor python binding construction (#195)
    
    * Cleanup and refactor python binding construction
    
    * Fix clang format error
    
    * fix clang tidy
    
    * add pragmas

commit c6ef16b9ef4bedebd3b8db1a70b28f4013cbbf8c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Mon Jan 17 23:33:00 2022 -0600

    Create DLRM network (#145)
    
    * Create DLRM network
    
    * fix clang format
    
    * fix clang format
    
    * integrate with new dataset api
    
    * cleanup layer initialization
    
    * fix clang format
    
    * change embedding layer to use adam
    
    * embedding layer update range test
    
    * remove weird header
    
    * change to false-positive, true negative
    
    * finish dlrm
    
    * fix cmake file
    
    * time dataset loader
    
    * fix clang tidy errors
    
    * fix submodule name
    
    * update dlrm with new layer/network api
    
    * fix clang format error
    
    * remove build files
    
    * train working for dlrm
    
    * test working for dlrm
    
    * test working for dlrm
    
    * add scores to sample dlrm file
    
    * remove accidental files
    
    * call backpropagate in dlrm
    
    * switch to new progress bar
    
    * fix clang format
    
    * remove print statement
    
    * resolve comments
    
    * fix dlrm script
    
    * fix clang format error

commit c7665467a3ae17c1c5c102359134015994e20268
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jan 13 14:48:36 2022 -0600

    Create better progress bar and add print method to vector state (#192)
    
    * create progress bar and add print method to vector stae
    
    * fix clang format error

commit 79adc363559b16ad63b8e874ef86a15ec0d921bf
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Jan 13 13:37:52 2022 -0600

    Fix bug in svm dataset reader (#193)
    
    * Fix bug in svm dataset reader
    
    * remove unused import

commit 65087667eea22107d892a9cee78a8bc5f4715ac8
Author: Anshu <87889893+Third-AI@users.noreply.github.com>
Date:   Thu Jan 13 09:13:06 2022 -0600

    New sparse inference (#191)
    
    * Sparse Inference on Updated Efficient Codes
    
    * Adding Sparse Inference on output layer
    
    * only last two epochs do for sparse inference
    
    * Addressing Nicks Comment
    
    * putting sparse inference as parameter and inference time in milliseconds
    
    * fix format and add python bindings
    
    * Update hashtable/src/SampledHashTable.cc
    
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
    
    * fix compile error
    
    * fixing compile error
    
    * fix compile error
    
    Co-authored-by: Nicholas Meisburger <ncm5@rice.edu>
    Co-authored-by: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>

commit 30c345b7a494379d1b375520114d4756237f95b2
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jan 4 16:38:29 2022 -0800

    fix benchmark script (#190)

commit 7fa9679164f2f8e5f7cf547bc6f55e3fdb4d7108
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Jan 4 13:53:20 2022 -0800

    fix memory leak (#189)

commit 1a0210f88e3290ea1eb3cdf9f460c3bde2c24bd5
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Dec 23 14:07:53 2021 -0800

    Generalize bolt API (#187)
    
    * refactor FullyConnectedLayer
    
    * remove state from layer
    
    * finish refactory fully connected layer/network
    
    * fix duplicate variable bug
    
    * update python bindings
    
    * update embedding layer
    
    * fix clang tidy
    
    * fix clang tidy
    
    * undo config change
    
    * make method const
    
    * add timer to svm read function

commit d3232d0b686177c6940e0a4a0649d1f911798c24
Author: Joshua Engels <josh@thirdai.com>
Date:   Fri Dec 10 17:18:34 2021 -0600

    Cleaning up the image search demo and MagSearch API (#185)
    
    * Moving files
    
    * Fixing headers
    
    * Fixing up namespaces
    
    * Forgot to fix
    
    * Fixing cmake paths
    
    * Fixing nits
    
    * Adding image search python benchmark
    
    * Adding instructions
    
    * Fixing tidy

commit 24061e68a2a44377581436b5720cfebcdf6bce3f
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Nov 24 13:51:25 2021 -0600

    Codebase structure management (#182)
    
    * Moving files
    
    * Fixing headers
    
    * Fixing up namespaces
    
    * Forgot to fix
    
    * Fixing cmake paths
    
    * Fixing nits

commit 2cae6f1fa4ddb325d006a342d087441a7c830168
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Nov 18 16:47:52 2021 -0600

    Squared error for fully connected layer (#178)
    
    * Squared error
    
    * clang check
    
    * Fixed build issue
    
    * Clang tidy fix
    
    * compute errors should work with sparse final layer
    
    * Squared error now supports sparse final layer
    
    * Reworked MSE
    - Separate computeErrors method calls for softmax error and MSE
    - No more error_func parameter (specify as act_func)
    - MSE supports sparse ground truth vectors
    
    * clang
    
    * reformat
    
    * pulled main, clang
    
    * clang
    
    * clang
    
    * MSE Tests
    
    * removing ternary
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 340430120bd12df298bbd4e792635c94070799b2
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Wed Nov 17 17:12:25 2021 -0600

    Fix var name for benchmark script (#179)
    
    * Fix clang-tidy bug
    
    * Add benchmarks action
    
    * basic bench commands
    
    * basic bench commands
    
    * test
    
    * test
    
    * test
    
    * fix benchmarks ci
    
    * fix benchmark action
    
    * add more commands
    
    * add more commands
    
    * easy bash file
    
    * add benchmarks
    
    * Add clone
    
    * Add clone
    
    * minor change
    
    * Add update line
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Try clone
    
    * fix dataset tests
    
    * Fix run name
    
    * added machine info and git tag info in benchmark bash
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * Tidy benchmark script
    
    * Fix actions
    
    * Tidy benchmark script
    
    * Fix benchmark script
    
    * Add to mnist test to benchmark
    
    * Fix name
    
    * here
    
    * revert
    
    * test actions
    
    * test actions
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * check mnist
    
    * Fix mnist test
    
    * Direct mnist output to log
    
    * test schedule workflow
    
    * test schedule workflow
    
    * test schedule action
    
    * test schedule actions
    
    * test schedule actions
    
    * stash changes
    
    * Suppress cmake warnings and add slack webhook request
    
    * added date info to regular benchmark
    
    * Format slack notif
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Fix datasets script
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Change scheduled workflow times
    
    * Change scheduled workflow times
    
    * Change on pull_request
    
    * Change on pull_request and push
    
    * Fix dataset path
    
    * Fix schedule workflow bug
    
    * Add bolt benchmarks
    
    * remove running workflow on pr
    
    * Add more benchmark data
    
    * Add epoch training time alert
    
    * Fix weekly schedule
    
    * Fix benchmark actions
    
    * Finalize for pr
    
    * Add valgrind memcheck on ctest and fix timed tests
    
    * Fix timed tests
    
    * Exclude time tests
    
    * Convert to python script with subprocess
    
    * Fixes for amzn670
    
    * Change data source
    
    * Add command line parsing
    
    * Add condensed python scripts
    
    * Change to amzn670
    
    * Change memcheck
    
    * Delete unused amzn cfg
    
    * Add enable_checks flag
    
    * Add num runs flag
    
    * Fix comments
    
    * remove test files
    
    * rename L
    
    * Fix var name
    
    Co-authored-by: Henry Zhang <junyanzhang@Henrys-MacBook-Air.local>
    Co-authored-by: Henry Zhang <henry@thirdai.com>
    Co-authored-by: Continuous Integration Continuous Deployment <cicd@thirdai.com>

commit 2ae8e7c32f629b296909e11d7e1d6a867b800e13
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Sat Nov 13 16:58:47 2021 -0600

    Refactor benchmarks and setup autotuning (#171)
    
    * Fix clang-tidy bug
    
    * Add benchmarks action
    
    * basic bench commands
    
    * basic bench commands
    
    * test
    
    * test
    
    * test
    
    * fix benchmarks ci
    
    * fix benchmark action
    
    * add more commands
    
    * add more commands
    
    * easy bash file
    
    * add benchmarks
    
    * Add clone
    
    * Add clone
    
    * minor change
    
    * Add update line
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Try clone
    
    * fix dataset tests
    
    * Fix run name
    
    * added machine info and git tag info in benchmark bash
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * Tidy benchmark script
    
    * Fix actions
    
    * Tidy benchmark script
    
    * Fix benchmark script
    
    * Add to mnist test to benchmark
    
    * Fix name
    
    * here
    
    * revert
    
    * test actions
    
    * test actions
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * check mnist
    
    * Fix mnist test
    
    * Direct mnist output to log
    
    * test schedule workflow
    
    * test schedule workflow
    
    * test schedule action
    
    * test schedule actions
    
    * test schedule actions
    
    * stash changes
    
    * Suppress cmake warnings and add slack webhook request
    
    * added date info to regular benchmark
    
    * Format slack notif
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Fix datasets script
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Change scheduled workflow times
    
    * Change scheduled workflow times
    
    * Change on pull_request
    
    * Change on pull_request and push
    
    * Fix dataset path
    
    * Fix schedule workflow bug
    
    * Add bolt benchmarks
    
    * remove running workflow on pr
    
    * Add more benchmark data
    
    * Add epoch training time alert
    
    * Fix weekly schedule
    
    * Fix benchmark actions
    
    * Finalize for pr
    
    * Add valgrind memcheck on ctest and fix timed tests
    
    * Fix timed tests
    
    * Exclude time tests
    
    * Convert to python script with subprocess
    
    * Fixes for amzn670
    
    * Change data source
    
    * Add command line parsing
    
    * Add condensed python scripts
    
    * Change to amzn670
    
    * Change memcheck
    
    * Delete unused amzn cfg
    
    * Add enable_checks flag
    
    * Add num runs flag
    
    * Fix comments
    
    * remove test files
    
    * rename L
    
    Co-authored-by: Henry Zhang <junyanzhang@Henrys-MacBook-Air.local>
    Co-authored-by: Henry Zhang <henry@thirdai.com>
    Co-authored-by: Continuous Integration Continuous Deployment <cicd@thirdai.com>

commit 2d37b5fa79ea93be8fcbc873a38bdc8b0ebf430e
Author: Joshua Engels <josh@thirdai.com>
Date:   Sat Nov 13 14:14:48 2021 -0600

    Fixed numpy dataset bug and added basic sparse pybind bindings (#177)
    
    * Sparse numpy written, testing image dataset
    
    * Finishing basic image search benchmark script
    
    * Fixing tidy
    
    * Fixes from pr comments

commit 21c48bd56c68fe22e45b8e642072f509fd31db21
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Nov 2 12:57:46 2021 -0500

    Numpy dataset -> batch, including adding *optional* memory ownership to DenseVectors (#165)
    
    * Renaming with _
    
    * Need to test this now, and add numpy stuff
    
    * Starting to add numpy
    
    * Found reference bug in thirdai.cc
    
    * Fixing hash bits
    
    * Adding range to SRP
    
    * Adding some more python bindings
    
    * More api changes
    
    * Adding vector tests
    
    * Cleaning up
    
    * Fixing move bug
    
    * Whoops forgot to put this back

commit 5083bee4452d9eb219e91f85fb6f56bb83200e0f
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Mon Nov 1 15:55:01 2021 -0500

    Char tri gram vectorizer (#166)
    
    * String dataset -> new dataset API
    
    * globalfreq
    
    * String dataset -> new dataset API pt 2 (factory)
    
    * Resolving Josh's code change requests
    
    * Resolving Nicholas's code change requests
    
    * Remove double copying in vectorizers
    StringVectorizer.vectorize() now takes and fills an index-Value-Map instead of indices and values vectors.
    Vectorizers internally use maps. If we pass vectors, then the map's contents would have to be copied to the vectors in the vectorizer.
    It will then be copied to SparseVectors in StringFactory, causing double copying.
    So might as well let the vectorize() method take in and fill out a map.
    
    * Naming changes
    
    * clang
    
    * Resolving Nicholas's code change requests
    - unique ptr to StringLoader instead of loader_t template
    - idf map is copied to avoid dealing with references and scopes
    - removed equality operator from vectorizer config item struct
    
    * Added comments on globalFreq.getIdf()
    
    * Added dataset subdirectory to utils makelists
    
    * String loader method returns loaded count
    
    * add string subdir in dataset cmakelists
    
    * Add string subdir to dataset tests makelists
    
    * string dataset cmakelists
    
    * Character trigram vectorizer
    
    * fixed some comments
    
    * fixed some comments
    
    * minor fix
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 0a5e2380cc74078e8f78d9525f5f10cbd9d54fd7
Author: AIHenry <89421348+AIHenry@users.noreply.github.com>
Date:   Sun Oct 31 16:42:06 2021 -0500

    Added Global Frequency Implementation w/ new Dataset API (#160)
    
    * start writing globalfreq according to new dataset api
    
    * globalFreq compiled successfully. Now testing
    
    * add cmakelist files for testing
    
    * wrote tests for global freq, but need SentenceLoader and vectorizer implementations to test
    
    * edits based on Geordie's comments
    
    * trivial minor fixes
    
    * remove unnecessary variable
    
    Co-authored-by: Henry Zhang (air) <junyanhenry@gmail.com>

commit a9761a41f49ed6a8ce672a298406e3b9100b3fb0
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Oct 26 20:18:38 2021 -0500

    Refactor layer initialization, standardize layer configs, add progress bar for training (#162)
    
    * add progress bar to bolt
    
    * remove weird build files
    
    * remove unnecessary headers
    
    * Remove unused constructor from progress bar
    
    * Clean up progress bar code

commit 2888fc1b27ad2a2941b293805131bf37110fab27
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Sat Oct 23 15:26:13 2021 -0500

    String dataset -> new dataset API (#143)
    
    * String dataset -> new dataset API
    
    * globalfreq
    
    * String dataset -> new dataset API pt 2 (factory)
    
    * Resolving Josh's code change requests
    
    * Resolving Nicholas's code change requests
    
    * Remove double copying in vectorizers
    StringVectorizer.vectorize() now takes and fills an index-Value-Map instead of indices and values vectors.
    Vectorizers internally use maps. If we pass vectors, then the map's contents would have to be copied to the vectors in the vectorizer.
    It will then be copied to SparseVectors in StringFactory, causing double copying.
    So might as well let the vectorize() method take in and fill out a map.
    
    * Naming changes
    
    * clang
    
    * Resolving Nicholas's code change requests
    - unique ptr to StringLoader instead of loader_t template
    - idf map is copied to avoid dealing with references and scopes
    - removed equality operator from vectorizer config item struct
    
    * Added comments on globalFreq.getIdf()
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit e508f281b466f3886df36eb19b20e4316d95a218
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Sat Oct 23 15:12:55 2021 -0500

    Add bolt to benchmarks (#144)
    
    * Fix clang-tidy bug
    
    * Add benchmarks action
    
    * basic bench commands
    
    * basic bench commands
    
    * test
    
    * test
    
    * test
    
    * fix benchmarks ci
    
    * fix benchmark action
    
    * add more commands
    
    * add more commands
    
    * easy bash file
    
    * add benchmarks
    
    * Add clone
    
    * Add clone
    
    * minor change
    
    * Add update line
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Try clone
    
    * fix dataset tests
    
    * Fix run name
    
    * added machine info and git tag info in benchmark bash
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * Tidy benchmark script
    
    * Fix actions
    
    * Tidy benchmark script
    
    * Fix benchmark script
    
    * Add to mnist test to benchmark
    
    * Fix name
    
    * here
    
    * revert
    
    * test actions
    
    * test actions
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * check mnist
    
    * Fix mnist test
    
    * Direct mnist output to log
    
    * test schedule workflow
    
    * test schedule workflow
    
    * test schedule action
    
    * test schedule actions
    
    * test schedule actions
    
    * stash changes
    
    * Suppress cmake warnings and add slack webhook request
    
    * added date info to regular benchmark
    
    * Format slack notif
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Fix datasets script
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Change scheduled workflow times
    
    * Change scheduled workflow times
    
    * Change on pull_request
    
    * Change on pull_request and push
    
    * Fix dataset path
    
    * Fix schedule workflow bug
    
    * Add bolt benchmarks
    
    * remove running workflow on pr
    
    * Add more benchmark data
    
    * Add epoch training time alert
    
    * Fix weekly schedule
    
    * Fix benchmark actions
    
    * Finalize for pr
    
    * Add valgrind memcheck on ctest and fix timed tests
    
    * Fix timed tests
    
    * Exclude time tests
    
    Co-authored-by: Henry Zhang <junyanzhang@Henrys-MacBook-Air.local>
    Co-authored-by: Henry Zhang <henry@thirdai.com>
    Co-authored-by: Continuous Integration Continuous Deployment <cicd@thirdai.com>

commit e265ffd7a472b80af0914faf6afcd5da6c9db9e1
Author: Joshua Engels <josh@thirdai.com>
Date:   Sat Oct 23 11:21:25 2021 -0500

    Adding max reservoir sizes to vector hash tables (#154)
    
    * Testing some different things
    
    * Forgot to commit
    
    * Almost done here
    
    * More combinations in benchmark
    
    * Forgot the dash
    
    * Everything working
    
    * Increasing max reservoir size
    
    * Forgot to add range parameter here
    
    * Adding openmpi to clang tidy
    
    * Hopefully this fixes the problem
    
    * Will this work?
    
    * I hope this works
    
    * Undoing changes to this
    
    * Found memory leak
    
    * Don't know why clangd adds this
    
    * Working?
    
    * Why doesn't srp work?
    
    * Finished pareto plot for R1@100
    
    * Adding sampled vector hash table test
    
    * Forgot to update the script
    
    * Adding inline to insert into tables

commit 24b4aa949a117a8017f5bef890c7978020cd5e65
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sat Oct 16 20:41:45 2021 -0500

    Click Through Dataset (#146)
    
    * Click Through Dataset
    
    * remove strange include
    
    * save progress
    
    * add missing values to dataset reader
    
    * clean up tests

commit f6350f873f3acc8641b2e042a961072e2f7480d7
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Oct 15 13:30:43 2021 -0500

    Dataset factory (#148)

commit be555b4fd4bc87ee6a1cca4a29e7073cf43cc124
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Oct 14 19:35:28 2021 -0500

    Adding python bindings to Flash (#135)
    
    * Testing some different things
    
    * Forgot to commit
    
    * Almost done here
    
    * More combinations in benchmark
    
    * Forgot the dash
    
    * Everything working
    
    * Increasing max reservoir size
    
    * Forgot to add range parameter here
    
    * Adding openmpi to clang tidy
    
    * Hopefully this fixes the problem
    
    * Will this work?
    
    * I hope this works
    
    * Undoing changes to this
    
    * Found memory leak
    
    * Don't know why clangd adds this

commit 647d4ef4f6cba2f7a1712cb3305afe3d2f2ef423
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Oct 12 13:15:49 2021 -0500

    New Dataset API (#131)
    
    * new dataset api
    
    * everything done except for testing/fix flash tests
    
    * fix flash test
    
    * fix all tests and convert to new sparse/dense vec types
    
    * fix format error
    
    * fix format error
    
    * weird compile error
    
    * weird compile error
    
    * weird compile error
    
    * try to fix compile error
    
    * compile error fixed
    
    * fix clang tidy error
    
    * tests for svm dataset
    
    * rename batch types
    
    * fix clang format

commit 397f7c52651f2f95634a8f1a4f9989e0952740fe
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Sat Oct 9 21:49:11 2021 -0500

    Add benchmark script and action (#132)
    
    * Fix clang-tidy bug
    
    * Add benchmarks action
    
    * basic bench commands
    
    * basic bench commands
    
    * test
    
    * test
    
    * test
    
    * fix benchmarks ci
    
    * fix benchmark action
    
    * add more commands
    
    * add more commands
    
    * easy bash file
    
    * add benchmarks
    
    * Add clone
    
    * Add clone
    
    * minor change
    
    * Add update line
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Add ssh clone
    
    * Try clone
    
    * fix dataset tests
    
    * Fix run name
    
    * added machine info and git tag info in benchmark bash
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * test email
    
    * Tidy benchmark script
    
    * Fix actions
    
    * Tidy benchmark script
    
    * Fix benchmark script
    
    * Add to mnist test to benchmark
    
    * Fix name
    
    * here
    
    * revert
    
    * test actions
    
    * test actions
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * delete unnecessary scripts
    
    * check mnist
    
    * Fix mnist test
    
    * Direct mnist output to log
    
    * test schedule workflow
    
    * test schedule workflow
    
    * test schedule action
    
    * test schedule actions
    
    * test schedule actions
    
    * stash changes
    
    * Suppress cmake warnings and add slack webhook request
    
    * added date info to regular benchmark
    
    * Format slack notif
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Try checking local branch
    
    * Fix datasets script
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test workflow dispatch flag
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Test run id extraction
    
    * Change scheduled workflow times
    
    * Change scheduled workflow times
    
    * Change on pull_request
    
    * Change on pull_request and push
    
    * Fix dataset path
    
    Co-authored-by: Henry Zhang <junyanzhang@Henrys-MacBook-Air.local>
    Co-authored-by: Henry Zhang <henry@thirdai.com>
    Co-authored-by: Continuous Integration Continuous Deployment <cicd@thirdai.com>

commit a47d8ab90ba732cc4a81e16b2ea0423b931e487e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sat Oct 9 11:42:42 2021 -0500

    Reorganize bolt (#128)
    
    * reorganize bolt
    
    * refactor to comply with style guide
    
    * correct handling of batch size in error computation
    
    * fix compute errors call
    
    * fix clang format

commit 1df9c33470e31211c5bdbc89d42983867558a8f7
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Oct 7 18:44:14 2021 -0500

    fix cmake file to compile on mac (#126)

commit 9df157a74c6f9a0cb03bf6c8b9630b7138a04ded
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Oct 7 16:59:47 2021 -0500

    Embedding layer (#121)
    
    * Use templates to make feed_forward/backpropagate handle dense layers explicitly
    
    * limit test batches for 670k
    
    * Add tests for new layer modes
    
    * Fix clang format
    
    * comment to explain changes
    
    * Create embedding layer
    
    * Resolve comments
    
    * clang format
    
    * Add tests for embedding layer
    
    * fix clang tidy
    
    * Revert "fix clang tidy"
    
    This reverts commit 565adebf25c0df169830e0fed7a6e6753dfdafc2.
    
    * fix clang tidy
    
    * fix clang format

commit 2a56fd14536a562512c4375a294c60fac650ad71
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Wed Oct 6 13:40:40 2021 -0500

    Migrate universal hash, create hashutils, and other script changes (#116)
    
    * Move UniversalHash
    
    * stash changes
    
    * stash changes
    
    * Add universal hash code to utils, tests, and other deployment changes
    
    * Remove benchmark test scripts for now
    
    * Remove some file changes
    
    * Fix checks
    
    * Fix comments
    
    * Fix checks
    
    * Fix checks
    
    * Fix var names in avalanche tests
    
    * Fix var names in avalanche tests

commit aa5d388ad2f2116402f6b5485d35429b1903f11f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Oct 5 13:24:37 2021 -0500

    Optimize bolt for dense computations (#114)
    
    * Use templates to make feed_forward/backpropagate handle dense layers explicitly
    
    * limit test batches for 670k
    
    * Add tests for new layer modes
    
    * Fix clang format
    
    * comment to explain changes
    
    * Resolve comments
    
    * clang format

commit 85ae03c39c2e030b06aea732c0ece4b6785844ea
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Oct 4 18:46:13 2021 -0500

    Reimplemented densified minhash, including adding correctness checks (#112)
    
    * Temp!
    
    * Densified min hash working!
    
    * Cleaning up a bit
    
    * Spacing
    
    * Making number of tests the same
    
    * Adding todo comment
    
    * Fixing densified minhash nlogn performance
    
    * Formatting
    
    * Refactoring densification and compaction
    
    * Cleaning up some
    
    * Forgot to format

commit 49065e9676f1e0120ac9ac462e16ebb784382169
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Fri Oct 1 11:41:53 2021 -0500

    fix seg fault in dwta hash overflow (#113)

commit b851b51bf3d996a4bf20553a9f9bc164558d43e7
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 30 08:48:32 2021 -0500

    Change sampled hash table to use range not range_pow in constructor (#108)

commit ff08cf5d78c1a490148e099054eef69efa89b6a5
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Sep 29 23:51:53 2021 -0500

    A basic implementation of Flash using our existing interfaces, including some simple tests (#89)
    
    * Flash working!
    
    * Fixing parallilism problem
    
    * Flash is working part 2
    
    * Fixing dataset
    
    * This too
    
    * I need this after all
    
    * Caps matters on linux but not on mac for cmake apparently
    
    * Fixing tidy errors
    
    * Fixing comments
    
    * Fixing merge conflicts with main
    
    * Adding support for two types of ids
    
    * Adding tests for svm dataset labeling

commit 50e4fb3afa75a6cbb26cd71bec4e52d9e42c2e9d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Sep 26 22:00:33 2021 -0500

    Bolt benchmarks (#94)
    
    * Rename class variables
    
    * clean up bolt code and add basic benchmark scripts
    
    * add test run script
    
    * add new bolt test to github actions
    
    * fix clang tidy and new bolt test script error
    
    * fix clang format error
    
    * fix permissions error
    
    * fix test script for boltg
    
    * add sh to bolt train test
    
    Co-authored-by: Nicholas Meisburger <nmeisburger@Nicholass-MacBook-Air.local>

commit cbae4674db8c7b5883803ef9d1a50e211b95fec4
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Sat Sep 25 12:21:35 2021 -0500

    Adapted SVMDataset to fit dataset interface. Allowed sparse batches to take dim = 0 (#75)
    
    * Adapted SVMDataset utility to fit dataset interface
    
    * Allow sparse batches to accept dim = 0
    
    * added makelists
    
    * clang check
    
    * SVMDatasetTest attempt 1
    
    * It works now!
    
    * SVMDataset - Tested
    
    * Hopefully fixed testing for git
    
    * Clang check
    
    * Fixes based on Josh and Henry's reviews.\n - Added docstrings\n - Use exception instead of assertion in Batch constructor\n - minor cleanups\n\nTODO:\n -[ ] remove dataset and download through github actions
    
    * Fixes based on Josh and Henry's reviews.\n - Added docstrings\n - Use exception instead of assertion in Batch constructor\n - minor cleanups\n\nTODO:\n -[ ] remove dataset and download through github actions
    
    * get_dataset.sh, removed svmtest dataset from repo
    
    * Attempt to fix test.yml
    
    * get_dataset.sh
    
    * fix get_dataset, removing clang-tidy errors, adjusting var names
    
    * fix get_dataset
    
    * fix get_dataset
    
    * Fixed Batch exception
    
    * Fixed Batch exception
    
    * Fixed Batch exception
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 4cd99e0ede6ac1c183e1aa58c8bdb38af78920a5
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Thu Sep 23 13:40:43 2021 -0500

    Add and fix compiler warnings (#93)
    
    * Fix clang-tidy bug
    
    * Add Werror and Wall compiler flags to cmake and fixes
    
    * Add comment fixes

commit bdd5a0a5b4bf818f743b05ac286f2fa88acc6421
Author: Minghao Yan <minghaoyan2@gmail.com>
Date:   Thu Sep 23 13:14:32 2021 -0500

    fix dense vector densification error (#83)
    
    * fix dense vector densification error
    
    * fix clang format error

commit 72dd463a4160e356fa78503e865c74e2b464e66a
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Tue Sep 21 15:56:18 2021 -0500

    Finish clang tidy checks (#86)
    
    * Fix clang-tidy bug
    
    * Finish adding modernize, cppcoreguidelines, and clang-analyzer checks
    
    * fix clang-tidy
    
    * Add comment fixes

commit 37f12a0c9eab98583d1a754ab43c9c480133b520
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Sep 19 16:27:56 2021 -0500

    Sparse layer tests: Add tests for bolt layer  (#82)
    
    * add forward and backward tests to layer
    
    * add softmax and compute errors tests
    
    * fix clang tidy errors
    
    * fix clang tidy errors

commit 484f7eb339acd68f7d990c1498b734fef598ee57
Author: Joshua Engels <josh@thirdai.com>
Date:   Sun Sep 19 13:20:25 2021 -0500

    Cleaned up HashFunctions re our new design decisions (#80)
    
    * Fixing variable names
    
    * Finishing inverting hash order

commit b1f4347a4971b7d8ec2cc68c1e4ae26f0291cdc6
Author: Joshua Engels <josh@thirdai.com>
Date:   Sat Sep 18 16:31:55 2021 -0500

    Created a HashTesting framework that checks HashFunction collision probability (#77)
    
    * Finished test framework
    
    * Fixing pr based off of comments

commit 66af63ab41eea0843c634839174fbca32b71dd1f
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Sep 16 20:53:49 2021 -0500

    Dataset interface fixes based on 09/02 meeting (#58)
    
    * Dataset interface fixes based on 09/02 meeting
    
    * Dataset interface fixes based on 09/02 meeting
    
    Co-authored-by: BenGeordie <school@bengeordie@gmail.com>

commit 052e53656436f75990e814bef41ee052a645539e
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Sep 16 19:22:57 2021 -0500

    Updating Hash Functions, including adding seeds and changing to vector major order (#74)
    
    * Adding seeds to hash functions
    
    * Changing comment to be in vector major order
    
    * Format

commit f33337b08556fc1dd3215628c3eba00ae6aafccd
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Thu Sep 16 13:34:12 2021 -0500

    Configure densified minhash (#68)
    
    
    * Configure DensifiedMinHash as subclass of HashFunction

commit 8f0892537e42e3bf9a85de86ffa5414e31772f97
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Thu Sep 16 13:33:56 2021 -0500

    Configure new srp (#63)
    
    
    * Configure New SRP as subclass

commit 3e23902c27d848b8f8e072eda82ef3c7d3c8157b
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 16 10:36:06 2021 -0500

    Generalizes Layer Interface for Bolt (#69)
    
    * Add layer interface to bolt
    
    * Revert "Add layer interface to bolt"
    
    This reverts commit cf9f043d0a55a6386655e1e84474d9b2d6a52d72.
    
    * Revert "Revert "Add layer interface to bolt""
    
    This reverts commit e1e3aa4f6435cd99d442eac66c6063c1e9c268f7.
    
    * fix clang format error
    
    * fix clang tidy error
    
    * add stdint.h header

commit bf75c5392f9c009fbdb08569752249405e274e61
Author: Minghao Yan <minghaoyan2@gmail.com>
Date:   Wed Sep 15 16:41:24 2021 -0500

    fix murmurhash bug (#64)
    
    * fix murmurhash bug
    
    * fix murmurhash bug

commit a64a9865b4632f7fe94d01a001f52f0c9dbd324e
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Wed Sep 15 16:40:22 2021 -0500

    Create HashTable with reservoir sampling and integrate with bolt (#59)
    
    * Create HashTable with reservoir sampling and integrate with bolt
    
    * fix clang format error
    
    * find openmp for clang tidy
    
    * add openmp to right target
    
    * remove -fopenmp flag
    
    * use sorting instead of set_num_threads = 1
    
    * fix clang format error
    
    * add comments to hash table

commit de82a463f74f9d11c012e5141c03642467b371bf
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Wed Sep 15 16:30:19 2021 -0500

    Fix cmake python libs (#61)
    
    
    * Fix CMake error with linux not finding Python headers

commit dcb351d950eee07ac6f7e5050d384d689d29ea02
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Sep 14 13:13:59 2021 -0500

    Add dwta hashing and tests to utils (#56)
    
    * add dwta hashing and tests
    
    * update with new hash function interface
    
    * update with new hash function interface
    
    * update with new hash function interface
    
    * update with new hash function interface
    
    * fix clang tidy error
    
    * migrate bolt to new dwta
    
    * one more dwta test
    
    * remove -g flag
    
    * generalize testing harness
    
    * fix python bindings with new dwta

commit 5b62d479c3f24323666661d15405fd87f50b47c8
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Sep 14 12:24:18 2021 -0500

    Moving all of our scripts to a bin directory. Should make development easier. (#55)
    
    * Adding bin scripts
    
    * Updating github actions
    
    * Forgot .sh

commit a671c87a492cbe153fc1ab86282586311c5ba6c7
Author: Joshua Engels <josh@thirdai.com>
Date:   Mon Sep 13 21:26:44 2021 -0500

    Added HashFunction implementations to a Cmake library and tidied HashFunctions (#53)
    
    * Fixing up hash functions
    
    * Fixing lint errors in hashing code
    
    * Fixing up tidy problems
    
    * Removing extra tests we will add later
    
    * Small format change

commit f8fb8fbb3990b5e5730e548c223140db84596d51
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Mon Sep 13 17:10:53 2021 -0500

    Comment out examples integer hash tests (#52)
    
    
    * Remove examples tests that fail checks

commit 4795bde629ce660bd0f9bec1601101fcf7fc8c00
Merge: e91731d0 dfda4343
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Mon Sep 13 16:06:03 2021 -0500

    Merge branch 'dminhash-integration' into main

commit e91731d06af64842be425e413806de3d9e53198c
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Sep 12 22:23:52 2021 -0500

    Fix bolt rehash autotuning bug  (#50)
    
    * rix rehash autotuning
    
    * fix stupid magic numbers check

commit 21004d5ddbdd9aa011b383777725e4e9c63b525b
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Sun Sep 12 16:48:35 2021 -0500

    Clang tidy additions (#49)
    
    * Fix clang-tidy bug
    
    * Add additional clang-tidy checks and fixes
    
    * Fix clang-tidy
    
    * Add to clang-tidy description
    
    * Fix clang-tidy
    
    * Fix clang-tidy
    
    * Fix clang-tidy
    
    * Add loop to UniversalHash

commit 1b7894808912ae8fe226d34cf02587954df2087f
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Sep 9 19:52:24 2021 -0500

    Nicely formatted tidy for abseil, bugprone, and c/c++ cert checks. Also fixed up some code corresponding to them (#44)
    
    * Getting ready to clang tidy everything, and changing K and L as an example
    
    * Reverting changes to merge more easily
    
    * Reverting changes to merge more easily 2
    
    * Removing the line that we reverted
    
    * Small wording change in comment
    
    * Another comment change
    
    * First batch of changes
    
    * Forgot to format

commit de0b3543deb33dc87abc2be879488e1c0b1302ea
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Thu Sep 9 19:17:17 2021 -0500

    Fix clang tidy (#43)
    
    * Getting ready to clang tidy everything, and changing K and L as an example
    
    * Reverting changes to merge more easily
    
    * Reverting changes to merge more easily 2
    
    * Removing the line that we reverted
    
    * Small wording change in comment
    
    * Another comment change
    
    * Fix clang-tidy bug
    
    Co-authored-by: Josh Engels <josh@thirdai.com>

commit e851f313aad7e0c885c6e3de43475899e39b205a
Author: Joshua Engels <josh@thirdai.com>
Date:   Thu Sep 9 18:50:49 2021 -0500

    Fix clang tidy to also run on header files, and getting ready to add checks one by one (#42)
    
    * Getting ready to clang tidy everything, and changing K and L as an example
    
    * Reverting changes to merge more easily
    
    * Reverting changes to merge more easily 2
    
    * Removing the line that we reverted
    
    * Small wording change in comment
    
    * Another comment change

commit faff64c3489ae992ae78a83208bff4fd3b3da33a
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Thu Sep 9 17:34:26 2021 -0500

    Integrate SRP with HashFunction interface. (#41)
    
    * integrate SRP with HashFunction interface
    
    * Add override

commit 731b4fdb4d1162f3efb9765695937a87a5e8808f
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Thu Sep 9 14:30:52 2021 -0500

    Add bolt to universe (#37)
    
    * Add bolt to repository
    
    * Fix clang tidy errors
    
    * Fix clang tidy errors
    
    * Fix clang tidy errors
    
    * fix clang format error
    
    * fix strange build error
    
    * Finish migrating bolt to universe
    
    * finish merge
    
    * add model converter
    
    * add configs and update readmes

commit 66545d2ffaf8b8bc8868c5aaf2e2fd77b88a3796
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Thu Sep 9 10:56:37 2021 -0500

    Split batch_type into label_type (#34)

commit a09e5a97ab246ceee6539c01c1263831c606c2bf
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Thu Sep 9 10:55:49 2021 -0500

    Add and cleanup of setup files (#26)

commit 600a7eb7107ed0a6b7988cae0c8c26e35219349f
Author: Joshua Engels <josh@thirdai.com>
Date:   Wed Sep 8 23:10:38 2021 -0500

    Created a basic hash table interface and implementation, along with some simple tests (#25)
    
    * Some basic hash table code and tests, not compiling
    
    * Finished tests
    
    * Removed test comment
    
    * Updating from pr comments

commit dfda434396f3437e2cc4c883575155387861d999
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Wed Sep 8 14:22:20 2021 -0500

    murmurhash

commit 986618e173049dbe24b94afe5342a12035506773
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Wed Sep 8 13:50:25 2021 -0500

    integrate DensifiedMinHash

commit 980c70d04712b972e3858d5a9feb018582254c95
Author: Minghao Yan <minghaoyan2@gmail.com>
Date:   Wed Sep 8 13:49:39 2021 -0500

    Murmur hash integration (#23)
    
    * Add bolt to repository
    
    * Fix clang tidy errors
    
    * Fix clang tidy errors
    
    * Fix clang tidy errors
    
    * fix clang format error
    
    * fix strange build error
    
    * merge murmurhash
    
    * move murmurhash to utils
    
    * add murmurhash to utils
    
    Co-authored-by: Nicholas Meisburger <ncm5@rice.edu>
    Co-authored-by: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>

commit 5cdcf19d2a4511affa73685a163150fd20caeced
Author: Minghao Yan <minghaoyan2@gmail.com>
Date:   Tue Sep 7 18:40:09 2021 -0500

    merge two SRPs into Universe (#17)
    
    * merge two SRPs into Universe
    
    * reformat
    
    * change extension to cc
    
    * move and rename srps
    
    * reformat
    
    * reformat

commit 78f3d74efd870494c6f4be90e50c5f9c91b13575
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Tue Sep 7 18:34:51 2021 -0500

    reformat

commit 27291b1ede02a477ea828c9dbd6eb83a8967d23c
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Tue Sep 7 18:26:27 2021 -0500

    reformat

commit e91f2b92055ffb074d9efb91562e9338e32b9b9d
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Tue Sep 7 18:24:27 2021 -0500

    Add bolt to universe (#9)
    
    * Add bolt to repository
    
    * Fix clang tidy errors
    
    * Fix clang tidy errors
    
    * Fix clang tidy errors
    
    * fix clang format error
    
    * fix strange build error
    
    * Fixing quotation mark
    
    * fix clang-tidy
    
    Co-authored-by: Josh Engels <josh@thirdai.com>
    Co-authored-by: alanThirdAI <alan@thirdai.com>

commit 8b175015b95d964a29bba9cd24d9ca848b78a5fd
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Tue Sep 7 18:10:41 2021 -0500

    move and rename srps

commit 4b15fef97f2b5a4e123f9c7388ba31728220d226
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Tue Sep 7 17:15:09 2021 -0500

    change extension to cc

commit a3ac1752efab6d4303028c15856a00d84ea509db
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Tue Sep 7 16:39:37 2021 -0500

    reformat

commit 4ab9a70c91b276f5d90232f7bce79b97fefb936a
Author: MinghaoYan <minghaoyan2@gmail.com>
Date:   Tue Sep 7 16:14:04 2021 -0500

    merge two SRPs into Universe

commit d9c9624a0bda77b270de54a3c05f0f7657da09b1
Author: Nicholas Meisburger <43160219+nmeisburger@users.noreply.github.com>
Date:   Sun Sep 5 21:21:13 2021 -0500

    Swap bazel for cmake (#8)
    
    * Swap bazel for cmake
    
    * remove build files after generate compile commands
    
    * don't remove  build files after generate compile commands
    
    * restrict files in clang tidy
    
    * restrict files in clang tidy
    
    * restrict files in clang tidy
    
    * restrict files in clang tidy
    
    * restrict files in clang tidy
    
    * restrict files in clang tidy
    
    * change clang tidy actions
    
    * hack for clang tidy
    
    * install mpi so mpi.h header is found
    
    * make clang-diagnostic-error a warning to fix mpi.h include error
    
    * make clang-diagnostic-error a warning to fix mpi.h include error
    
    * remove clang-diagonstics
    
    * remove clang-diagnostic-error check
    
    * remove clang-diagnostic-error check
    
    * remove clang-diagnostic-error check
    
    * remove clang-diagnostic-error check
    
    * remove clang-diagnostic-error check
    
    * remove clang-diagnostic-error check
    
    * remove clang-diagnostic-error check
    
    * remove clang-diagnostic-error check
    
    * use find(mpi) with cmake
    
    * restore all clang-tidy checks
    
    * fix clang tidy error in mpi example
    
    * fix more clang-tidy errors and remove magic numbers
    
    * check compile error fails ci
    
    * fix errors
    
    * clean up link mpi
    
    * re-enable magic numbers check
    
    * re-enable magic numbers check
    
    * disable magic numbers check
    
    * rename to cppg
    
    * readme

commit bf3af1471d82c5827c24daa34ce12974a823ce63
Author: benitoThree <89472452+benitoThree@users.noreply.github.com>
Date:   Thu Sep 2 17:24:27 2021 -0500

    Dataset interface for loading multiple batches from file at once (#5)
    
    * First commit of utils top level folder, along with basic HashFunction and Dataset objects
    
    * Updating PR to include comments
    
    * Forgot to format this, but nice to know working as intended
    
    * Change to a Batch pointer
    
    * Adding formatting
    
    * gitignore and compile_commands
    
    * Dataset.h can load multiple batches at once
    
    * Dataset.h can load multiple batches at once
    
    * Dataset.h can load multiple batches at once
    
    * Made adjustments based on Josh's review
    
    * Made adjustments based on Josh's review
    
    * reverted git ignore, deleting compile_commands.json
    
    * reverted gitignore
    
    * hash function line 16 fix
    
    * hashFunction hashBatch() comment fix
    
    * hashFunction hashBatch() comment fix
    
    * hashFunction hashBatch() comment fix
    
    Co-authored-by: Josh Engels <josh@thirdai.com>
    Co-authored-by: Benito Geordie <benito@Benitos-MacBook-Air.local>
    Co-authored-by: Benito Geordie <benito@Benitos-Air.attlocal.net>

commit 906215d1f1f51dd60401ed31f6b11d0928fda66a
Author: Joshua Engels <josh@thirdai.com>
Date:   Tue Aug 31 16:24:38 2021 -0500

    Changing generate compile commands to work on mac (#3)

commit 693cb633ed909bef302bc2c4911fdc53b50cc3ed
Author: alanThirdAI <88688187+alanThirdAI@users.noreply.github.com>
Date:   Tue Aug 31 16:06:55 2021 -0500

    Change namespace (#2)

commit 4b782ccd71d56356b54d486ab246f60a48735316
Author: alanThirdAI <alan@thirdai.com>
Date:   Tue Aug 31 14:57:25 2021 -0500

    Fix style errors

commit 1ed8430504486a2eeda3988b5fe371451bfb0d77
Merge: a83b5d98 0d7ff16f
Author: alanThirdAI <alan@thirdai.com>
Date:   Tue Aug 31 13:58:59 2021 -0500

    Merge branch 'main' of https://github.com/ThirdAILabs/Universe into main

commit a83b5d98ad7b89323ee67852cf46f39b6d640b4c
Author: alanThirdAI <alan@thirdai.com>
Date:   Tue Aug 31 13:58:43 2021 -0500

    Fix style errors

commit 0d7ff16f118d31638776c12d3aaeb649c362604c
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 30 18:59:05 2021 -0500

    Adding to install mac commands

commit 5b44a8be608e0cfae32f62b50cc60e29b87f2f33
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 30 18:21:47 2021 -0500

    Fixing some style

commit 67caf868deba217805ef1ff6e47ce2634d5106d1
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 30 18:18:58 2021 -0500

    New version on clang tidy

commit 43d43220c1227b2a27b44d5179c443d171c58f38
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 18:16:53 2021 -0500

    Remove faulty flag from compile_commands

commit e9d8759f70dd644090b301f7434f3b919a520a4a
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 17:27:08 2021 -0500

    Fix clang-check and some warnings

commit 2a88ae293b4b10d354df2b71667097887c9bfcd8
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 30 17:21:53 2021 -0500

    Adding the hack

commit 7e5a07e3cc64aab07e2ad0eb1d5129573ec89b4f
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 30 17:17:12 2021 -0500

    Trying to change symlink in github actions workflow

commit 1429a4be9f7348dc805ccefeb1feabe184606ae1
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 30 17:07:51 2021 -0500

    Adding new clang tidy job

commit 3673b38828aff4dd830e4aef8c4f52366103bb93
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 30 16:18:52 2021 -0500

    Updated mac installs

commit 6902582178b362c500d0ef7068a4c48b687e00f4
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 14:52:00 2021 -0500

    Update clang-tidy.yml

commit 015a2c4f00d9ae433c6646e88d9b54f19e4528b3
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 03:37:05 2021 -0500

    Update clang-tidy.yml

commit 19e185005b48c840b6d29c9a1fd32d4608278aef
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 03:30:55 2021 -0500

    Update clang-tidy.yml

commit 8e0de1123285a9d2ce424ff03b71471bcafbf3dc
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 03:27:19 2021 -0500

    Update clang-tidy.yml

commit f05bfa6b0d2df4cb29eab051c72534b875ffe916
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 03:06:15 2021 -0500

    Update clang-tidy.yml

commit c30b2fbcaff9bc75d4ebcb543e91e43dde35738d
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 03:01:33 2021 -0500

    Update clang-tidy.yml

commit aa50249de7a7ecd19cd77bad2251cc26dacf4332
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 02:59:40 2021 -0500

    Add clang-tidy.yml

commit 7df7405a507898d28ed70093b68fb28e44410d50
Author: alanThirdAI <alan@thirdai.com>
Date:   Mon Aug 30 01:26:59 2021 -0500

    Move mpi-example

commit befeeb7adfecb31abe230caacb5bacd276eac3db
Author: alanThirdAI <alan@thirdai.com>
Date:   Sun Aug 29 22:30:02 2021 -0500

    Add more linux setup

commit b46d2ec1ab4c80c8f0e105f2ec2656172f374549
Author: Josh Engels <josh@thirdai.com>
Date:   Sun Aug 29 21:14:50 2021 -0500

    Whoops, shouldnt have pushed this

commit d305faec4078474a7c7d6590b9afa52090fc0efe
Author: Josh Engels <josh@thirdai.com>
Date:   Sun Aug 29 21:10:02 2021 -0500

    Renaming install linux file

commit 3c6fee9d0740dd958a0ba5f1345849f041e666ef
Author: Josh Engels <josh@thirdai.com>
Date:   Sun Aug 29 21:07:45 2021 -0500

    Created mac install script

commit 9f1bc82c72896e0b9fc8edecc8a8a020718ad0c1
Author: Josh Engels <josh@thirdai.com>
Date:   Sun Aug 29 20:54:07 2021 -0500

    Moving anshus code to seperate branch

commit 4e368fab5c7730517cf591a130865c85d1cced3f
Author: Josh Engels <josh@thirdai.com>
Date:   Sat Aug 28 17:11:18 2021 -0500

    more exceptions

commit f5033f20d606989ef40a452b751bd1cba8b9f81b
Author: Josh Engels <josh@thirdai.com>
Date:   Sat Aug 28 16:52:26 2021 -0500

    Adding clang tidy file

commit 7d4ae310b5cb079580a8366e19382083f6c84556
Author: Josh Engels <josh@thirdai.com>
Date:   Sat Aug 28 16:30:19 2021 -0500

    Adding clang tidy run

commit 802ace9aaefa2402a0254bca75601921d6e786d9
Author: alanThirdAI <alan@thirdai.com>
Date:   Sat Aug 28 16:24:22 2021 -0500

    Rename tests to examples

commit 78fa45e2e8241807fb1b9cf2ab53ca278abfaeba
Author: alanThirdAI <alan@thirdai.com>
Date:   Sat Aug 28 16:11:32 2021 -0500

    Rename tests to examples

commit ab67bf05a3766b1b70f131a2550ce8ee6c978d5b
Author: alanThirdAI <alan@thirdai.com>
Date:   Sat Aug 28 15:27:34 2021 -0500

    Change hash_test assertion

commit be4c200819434ee8165c12feb87bf78c3694afcc
Author: alanThirdAI <alan@thirdai.com>
Date:   Sat Aug 28 15:16:34 2021 -0500

    Change hash_test assertion

commit 3b8652e7d2abdf0def9571743d46b48fe5a9eed9
Author: alanThirdAI <alan@thirdai.com>
Date:   Sat Aug 28 15:15:07 2021 -0500

    Remove clang-tidy from yml

commit cf46afa16f816c57d8fd4b4d705ae762491718ee
Author: alanThirdAI <alan@thirdai.com>
Date:   Sat Aug 28 15:09:14 2021 -0500

    Add clang-tidy to yml

commit cc7cf7ad54a8c0c096deead1662f9f117f49a4c4
Author: alanThirdAI <alan@thirdai.com>
Date:   Sat Aug 28 13:34:40 2021 -0500

    Add install script and clang-tidy

commit 6a9e018633fafb2ec5a026d7b69620a525fde620
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:28:58 2021 -0500

    Update clang-format.sh

commit a7f3cbec2463932017174e4fb7d8fe70b09ce778
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:26:39 2021 -0500

    Update clang-format.sh

commit dcf68d7bb6847695793bb7fad54f61318b4695ae
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:23:48 2021 -0500

    Update clang-format.sh

commit 3ad2f1e917c2ee57b441170a34a205be1d3d4ebf
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:18:17 2021 -0500

    Update clang-format.sh

commit be204d7780654262de8d01be98dcabbf83f2c5e5
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:17:16 2021 -0500

    Update clang-format.sh

commit fa88bd9ba7812487c49f0f2fb53d5e09cae4385f
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:14:34 2021 -0500

    Update clang-format.sh

commit c4bd27f089ddbb18e3537601d23ddee14893002d
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:13:15 2021 -0500

    Update clang-format.sh

commit 2ed72ff0a20b55d229bfb8227e9ad31b43edc921
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:11:45 2021 -0500

    Update clang-format.sh

commit afa851b3c620859882fd4bd634f5873d09917d2c
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 16:10:23 2021 -0500

    Update clang-format.sh

commit 5aa7e39542bc69636db0d6263d85564eaf217540
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:51:19 2021 -0500

    Update clang-format.sh

commit b25ad670905dd02b8642e15bc47d3a7fc215cf85
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:48:28 2021 -0500

    Update clang-format.sh

commit 4d0f75a658fafcd9509800697a3dbcb4e84790a6
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:47:28 2021 -0500

    Update clang-format.sh

commit 1b53dcacbc9bb4e01fd9cbbb23e2df89d5710f77
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:44:59 2021 -0500

    Update clang-format.sh

commit 61a8ffcbea776d7fc23a33f22e2d041ebee59510
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:44:14 2021 -0500

    Update clang-format.sh

commit 90a31b199c618d1fc7d72a7cf7b572cf8221ff04
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:43:27 2021 -0500

    Update clang-format.sh

commit 6531053486bf63726b0c49a3a27b37d3ef9776e4
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:41:41 2021 -0500

    Update clang-format.sh

commit bf4c51146eaff4a4a31df5a13ca3b19add187c83
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:40:17 2021 -0500

    Update clang-format.sh

commit 6d60c2cdddf6486dc0dd1e70aae00d296d904a6c
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:38:31 2021 -0500

    Update clang-format.sh

commit 28d6d65f0ac855949773f65df7676fb5192d1abf
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:29:13 2021 -0500

    Update clang-format.sh

commit 9ef17687b1556646d5ab592d89eb5ec37cbed744
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:27:44 2021 -0500

    Update clang-format.sh

commit cb4ef799baeabbaf427b565b1f070aa94113b20b
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:26:23 2021 -0500

    Fix clang error

commit b36ed99f446f7df4559020e6cb46513f21a3c7a5
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:24:47 2021 -0500

    Update clang-format.yml and move clang-format.sh

commit 90c83b23d7b7b2b9020116885558480b13a8a65e
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:22:55 2021 -0500

    Update clang-format.yml and move clang-format.sh

commit cf9846180fb909bd8362f523d9bd2556ab28de5f
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 15:01:21 2021 -0500

    Try clang diff

commit 5cdbf2644816d154fd79eb45516081cfd6aebf3e
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 14:59:37 2021 -0500

    Add clang-format.yml

commit 80fc508ffb81825a803fd977e4aaf58539d3b5d5
Author: alanThirdAI <alan@thirdai.com>
Date:   Thu Aug 26 14:23:19 2021 -0500

    Add clang-format

commit 176dd8bc4a9e87ab296eef8c159a1e90637770ee
Author: alanThirdAI <alan@thirdai.com>
Date:   Wed Aug 25 15:19:01 2021 -0500

    gitignore compile_commands.json

commit 015eede5e576e2948e860ea23ed8b394077f763f
Author: alanThirdAI <alan@thirdai.com>
Date:   Wed Aug 25 15:01:22 2021 -0500

    Update main.yml

commit 9ca1dce674eb5b915f92569633b223c0502572ea
Author: alanThirdAI <alan@thirdai.com>
Date:   Wed Aug 25 14:49:17 2021 -0500

    Update main.yml

commit a9329bfeeaf45506749492e10bb12eb299afb2a1
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 17:06:06 2021 -0500

    Update main.yml

commit d9f180a0206db177b5eda341cf9e3c675eaf35ec
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:38:52 2021 -0500

    Update main.yml

commit 7e6ae17193186fdfddf09b29ae0e392268c5bf5b
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:31:44 2021 -0500

    Update main.yml

commit 9ce2a437f5f7a3e30d03202629c0404b79ba9f54
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:29:40 2021 -0500

    Update main.yml

commit 7e295ad879b0406a072e097ffeb6db89ac8d80b2
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:29:08 2021 -0500

    Update main.yml

commit 0d80cfb9a54762f94f935a1048a8c6ef6d652f2c
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:26:55 2021 -0500

    Update main.yml

commit efb8080e506a60a6cfc44e9b58f88f0eef5761f0
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:24:25 2021 -0500

    Update main.yml

commit 5f20ab9a1ed63c25d4be63706e73de7b7bb9eab1
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:22:54 2021 -0500

    Update main.yml

commit 6e195db39b81925531578463da8bc78083ee46e5
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:20:56 2021 -0500

    Update main.yml

commit eda323bbad2cf899fd97d35a235efe7158f08717
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 16:04:12 2021 -0500

    Update main.yml

commit 041173452a0fe3afce264c24504d6b3fa2ec6807
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 24 15:57:43 2021 -0500

    Fix CRLF and update main.yml. Move mpi-example to outer scope.

commit 1b7fe3c38d29e5bba252b422b1e71249050c7dfb
Author: Josh Engels <josh@thirdai.com>
Date:   Tue Aug 24 10:55:55 2021 -0500

    We can check in compile_commands.json too

commit c002caaedb9d22bad882f0ba09283b1034459333
Author: Josh Engels <josh@thirdai.com>
Date:   Tue Aug 24 10:34:44 2021 -0500

    Forgot to change all back to hash_test

commit 96bd79c7bcdc549026ec16fdf6fd246a84bdfb9d
Author: Josh Engels <josh@thirdai.com>
Date:   Tue Aug 24 10:33:14 2021 -0500

    Adding targets for all binary and all test

commit 4a59db056b1e836ff414f09a35d9fed1897efe40
Author: abj7 <alan@thirdai.com>
Date:   Mon Aug 23 19:10:17 2021 -0500

    Update main.yml with mpi config flag

commit c23d1459e8c86cebe37fd24c07f73549514800fd
Author: Josh Engels <josh@thirdai.com>
Date:   Mon Aug 23 19:02:23 2021 -0500

    Temporary version of compile commands json creation

commit 15a0623368530aab2b0a7e8d79ae63a8fb26a542
Author: abj7 <alan@thirdai.com>
Date:   Mon Aug 23 16:41:56 2021 -0500

    Add k8 cpu toolchain

commit 7df21683bbe1ac367750a440c095c3285c2a9a3f
Author: abj7 <alan@thirdai.com>
Date:   Mon Aug 23 16:19:23 2021 -0500

    Move WORKSPACE to outer scope

commit f123066dc9fd918084781609f27c36c33356786f
Merge: 3ad65aa8 5e46ae4f
Author: abj7 <alan@thirdai.com>
Date:   Mon Aug 23 15:45:07 2021 -0500

    Merge branch 'main' of https://github.com/ThirdAILabs/Universe

commit 3ad65aa801f5bb21d2e00fc4305fb93fa6a154e9
Author: abj7 <alan@thirdai.com>
Date:   Mon Aug 23 15:44:57 2021 -0500

    Update main.yml

commit 5e46ae4f3b374e831413796a271670d38527dbdc
Author: Anshu <anshu@thirdai.com>
Date:   Mon Aug 23 14:52:21 2021 -0500

    Starting Utils for Slide

commit e476db5fa435094a7e6d419e0b034e629cca375d
Author: abj7 <alan@thirdai.com>
Date:   Thu Aug 19 16:23:59 2021 -0500

    Update main.yml

commit 49db45531c3210eea5babf74eb13b85749322c25
Author: abj7 <alan@thirdai.com>
Date:   Thu Aug 19 16:20:57 2021 -0500

    Update main.yml

commit 6d1be2b52064d717e0855207a53195be8389e0a8
Author: Alan Ji <31432205+abj7@users.noreply.github.com>
Date:   Thu Aug 19 16:07:34 2021 -0500

    Update main.yml

commit bbfa999323d4065cb009824e83d06bd16798c9fb
Author: Alan Ji <31432205+abj7@users.noreply.github.com>
Date:   Thu Aug 19 15:52:28 2021 -0500

    Create main.yml

commit c2c3ce52c9b61c3de5d32891b698ef7b03a0e2e4
Author: abj7 <alan@thirdai.com>
Date:   Sun Aug 15 12:26:38 2021 -0500

    Fix tabulation hash rand gen and add avalanche tests

commit f3e631eecba96fee5a802248e823edbaaa0c3e10
Author: abj7 <alan@thirdai.com>
Date:   Sat Aug 14 20:30:46 2021 -0500

    Add murmurhash avalanche tests

commit 81c401f398ff31f399b2c1328768b8d44747dd69
Author: abj7 <alan@thirdai.com>
Date:   Sat Aug 14 13:39:06 2021 -0500

    Move time tests to test suite

commit 74c08fae9c1b48c5cf27307bb2f4773d6487f79a
Author: abj7 <alan@thirdai.com>
Date:   Sat Aug 14 03:00:51 2021 -0500

    Simplify string keys and fix murmurhash outputs

commit c216302c35dc78aff0ebb2f325fccb6a6f01ea47
Author: abj7 <alan@thirdai.com>
Date:   Fri Aug 13 11:18:18 2021 -0500

    Add murmurhash and tabulation hashing with time tests

commit fd07c70e1a2516ce4bde01f62be31e4d253eb62e
Author: abj7 <alan@thirdai.com>
Date:   Wed Aug 11 20:52:24 2021 -0500

    Fix MPI build with toolchain config

commit d324ee09edd2200e23549ef8587c6c6e06707fe8
Author: abj7 <alan@thirdai.com>
Date:   Wed Aug 11 13:22:11 2021 -0500

    Add MPI example

commit fd5f9d1749b3c30511512d176af43352e9d022b8
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 10 22:43:25 2021 -0500

    Add gtest example

commit 7dec95572897d840485b14a5ada74da61fdbf7c4
Author: abj7 <alan@thirdai.com>
Date:   Tue Aug 10 13:26:01 2021 -0500

    Add gitignore

commit fbf3671adbdc103b197eb2b133f6fe9ccbe11dca
Author: abj7 <alan@thirdai.com>
Date:   Mon Aug 9 16:23:06 2021 -0500

    Add tutorial skeleton code

commit 74e096d0e92a11cd158c8f8cfb818ea006ac45d0
Author: Third-AI <87889893+Third-AI@users.noreply.github.com>
Date:   Sat Aug 7 21:46:48 2021 -0500

    Update README.md

commit 22a4457d7614358c7df2fb3c3f3f83b344627a7d
Author: Third-AI <87889893+Third-AI@users.noreply.github.com>
Date:   Sat Aug 7 20:04:39 2021 -0500

    Update LICENSE

commit 342c55abebe485ba067b411e14431806fbffa0e4
Author: Third-AI <87889893+Third-AI@users.noreply.github.com>
Date:   Fri Jul 30 15:41:39 2021 -0500

    Update LICENSE

commit 52e6a745cdbc241e95673580dedfb12384ff4ddb
Author: Third-AI <87889893+Third-AI@users.noreply.github.com>
Date:   Fri Jul 30 15:40:12 2021 -0500

    Basic Licence

commit 8f518362b41edbcb121b46f41c900e50ddbd80af
Author: Third-AI <87889893+Third-AI@users.noreply.github.com>
Date:   Fri Jul 30 15:35:57 2021 -0500

    Initial commit
