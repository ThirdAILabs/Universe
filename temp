Enabled checks:
    abseil-duration-addition
    abseil-duration-comparison
    abseil-duration-conversion-cast
    abseil-duration-division
    abseil-duration-factory-float
    abseil-duration-factory-scale
    abseil-duration-subtraction
    abseil-duration-unnecessary-conversion
    abseil-faster-strsplit-delimiter
    abseil-no-internal-dependencies
    abseil-no-namespace
    abseil-redundant-strcat-calls
    abseil-str-cat-append
    abseil-string-find-startswith
    abseil-string-find-str-contains
    abseil-time-comparison
    abseil-time-subtraction
    abseil-upgrade-duration-conversions
    altera-kernel-name-restriction
    altera-single-work-item-barrier
    altera-struct-pack-align
    android-cloexec-accept
    android-cloexec-accept4
    android-cloexec-creat
    android-cloexec-dup
    android-cloexec-epoll-create
    android-cloexec-epoll-create1
    android-cloexec-fopen
    android-cloexec-inotify-init
    android-cloexec-inotify-init1
    android-cloexec-memfd-create
    android-cloexec-open
    android-cloexec-pipe
    android-cloexec-pipe2
    android-cloexec-socket
    android-comparison-in-temp-failure-retry
    boost-use-to-string
    bugprone-argument-comment
    bugprone-assert-side-effect
    bugprone-bad-signal-to-kill-thread
    bugprone-bool-pointer-implicit-conversion
    bugprone-branch-clone
    bugprone-copy-constructor-init
    bugprone-dangling-handle
    bugprone-dynamic-static-initializers
    bugprone-exception-escape
    bugprone-fold-init-type
    bugprone-forward-declaration-namespace
    bugprone-forwarding-reference-overload
    bugprone-inaccurate-erase
    bugprone-incorrect-roundings
    bugprone-infinite-loop
    bugprone-integer-division
    bugprone-lambda-function-name
    bugprone-macro-parentheses
    bugprone-macro-repeated-side-effects
    bugprone-misplaced-operator-in-strlen-in-alloc
    bugprone-misplaced-pointer-arithmetic-in-alloc
    bugprone-misplaced-widening-cast
    bugprone-move-forwarding-reference
    bugprone-multiple-statement-macro
    bugprone-narrowing-conversions
    bugprone-no-escape
    bugprone-not-null-terminated-result
    bugprone-parent-virtual-call
    bugprone-posix-return
    bugprone-redundant-branch-condition
    bugprone-reserved-identifier
    bugprone-signal-handler
    bugprone-signed-char-misuse
    bugprone-sizeof-container
    bugprone-sizeof-expression
    bugprone-spuriously-wake-up-functions
    bugprone-string-constructor
    bugprone-string-integer-assignment
    bugprone-string-literal-with-embedded-nul
    bugprone-suspicious-enum-usage
    bugprone-suspicious-include
    bugprone-suspicious-memset-usage
    bugprone-suspicious-missing-comma
    bugprone-suspicious-semicolon
    bugprone-suspicious-string-compare
    bugprone-swapped-arguments
    bugprone-terminating-continue
    bugprone-throw-keyword-missing
    bugprone-too-small-loop-variable
    bugprone-undefined-memory-manipulation
    bugprone-undelegated-constructor
    bugprone-unhandled-self-assignment
    bugprone-unused-raii
    bugprone-unused-return-value
    bugprone-use-after-move
    bugprone-virtual-near-miss
    cert-con36-c
    cert-con54-cpp
    cert-dcl03-c
    cert-dcl16-c
    cert-dcl21-cpp
    cert-dcl37-c
    cert-dcl50-cpp
    cert-dcl51-cpp
    cert-dcl54-cpp
    cert-dcl58-cpp
    cert-dcl59-cpp
    cert-env33-c
    cert-err09-cpp
    cert-err34-c
    cert-err52-cpp
    cert-err61-cpp
    cert-fio38-c
    cert-flp30-c
    cert-mem57-cpp
    cert-msc30-c
    cert-msc32-c
    cert-msc50-cpp
    cert-msc51-cpp
    cert-oop11-cpp
    cert-oop54-cpp
    cert-oop57-cpp
    cert-oop58-cpp
    cert-pos44-c
    cert-sig30-c
    cert-str34-c
    clang-analyzer-apiModeling.StdCLibraryFunctions
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    concurrency-mt-unsafe
    darwin-avoid-spinlock
    darwin-dispatch-once-nonstatic
    fuchsia-default-arguments-calls
    fuchsia-default-arguments-declarations
    fuchsia-header-anon-namespaces
    fuchsia-multiple-inheritance
    fuchsia-overloaded-operator
    fuchsia-trailing-return
    fuchsia-virtual-inheritance
    google-build-explicit-make-pair
    google-build-namespaces
    google-default-arguments
    google-explicit-constructor
    google-global-names-in-headers
    google-objc-avoid-nsobject-new
    google-objc-avoid-throwing-exception
    google-objc-function-naming
    google-objc-global-variable-declaration
    google-readability-avoid-underscore-in-googletest-name
    google-readability-braces-around-statements
    google-readability-casting
    google-readability-function-size
    google-readability-namespace-comments
    google-readability-todo
    google-runtime-operator
    google-upgrade-googletest-case
    hicpp-avoid-c-arrays
    hicpp-avoid-goto
    hicpp-braces-around-statements
    hicpp-deprecated-headers
    hicpp-exception-baseclass
    hicpp-explicit-conversions
    hicpp-function-size
    hicpp-invalid-access-moved
    hicpp-member-init
    hicpp-move-const-arg
    hicpp-multiway-paths-covered
    hicpp-named-parameter
    hicpp-new-delete-operators
    hicpp-no-array-decay
    hicpp-no-assembler
    hicpp-no-malloc
    hicpp-noexcept-move
    hicpp-signed-bitwise
    hicpp-special-member-functions
    hicpp-static-assert
    hicpp-undelegated-constructor
    hicpp-uppercase-literal-suffix
    hicpp-use-auto
    hicpp-use-emplace
    hicpp-use-equals-default
    hicpp-use-equals-delete
    hicpp-use-noexcept
    hicpp-use-nullptr
    hicpp-use-override
    hicpp-vararg
    linuxkernel-must-check-errs
    misc-definitions-in-headers
    misc-misplaced-const
    misc-new-delete-overloads
    misc-no-recursion
    misc-non-copyable-objects
    misc-non-private-member-variables-in-classes
    misc-redundant-expression
    misc-static-assert
    misc-throw-by-value-catch-by-reference
    misc-unconventional-assign-operator
    misc-uniqueptr-reset-release
    misc-unused-alias-decls
    misc-unused-parameters
    misc-unused-using-decls
    modernize-avoid-bind
    modernize-avoid-c-arrays
    modernize-concat-nested-namespaces
    modernize-deprecated-headers
    modernize-deprecated-ios-base-aliases
    modernize-loop-convert
    modernize-make-shared
    modernize-make-unique
    modernize-pass-by-value
    modernize-raw-string-literal
    modernize-redundant-void-arg
    modernize-replace-auto-ptr
    modernize-replace-disallow-copy-and-assign-macro
    modernize-replace-random-shuffle
    modernize-return-braced-init-list
    modernize-shrink-to-fit
    modernize-unary-static-assert
    modernize-use-auto
    modernize-use-bool-literals
    modernize-use-default-member-init
    modernize-use-equals-default
    modernize-use-equals-delete
    modernize-use-nodiscard
    modernize-use-noexcept
    modernize-use-nullptr
    modernize-use-override
    modernize-use-transparent-functors
    modernize-use-uncaught-exceptions
    modernize-use-using
    mpi-buffer-deref
    mpi-type-mismatch
    objc-avoid-nserror-init
    objc-dealloc-in-category
    objc-forbidden-subclassing
    objc-missing-hash
    objc-nsinvocation-argument-lifetime
    objc-property-declaration
    objc-super-self
    openmp-exception-escape
    openmp-use-default-none
    performance-faster-string-find
    performance-for-range-copy
    performance-implicit-conversion-in-loop
    performance-inefficient-algorithm
    performance-inefficient-string-concatenation
    performance-inefficient-vector-operation
    performance-move-const-arg
    performance-move-constructor-init
    performance-no-automatic-move
    performance-no-int-to-ptr
    performance-noexcept-move-constructor
    performance-trivially-destructible
    performance-type-promotion-in-math-fn
    performance-unnecessary-copy-initialization
    performance-unnecessary-value-param
    portability-restrict-system-includes
    portability-simd-intrinsics
    readability-avoid-const-params-in-decls
    readability-braces-around-statements
    readability-const-return-type
    readability-container-size-empty
    readability-convert-member-functions-to-static
    readability-delete-null-pointer
    readability-deleted-default
    readability-else-after-return
    readability-function-cognitive-complexity
    readability-function-size
    readability-identifier-naming
    readability-implicit-bool-conversion
    readability-inconsistent-declaration-parameter-name
    readability-isolate-declaration
    readability-magic-numbers
    readability-make-member-function-const
    readability-misleading-indentation
    readability-misplaced-array-index
    readability-named-parameter
    readability-non-const-parameter
    readability-qualified-auto
    readability-redundant-access-specifiers
    readability-redundant-control-flow
    readability-redundant-declaration
    readability-redundant-function-ptr-dereference
    readability-redundant-member-init
    readability-redundant-preprocessor
    readability-redundant-smartptr-get
    readability-redundant-string-cstr
    readability-redundant-string-init
    readability-simplify-boolean-expr
    readability-simplify-subscript-expr
    readability-static-accessed-through-instance
    readability-static-definition-in-anonymous-namespace
    readability-string-compare
    readability-uniqueptr-delete-release
    readability-uppercase-literal-suffix
    readability-use-anyofallof
    zircon-temporary-objects

clang-tidy -p=/Users/josh/Universe /private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash.cc
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash.cc:4:14: error: parameter 'argc' is unused [misc-unused-parameters,-warnings-as-errors]
int main(int argc, char** argv) { return 0; }
             ^~~~
              /*argc*/
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash.cc:4:27: error: parameter 'argv' is unused [misc-unused-parameters,-warnings-as-errors]
int main(int argc, char** argv) { return 0; }
                          ^~~~
                           /*argv*/
clang-tidy -p=/Users/josh/Universe /private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:3:10: error: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [hicpp-deprecated-headers,modernize-deprecated-headers,-warnings-as-errors]
#include <stdio.h>
         ^~~~~~~~~
         <cstdio>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:4:10: error: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [hicpp-deprecated-headers,modernize-deprecated-headers,-warnings-as-errors]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:9:1: error: constructor does not initialize these fields: T [hicpp-member-init,-warnings-as-errors]
UniversalHash::UniversalHash(uint32_t seed) {
^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:12:22: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
  std::random_device rd;
                     ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/random:3499:28: note: default parameter was declared here
    explicit random_device(const string& __token = "/dev/urandom");
                           ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:14:48: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
  std::uniform_int_distribution<unsigned long> dis;
                                               ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:3032:39: note: default parameter was declared here
    explicit uniform_int_distribution(result_type __a = 0,
                                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:15:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int i = 0; i < 8; i++)
  ^   ~~~~~~~~~~~~~~~~~~~~~~~
      (auto & i : T)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:15:23: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int i = 0; i < 8; i++)
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:15:30: error: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements,-warnings-as-errors]
  for (int i = 0; i < 8; i++)
                             ^
                              {
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:16:25: error: 256 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int j = 0; j < 256; j++) T[i][j] = dis(gen);
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:16:34: error: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements,-warnings-as-errors]
    for (int j = 0; j < 256; j++) T[i][j] = dis(gen);
                                 ^
                                  {
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:26:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (size_t i = 0; i < key.length(); i++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (char temp : key)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:28:14: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
    res ^= T[temp & 7][(uint32_t)temp];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:28:21: error: 7 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    res ^= T[temp & 7][(uint32_t)temp];
                    ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:28:24: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
    res ^= T[temp & 7][(uint32_t)temp];
                       ^~~~~~~~~~
                       static_cast<uint32_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:28:34: error: 'signed char' to 'uint32_t' (aka 'unsigned int') conversion in array subscript; consider casting to 'unsigned char' first. [bugprone-signed-char-misuse,cert-str34-c,-warnings-as-errors]
    res ^= T[temp & 7][(uint32_t)temp];
                                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:44:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[0][(char)(key)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:44:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[0][(char)(key)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:45:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[1][(char)(key >> 8)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:45:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[1][(char)(key >> 8)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:45:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  res ^= T[1][(char)(key >> 8)];
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:45:29: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[1][(char)(key >> 8)];
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:46:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[2][(char)(key >> 16)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:46:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[2][(char)(key >> 16)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:46:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  res ^= T[2][(char)(key >> 16)];
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:46:29: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[2][(char)(key >> 16)];
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:47:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[3][(char)(key >> 24)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:47:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[3][(char)(key >> 24)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:47:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  res ^= T[3][(char)(key >> 24)];
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:47:29: error: 24 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[3][(char)(key >> 24)];
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:48:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[4][(char)(key >> 32)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:48:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[4][(char)(key >> 32)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:48:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  res ^= T[4][(char)(key >> 32)];
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:48:29: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[4][(char)(key >> 32)];
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:49:12: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[5][(char)(key >> 40)];
           ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:49:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[5][(char)(key >> 40)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:49:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[5][(char)(key >> 40)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:49:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  res ^= T[5][(char)(key >> 40)];
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:49:29: error: 40 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[5][(char)(key >> 40)];
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:50:12: error: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[6][(char)(key >> 48)];
           ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:50:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[6][(char)(key >> 48)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:50:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[6][(char)(key >> 48)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:50:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  res ^= T[6][(char)(key >> 48)];
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:50:29: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[6][(char)(key >> 48)];
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:51:12: error: 7 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[7][(char)(key >> 56)];
           ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:51:14: error: array subscript is of type 'char' [clang-diagnostic-char-subscripts,-warnings-as-errors]
  res ^= T[7][(char)(key >> 56)];
             ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:51:15: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  res ^= T[7][(char)(key >> 56)];
              ^~~~~~
              static_cast<char>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:51:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  res ^= T[7][(char)(key >> 56)];
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.cc:51:29: error: 56 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  res ^= T[7][(char)(key >> 56)];
                            ^
clang-tidy -p=/Users/josh/Universe /private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.h
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.h:7:9: error: declaration uses identifier '_MURMURHASH3_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp,-warnings-as-errors]
#define _MURMURHASH3_H_
        ^~~~~~~~~~~~~~~
        MURMURHASH3_H_
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.h:24:10: error: inclusion of deprecated C++ header 'stdint.h'; consider using 'cstdint' instead [hicpp-deprecated-headers,modernize-deprecated-headers,-warnings-as-errors]
#include <stdint.h>
         ^~~~~~~~~~
         <cstdint>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.h:25:10: error: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [hicpp-deprecated-headers,modernize-deprecated-headers,-warnings-as-errors]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
clang-tidy -p=/Users/josh/Universe /private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.h
examples/tabulationhash/UniversalHash.h:9:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t _seed, T[8][256];
  ^
examples/tabulationhash/UniversalHash.h:9:21: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t _seed, T[8][256];
                    ^
examples/tabulationhash/UniversalHash.h:9:24: error: 256 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t _seed, T[8][256];
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/tabulationhash/UniversalHash.h:12:3: error: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions,-warnings-as-errors]
  UniversalHash(uint32_t seed);
  ^
  explicit 
clang-tidy -p=/Users/josh/Universe /private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc
examples/hash_test.cc:21:14: error: narrowing conversion from 'int' to signed type 'std::basic_string<char>::value_type' (aka 'char') is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
    str[0] = rand() % 26 + 65;
             ^
examples/hash_test.cc:21:14: error: rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp,-warnings-as-errors]
examples/hash_test.cc:21:14: error: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead [clang-analyzer-security.insecureAPI.rand,-warnings-as-errors]
examples/hash_test.cc:21:14: note: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead
examples/hash_test.cc:21:14: error: function is not thread safe [concurrency-mt-unsafe,-warnings-as-errors]
    str[0] = rand() % 26 + 65;
             ^
examples/hash_test.cc:21:23: error: 26 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[0] = rand() % 26 + 65;
                      ^
examples/hash_test.cc:21:28: error: 65 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[0] = rand() % 26 + 65;
                           ^
examples/hash_test.cc:22:14: error: narrowing conversion from 'int' to signed type 'std::basic_string<char>::value_type' (aka 'char') is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
    str[1] = rand() % 26 + 65;
             ^
examples/hash_test.cc:22:14: error: rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp,-warnings-as-errors]
examples/hash_test.cc:22:14: error: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead [clang-analyzer-security.insecureAPI.rand,-warnings-as-errors]
examples/hash_test.cc:22:14: note: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead
examples/hash_test.cc:22:14: error: function is not thread safe [concurrency-mt-unsafe,-warnings-as-errors]
    str[1] = rand() % 26 + 65;
             ^
examples/hash_test.cc:22:23: error: 26 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[1] = rand() % 26 + 65;
                      ^
examples/hash_test.cc:22:28: error: 65 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[1] = rand() % 26 + 65;
                           ^
examples/hash_test.cc:23:14: error: narrowing conversion from 'int' to signed type 'std::basic_string<char>::value_type' (aka 'char') is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
    str[2] = rand() % 26 + 65;
             ^
examples/hash_test.cc:23:14: error: rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp,-warnings-as-errors]
examples/hash_test.cc:23:14: error: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead [clang-analyzer-security.insecureAPI.rand,-warnings-as-errors]
examples/hash_test.cc:23:14: note: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead
examples/hash_test.cc:23:14: error: function is not thread safe [concurrency-mt-unsafe,-warnings-as-errors]
    str[2] = rand() % 26 + 65;
             ^
examples/hash_test.cc:23:23: error: 26 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[2] = rand() % 26 + 65;
                      ^
examples/hash_test.cc:23:28: error: 65 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[2] = rand() % 26 + 65;
                           ^
examples/hash_test.cc:25:14: error: narrowing conversion from 'int' to signed type 'std::basic_string<char>::value_type' (aka 'char') is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
    str[3] = rand() % 10 + 48;
             ^
examples/hash_test.cc:25:14: error: rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp,-warnings-as-errors]
examples/hash_test.cc:25:14: error: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead [clang-analyzer-security.insecureAPI.rand,-warnings-as-errors]
examples/hash_test.cc:25:14: note: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead
examples/hash_test.cc:25:14: error: function is not thread safe [concurrency-mt-unsafe,-warnings-as-errors]
    str[3] = rand() % 10 + 48;
             ^
examples/hash_test.cc:25:23: error: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[3] = rand() % 10 + 48;
                      ^
examples/hash_test.cc:25:28: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[3] = rand() % 10 + 48;
                           ^
examples/hash_test.cc:26:14: error: narrowing conversion from 'int' to signed type 'std::basic_string<char>::value_type' (aka 'char') is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
    str[4] = rand() % 10 + 48;
             ^
examples/hash_test.cc:26:14: error: rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp,-warnings-as-errors]
examples/hash_test.cc:26:14: error: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead [clang-analyzer-security.insecureAPI.rand,-warnings-as-errors]
examples/hash_test.cc:26:14: note: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead
examples/hash_test.cc:26:14: error: function is not thread safe [concurrency-mt-unsafe,-warnings-as-errors]
    str[4] = rand() % 10 + 48;
             ^
examples/hash_test.cc:26:23: error: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[4] = rand() % 10 + 48;
                      ^
examples/hash_test.cc:26:28: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[4] = rand() % 10 + 48;
                           ^
examples/hash_test.cc:27:9: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[5] = rand() % 10 + 48;
        ^
examples/hash_test.cc:27:14: error: narrowing conversion from 'int' to signed type 'std::basic_string<char>::value_type' (aka 'char') is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
    str[5] = rand() % 10 + 48;
             ^
examples/hash_test.cc:27:14: error: rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp,-warnings-as-errors]
examples/hash_test.cc:27:14: error: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead [clang-analyzer-security.insecureAPI.rand,-warnings-as-errors]
examples/hash_test.cc:27:14: note: Function 'rand' is obsolete because it implements a poor random number generator.  Use 'arc4random' instead
examples/hash_test.cc:27:14: error: function is not thread safe [concurrency-mt-unsafe,-warnings-as-errors]
    str[5] = rand() % 10 + 48;
             ^
examples/hash_test.cc:27:23: error: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[5] = rand() % 10 + 48;
                      ^
examples/hash_test.cc:27:28: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    str[5] = rand() % 10 + 48;
                           ^
examples/hash_test.cc:32:10: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  static uint64_t int_keys[100000];
         ^
examples/hash_test.cc:32:28: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  static uint64_t int_keys[100000];
                           ^
examples/hash_test.cc:33:10: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  static std::string str_keys[100000];
         ^
examples/hash_test.cc:33:31: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  static std::string str_keys[100000];
                              ^
examples/hash_test.cc:39:5: error: random number generator seeded with a constant value will generate a predictable sequence of values [cert-msc32-c,cert-msc51-cpp,-warnings-as-errors]
    srand(seed);
    ^
examples/hash_test.cc:40:24: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
    std::random_device rd;
                       ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/random:3499:28: note: default parameter was declared here
    explicit random_device(const string& __token = "/dev/urandom");
                           ^
examples/hash_test.cc:42:55: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
    std::uniform_int_distribution<unsigned long long> dis;
                                                      ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:3032:39: note: default parameter was declared here
    explicit uniform_int_distribution(result_type __a = 0,
                                      ^
examples/hash_test.cc:44:25: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int i = 0; i < 100000; i++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:52:15: error: method 'convert_to_bitstring' can be made static [readability-convert-member-functions-to-static,-warnings-as-errors]
  std::string convert_to_bitstring(std::string str) {
              ^
  static 
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:52:48: error: the parameter 'str' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param,-warnings-as-errors]
  std::string convert_to_bitstring(std::string str) {
                                               ^
                                   const      &
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:53:17: error: redundant string initialization [readability-redundant-string-init,-warnings-as-errors]
    std::string bitstring = "";
                ^~~~~~~~~~~~~~
                bitstring
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:55:20: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
      bitstring += std::bitset<8>(_c).to_string();
                   ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:734:71: note: default parameter was declared here
    basic_string<char, char_traits<char>, allocator<char> > to_string(char __zero = '0',
                                                                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:55:32: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      bitstring += std::bitset<8>(_c).to_string();
                               ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:61:1: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
uint64_t HashTest::int_keys[100000];
^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:61:29: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
uint64_t HashTest::int_keys[100000];
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:62:1: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
std::string HashTest::str_keys[100000];
^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:62:32: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
std::string HashTest::str_keys[100000];
                               ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:63:45: error: use nullptr [modernize-use-nullptr,-warnings-as-errors]
UniversalHash HashTest::universal_hash(time(NULL));
                                            ^~~~
                                            nullptr
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:67:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t murmurhash_output[2];
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:72:23: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:74:24: error: narrowing conversion from 'uint64_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
                       (uint64_t)strlen(str_keys[i].c_str()), seed,
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:74:24: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
                       (uint64_t)strlen(str_keys[i].c_str()), seed,
                       ^~~~~~~~~~
                       static_cast<uint64_t>(               )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:76:24: error: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting,-warnings-as-errors]
    MurmurHash3_x86_32((void*)&(int_keys[i]), sizeof(uint64_t), seed,
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:89:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t tabulation_output[2];
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:94:23: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:108:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t murmurhash_output[2];
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:109:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t res[48][32] = {0};
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:109:16: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[48][32] = {0};
               ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:109:20: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[48][32] = {0};
                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:110:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & str_key : str_keys)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:110:23: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:112:24: error: narrowing conversion from 'uint64_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
                       (uint64_t)strlen(str_keys[i].c_str()), seed,
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:112:24: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
                       (uint64_t)strlen(str_keys[i].c_str()), seed,
                       ^~~~~~~~~~
                       static_cast<uint64_t>(               )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:114:25: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int j = 0; j < 48; j++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:115:19: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      std::bitset<48> str_key_flipped_bitarray(
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:115:23: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
      std::bitset<48> str_key_flipped_bitarray(
                      ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:688:25: note: default parameter was declared here
                        typename basic_string<_CharT,_Traits,_Allocator>::size_type __pos = 0,
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:118:11: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
          str_key_flipped_bitarray.flip(j).to_string();
          ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:734:71: note: default parameter was declared here
    basic_string<char, char_traits<char>, allocator<char> > to_string(char __zero = '0',
                                                                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:120:26: error: narrowing conversion from 'uint64_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,-warnings-as-errors]
                         (uint64_t)strlen(str_key_flipped.c_str()), seed,
                         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:120:26: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
                         (uint64_t)strlen(str_key_flipped.c_str()), seed,
                         ^~~~~~~~~~
                         static_cast<uint64_t>(                   )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:122:27: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      for (int k = 0; k < 32; k++) {
                          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:123:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((murmurhash_output[0] ^ murmurhash_output[1]) >> k) & 1;
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:123:23: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((murmurhash_output[0] ^ murmurhash_output[1]) >> k) & 1;
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:128:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int j = 0; j < 48; j++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & re : res)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:128:23: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int j = 0; j < 48; j++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:129:25: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int k = 0; k < 32; k++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:138:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t murmurhash_output[2];
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:139:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t res[64][32] = {0};
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:139:16: error: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[64][32] = {0};
               ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:139:20: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[64][32] = {0};
                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:140:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (unsigned long long & int_key : int_keys)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:140:23: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:141:24: error: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting,-warnings-as-errors]
    MurmurHash3_x86_32((void*)&(int_keys[i]), sizeof(uint64_t), seed,
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:143:25: error: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int j = 0; j < 64; j++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:144:34: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      uint64_t int_key_flipped = int_keys[i] ^ (1 << j);
                                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:144:49: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      uint64_t int_key_flipped = int_keys[i] ^ (1 << j);
                                                ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:145:26: error: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting,-warnings-as-errors]
      MurmurHash3_x86_32((void*)&(int_key_flipped), sizeof(uint64_t), seed,
                         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:147:27: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      for (int k = 0; k < 32; k++) {
                          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:148:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((murmurhash_output[0] ^ murmurhash_output[1]) >> k) & 1;
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:148:23: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((murmurhash_output[0] ^ murmurhash_output[1]) >> k) & 1;
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:153:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int j = 0; j < 64; j++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & re : res)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:153:23: error: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int j = 0; j < 64; j++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:154:25: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int k = 0; k < 32; k++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:163:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t tabulation_output[2];
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:164:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t res[48][32] = {0};
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:164:16: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[48][32] = {0};
               ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:164:20: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[48][32] = {0};
                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:165:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & str_key : str_keys)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:165:23: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:167:25: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int j = 0; j < 48; j++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:168:19: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      std::bitset<48> str_key_flipped_bitarray(
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:168:23: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
      std::bitset<48> str_key_flipped_bitarray(
                      ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:688:25: note: default parameter was declared here
                        typename basic_string<_CharT,_Traits,_Allocator>::size_type __pos = 0,
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:171:11: error: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls,-warnings-as-errors]
          str_key_flipped_bitarray.flip(j).to_string();
          ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:734:71: note: default parameter was declared here
    basic_string<char, char_traits<char>, allocator<char> > to_string(char __zero = '0',
                                                                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:173:27: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      for (int k = 0; k < 32; k++) {
                          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:174:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((tabulation_output[0] ^ tabulation_output[1]) >> k) & 1;
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:174:23: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((tabulation_output[0] ^ tabulation_output[1]) >> k) & 1;
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:179:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int j = 0; j < 48; j++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & re : res)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:179:23: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int j = 0; j < 48; j++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:180:25: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int k = 0; k < 32; k++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:189:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t tabulation_output[2];
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:190:3: error: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays,modernize-avoid-c-arrays,-warnings-as-errors]
  uint32_t res[64][32] = {0};
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:190:16: error: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[64][32] = {0};
               ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:190:20: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  uint32_t res[64][32] = {0};
                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:191:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      (unsigned long long int_key : int_keys)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:191:23: error: 100000 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int i = 0; i < 100000; i++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:193:25: error: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int j = 0; j < 64; j++) {
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:194:34: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      uint64_t int_key_flipped = int_keys[i] ^ (1 << j);
                                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:194:49: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      uint64_t int_key_flipped = int_keys[i] ^ (1 << j);
                                                ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:196:27: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      for (int k = 0; k < 32; k++) {
                          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:197:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((tabulation_output[0] ^ tabulation_output[1]) >> k) & 1;
                     ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:197:23: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
        res[j][k] += ((tabulation_output[0] ^ tabulation_output[1]) >> k) & 1;
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:202:3: error: use range-based for loop instead [modernize-loop-convert,-warnings-as-errors]
  for (int j = 0; j < 64; j++) {
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~
      (auto & re : res)
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:202:23: error: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  for (int j = 0; j < 64; j++) {
                      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/hash_test.cc:203:25: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    for (int k = 0; k < 32; k++) {
                        ^
clang-tidy -p=/Users/josh/Universe /private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc
examples/murmurhash/MurmurHash3.cc:36:11: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  return (x << r) | (x >> (32 - r));
          ^
examples/murmurhash/MurmurHash3.cc:36:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  return (x << r) | (x >> (32 - r));
                     ^
examples/murmurhash/MurmurHash3.cc:36:28: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  return (x << r) | (x >> (32 - r));
                           ^
examples/murmurhash/MurmurHash3.cc:40:11: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  return (x << r) | (x >> (64 - r));
          ^
examples/murmurhash/MurmurHash3.cc:40:22: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  return (x << r) | (x >> (64 - r));
                     ^
examples/murmurhash/MurmurHash3.cc:40:28: error: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  return (x << r) | (x >> (64 - r));
                           ^
examples/murmurhash/MurmurHash3.cc:62:8: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h ^= h >> 16;
       ^
examples/murmurhash/MurmurHash3.cc:62:13: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  h ^= h >> 16;
            ^
examples/murmurhash/MurmurHash3.cc:63:8: error: 0x85ebca6b is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  h *= 0x85ebca6b;
       ^
examples/murmurhash/MurmurHash3.cc:64:8: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h ^= h >> 13;
       ^
examples/murmurhash/MurmurHash3.cc:64:13: error: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  h ^= h >> 13;
            ^
examples/murmurhash/MurmurHash3.cc:65:8: error: 0xc2b2ae35 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  h *= 0xc2b2ae35;
       ^
examples/murmurhash/MurmurHash3.cc:66:8: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h ^= h >> 16;
       ^
examples/murmurhash/MurmurHash3.cc:66:13: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  h ^= h >> 16;
            ^
examples/murmurhash/MurmurHash3.cc:74:8: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  k ^= k >> 33;
       ^
examples/murmurhash/MurmurHash3.cc:74:13: error: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  k ^= k >> 33;
            ^
examples/murmurhash/MurmurHash3.cc:76:8: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  k ^= k >> 33;
       ^
examples/murmurhash/MurmurHash3.cc:76:13: error: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  k ^= k >> 33;
            ^
examples/murmurhash/MurmurHash3.cc:78:8: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  k ^= k >> 33;
       ^
examples/murmurhash/MurmurHash3.cc:78:13: error: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  k ^= k >> 33;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:86:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint8_t* data = (const uint8_t*)key;
        ^~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:86:25: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  const uint8_t* data = (const uint8_t*)key;
                        ^~~~~~~~~~~~~~~~
                        static_cast<const uint8_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:97:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint32_t* blocks = (const uint32_t*)(data + nblocks * 4);
        ^~~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:97:28: error: C-style casts are discouraged; use reinterpret_cast [google-readability-casting,-warnings-as-errors]
  const uint32_t* blocks = (const uint32_t*)(data + nblocks * 4);
                           ^~~~~~~~~~~~~~~~~
                           reinterpret_cast<const uint32_t*>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:99:26: error: implicit conversion 'int' -> bool [readability-implicit-bool-conversion,-warnings-as-errors]
  for (int i = -nblocks; i; i++) {
                         ^
                           != 0
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:108:15: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h1 = h1 * 5 + 0xe6546b64;
              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:108:19: error: 0xe6546b64 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h1 = h1 * 5 + 0xe6546b64;
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:114:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 4);
        ^~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:114:25: error: redundant cast to the same type [google-readability-casting,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 4);
                        ^~~~~~~~~~~~~~~~
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:118:11: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  switch (len & 3) {
          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:120:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[2] << 16;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:120:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[2] << 16;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:120:24: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= tail[2] << 16;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:122:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[1] << 8;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:122:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[1] << 8;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:122:24: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= tail[1] << 8;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:134:3: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h1 ^= len;
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:138:4: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  *(uint32_t*)out = h1;
   ^~~~~~~~~~~
   static_cast<uint32_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:145:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint8_t* data = (const uint8_t*)key;
        ^~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:145:25: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  const uint8_t* data = (const uint8_t*)key;
                        ^~~~~~~~~~~~~~~~
                        static_cast<const uint8_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:161:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint32_t* blocks = (const uint32_t*)(data + nblocks * 16);
        ^~~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:161:28: error: C-style casts are discouraged; use reinterpret_cast [google-readability-casting,-warnings-as-errors]
  const uint32_t* blocks = (const uint32_t*)(data + nblocks * 16);
                           ^~~~~~~~~~~~~~~~~
                           reinterpret_cast<const uint32_t*>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:161:63: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  const uint32_t* blocks = (const uint32_t*)(data + nblocks * 16);
                                                              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:163:26: error: implicit conversion 'int' -> bool [readability-implicit-bool-conversion,-warnings-as-errors]
  for (int i = -nblocks; i; i++) {
                         ^
                           != 0
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:176:15: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h1 = h1 * 5 + 0x561ccd1b;
              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:176:19: error: 0x561ccd1b is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h1 = h1 * 5 + 0x561ccd1b;
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:185:15: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h2 = h2 * 5 + 0x0bcaa747;
              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:185:19: error: 0x0bcaa747 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h2 = h2 * 5 + 0x0bcaa747;
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:194:15: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h3 = h3 * 5 + 0x96cd1c35;
              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:194:19: error: 0x96cd1c35 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h3 = h3 * 5 + 0x96cd1c35;
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:203:15: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h4 = h4 * 5 + 0x32ac3b17;
              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:203:19: error: 0x32ac3b17 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h4 = h4 * 5 + 0x32ac3b17;
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:209:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 16);
        ^~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:209:25: error: redundant cast to the same type [google-readability-casting,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 16);
                        ^~~~~~~~~~~~~~~~
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:209:59: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 16);
                                                          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:216:11: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  switch (len & 15) {
          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:216:17: error: 15 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  switch (len & 15) {
                ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:217:10: error: 15 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 15:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:218:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k4 ^= tail[14] << 16;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:218:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k4 ^= tail[14] << 16;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:218:18: error: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k4 ^= tail[14] << 16;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:218:25: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k4 ^= tail[14] << 16;
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:219:10: error: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 14:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:220:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k4 ^= tail[13] << 8;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:220:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k4 ^= tail[13] << 8;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:220:18: error: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k4 ^= tail[13] << 8;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:220:25: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k4 ^= tail[13] << 8;
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:221:10: error: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 13:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:222:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k4 ^= tail[12] << 0;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:222:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k4 ^= tail[12] << 0;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:222:18: error: 12 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k4 ^= tail[12] << 0;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:228:10: error: 12 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 12:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:229:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[11] << 24;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:229:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[11] << 24;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:229:18: error: 11 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k3 ^= tail[11] << 24;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:229:25: error: 24 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k3 ^= tail[11] << 24;
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:230:10: error: 11 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 11:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:231:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[10] << 16;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:231:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[10] << 16;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:231:18: error: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k3 ^= tail[10] << 16;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:231:25: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k3 ^= tail[10] << 16;
                        ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:232:10: error: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 10:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:233:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[9] << 8;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:233:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[9] << 8;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:233:18: error: 9 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k3 ^= tail[9] << 8;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:233:24: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k3 ^= tail[9] << 8;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:234:10: error: 9 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 9:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:235:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[8] << 0;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:235:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k3 ^= tail[8] << 0;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:235:18: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k3 ^= tail[8] << 0;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:241:10: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 8:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:242:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[7] << 24;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:242:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[7] << 24;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:242:18: error: 7 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= tail[7] << 24;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:242:24: error: 24 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= tail[7] << 24;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:243:10: error: 7 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 7:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:244:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[6] << 16;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:244:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[6] << 16;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:244:18: error: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= tail[6] << 16;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:244:24: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= tail[6] << 16;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:245:10: error: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 6:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:246:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[5] << 8;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:246:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[5] << 8;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:246:18: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= tail[5] << 8;
                 ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:246:24: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= tail[5] << 8;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:247:10: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 5:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:248:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[4] << 0;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:248:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= tail[4] << 0;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:255:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[3] << 24;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:255:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[3] << 24;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:255:24: error: 24 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= tail[3] << 24;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:257:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[2] << 16;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:257:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[2] << 16;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:257:24: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= tail[2] << 16;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:259:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[1] << 8;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:259:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[1] << 8;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:259:24: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= tail[1] << 8;
                       ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:261:7: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[0] << 0;
      ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:261:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= tail[0] << 0;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:271:3: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h1 ^= len;
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:272:3: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h2 ^= len;
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:273:3: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h3 ^= len;
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:274:3: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h4 ^= len;
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:295:4: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  ((uint32_t*)out)[0] = h1;
   ^~~~~~~~~~~
   static_cast<uint32_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:296:4: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  ((uint32_t*)out)[1] = h2;
   ^~~~~~~~~~~
   static_cast<uint32_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:297:4: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  ((uint32_t*)out)[2] = h3;
   ^~~~~~~~~~~
   static_cast<uint32_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:298:4: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  ((uint32_t*)out)[3] = h4;
   ^~~~~~~~~~~
   static_cast<uint32_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:305:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint8_t* data = (const uint8_t*)key;
        ^~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:305:25: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  const uint8_t* data = (const uint8_t*)key;
                        ^~~~~~~~~~~~~~~~
                        static_cast<const uint8_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:317:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint64_t* blocks = (const uint64_t*)(data);
        ^~~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:317:28: error: C-style casts are discouraged; use reinterpret_cast [google-readability-casting,-warnings-as-errors]
  const uint64_t* blocks = (const uint64_t*)(data);
                           ^~~~~~~~~~~~~~~~~
                           reinterpret_cast<const uint64_t*>
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:330:15: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h1 = h1 * 5 + 0x52dce729;
              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:330:19: error: 0x52dce729 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h1 = h1 * 5 + 0x52dce729;
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:339:15: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h2 = h2 * 5 + 0x38495ab5;
              ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:339:19: error: 0x38495ab5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    h2 = h2 * 5 + 0x38495ab5;
                  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:345:9: error: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 16);
        ^~~~~~~
        auto
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:345:25: error: redundant cast to the same type [google-readability-casting,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 16);
                        ^~~~~~~~~~~~~~~~
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:345:59: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  const uint8_t* tail = (const uint8_t*)(data + nblocks * 16);
                                                          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:350:11: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  switch (len & 15) {
          ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:350:17: error: 15 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
  switch (len & 15) {
                ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:351:10: error: 15 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 15:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:352:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[14]) << 48;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:352:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[14]) << 48;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:352:29: error: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[14]) << 48;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:352:37: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[14]) << 48;
                                    ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:353:10: error: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 14:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:354:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[13]) << 40;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:354:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[13]) << 40;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:354:29: error: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[13]) << 40;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:354:37: error: 40 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[13]) << 40;
                                    ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:355:10: error: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 13:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:356:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[12]) << 32;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:356:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[12]) << 32;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:356:29: error: 12 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[12]) << 32;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:356:37: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[12]) << 32;
                                    ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:357:10: error: 12 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 12:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:358:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[11]) << 24;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:358:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[11]) << 24;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:358:29: error: 11 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[11]) << 24;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:358:37: error: 24 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[11]) << 24;
                                    ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:359:10: error: 11 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 11:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:360:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[10]) << 16;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:360:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[10]) << 16;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:360:29: error: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[10]) << 16;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:360:37: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[10]) << 16;
                                    ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:361:10: error: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 10:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:362:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[9]) << 8;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:362:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[9]) << 8;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:362:29: error: 9 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[9]) << 8;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:362:36: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[9]) << 8;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:363:10: error: 9 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 9:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:364:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[8]) << 0;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:364:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[8]) << 0;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:364:29: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k2 ^= ((uint64_t)tail[8]) << 0;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:370:10: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 8:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:371:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[7]) << 56;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:371:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[7]) << 56;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:371:29: error: 7 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[7]) << 56;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:371:36: error: 56 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[7]) << 56;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:372:10: error: 7 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 7:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:373:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[6]) << 48;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:373:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[6]) << 48;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:373:29: error: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[6]) << 48;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:373:36: error: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[6]) << 48;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:374:10: error: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 6:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:375:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[5]) << 40;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:375:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[5]) << 40;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:375:29: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[5]) << 40;
                            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:375:36: error: 40 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[5]) << 40;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:376:10: error: 5 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
    case 5:
         ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:377:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[4]) << 32;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:377:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[4]) << 32;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:377:36: error: 32 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[4]) << 32;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:379:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[3]) << 24;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:379:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[3]) << 24;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:379:36: error: 24 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[3]) << 24;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:381:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[2]) << 16;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:381:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[2]) << 16;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:381:36: error: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[2]) << 16;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:383:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[1]) << 8;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:383:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[1]) << 8;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:383:36: error: 8 is a magic number; consider replacing it with a named constant [readability-magic-numbers,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[1]) << 8;
                                   ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:385:13: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[0]) << 0;
            ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:385:14: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
      k1 ^= ((uint64_t)tail[0]) << 0;
             ^~~~~~~~~~
             static_cast<uint64_t>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:395:3: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h1 ^= len;
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:396:3: error: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise,-warnings-as-errors]
  h2 ^= len;
  ^
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:407:4: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  ((uint64_t*)out)[0] = h1;
   ^~~~~~~~~~~
   static_cast<uint64_t*>( )
/private/var/tmp/_bazel_josh/c80450f55b1e027a7021878aaa01d085/execroot/__main__/examples/murmurhash/MurmurHash3.cc:408:4: error: C-style casts are discouraged; use static_cast [google-readability-casting,-warnings-as-errors]
  ((uint64_t*)out)[1] = h2;
   ^~~~~~~~~~~
   static_cast<uint64_t*>( )
