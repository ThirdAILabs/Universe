name: Run Python BOLT Benchmarks 

# Kills old jobs from the same pr if we push a new commit
# See https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# # Controls when the workflow will run
# on:
#   schedule:
#       # Sets the workflow to run at 1300 UTC every Saturday
#       # Ref: https://jasonet.co/posts/scheduled-actions/
#       - cron: "0 13 * * 6" 
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  benchmarks:
    runs-on: self-hosted
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
      # the rest of the steps

      - name: Open Permissions
        run: sudo chmod -R 777 ${{ github.workspace }}

      - uses: actions/checkout@v2
        with:           
          submodules: 'recursive'
          token: ${{ secrets.CICD_REPO_ACCESS_TOKEN }}

      - name: Build docker
        run: bin/docker-benchmarking-build.sh

      - name: Build Package and Run Benchmark
        env:
          USERNAME: ${{secrets.MLFLOW_TRACKING_USERNAME}}
          PASSWORD: ${{secrets.MLFLOW_TRACKING_PASSWORD}}
        run: bin/docker-benchmarking-run.sh "export MLFLOW_TRACKING_USERNAME=$USERNAME && export MLFLOW_TRACKING_PASSWORD=$PASSWORD && python3 /Universe/bin/benchmark_bolt.py -l /Universe/benchmarks/bolt_configs/mnist_dense.txt"
        # run: bin/docker-benchmarking-run.sh "export MLFLOW_TRACKING_USERNAME=$USERNAME && export MLFLOW_TRACKING_PASSWORD=$PASSWORD && python3 /Universe/bin/benchmark_bolt.py -l /Universe/benchmarks/bolt_configs/amazon_polarity.txt /Universe/benchmarks/bolt_configs/amzn670k.txt /Universe/benchmarks/bolt_configs/criteo_dlrm.txt"

      - name: Delete Container
        run: sudo docker system prune -a -f

      - name: Notify slack success  # Ref: https://github.com/marketplace/actions/slack-notify-build
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: weekly_benchmarks
          status: SUCCESS
          color: good

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: weekly_benchmarks
          status: FAILED
          color: danger
