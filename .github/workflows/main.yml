# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
    # the rest of the steps
    - uses: actions/checkout@v2

    # Caches and restores the bazel build directory.
    - name: Cache bazel build results
      uses: actions/cache@v2.0.0
      env:
        cache-name: bazel-cache
      with:
        path: ~/.cache/bazel
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.ref }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-master
    - name: download-openmpi
      run: |
        sudo apt install gcc g++
        sudo apt install -y mpich libmpich-dev
        sudo apt install -y openmpi-bin openmpi-doc libopenmpi-dev
    - name: Build mpi-example
      run: bazel build --config=mpi_config //mpi-example:all
    - name: Build rest of the code
      run: |
      bazel build //tutorial:all
      bazel build //tests:all


    - name: Test the code
      run: bazel test --test_output=errors --test_tag_filters=-integration-test 
