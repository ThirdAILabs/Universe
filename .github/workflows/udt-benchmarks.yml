name: Run UDT Benchmarks 

# Kills old jobs from the same pr if we push a new commit
# See https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Controls when the workflow will run
on:
  schedule:
      # Sets the workflow to run at 1600 UTC on Sundays and Wednesdays
      # Ref: https://jasonet.co/posts/scheduled-actions/
      - cron: "0 16 * * 0,3" 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  benchmarks:
    runs-on: self-hosted
    timeout-minutes: 1200  # Github Actions defaults to a timeout of 360 minutes
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
      # the rest of the steps

      - name: Open Permissions
        run: sudo chmod -R 777 ${{ github.workspace }}
      
      - uses: AutoModality/action-clean@v1
      - uses: actions/checkout@v2
        with:           
          submodules: 'recursive'
          token: ${{ secrets.CICD_REPO_ACCESS_TOKEN }}

      - name: Build docker
        run: bin/docker-benchmarking-build.sh

      - name: Build Package and Run Benchmark
        env:
          USERNAME: ${{secrets.MLFLOW_TRACKING_USERNAME}}
          PASSWORD: ${{secrets.MLFLOW_TRACKING_PASSWORD}}
          UDT_BENCHMARK_SLACK_WEBHOOK: ${{secrets.UDT_BENCHMARK_SLACK_WEBHOOK}}
        run: >- 
          bin/docker-benchmarking-run.sh "export MLFLOW_TRACKING_USERNAME=$USERNAME && export MLFLOW_TRACKING_PASSWORD=$PASSWORD && 
          python3 -m Universe.benchmarks-v2.main --runner udt query_reformulation temporal --run_name udt_benchmark --official_benchmark --mlflow_uri http://ec2-184-73-150-35.compute-1.amazonaws.com --slack_webhook $UDT_BENCHMARK_SLACK_WEBHOOK &&
          python3 -m Universe.benchmarks-v2.slack_benchmark_results --runner udt query_reformulation temporal --official_benchmark --num_runs 5 --mlflow_uri http://ec2-184-73-150-35.compute-1.amazonaws.com --slack_webhook $UDT_BENCHMARK_SLACK_WEBHOOK"
      - name: Delete Container
        run: sudo docker system prune -a -f

      # - name: Notify slack fail  # Ref: https://github.com/marketplace/actions/slack-notify-build
      #   if: failure()
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #   uses: voxmedia/github-action-slack-notify-build@v1
      #   with:
      #     channel_id: daily_udt_benchmarks
      #     status: FAILED
      #     color: danger