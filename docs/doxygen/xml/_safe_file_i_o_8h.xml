<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_safe_file_i_o_8h" kind="file" language="C++">
    <compoundname>SafeFileIO.h</compoundname>
    <includes local="no">fstream</includes>
    <includedby refid="_fully_connected_8h" local="no">bolt/src/graph/nodes/FullyConnected.h</includedby>
    <includedby refid="_data_loader_8h" local="no">dataset/src/DataLoader.h</includedby>
    <includedby refid="_in_memory_dataset_8h" local="yes">dataset/src/InMemoryDataset.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>dataset/src/utils/SafeFileIO.h</label>
        <link refid="_safe_file_i_o_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fstream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>bolt/src/auto_classifiers/AutoClassifierBase.h</label>
        <link refid="_auto_classifier_base_8h_source"/>
      </node>
      <node id="4">
        <label>bolt/src/auto_classifiers/sequential_classifier/SequentialClassifier.h</label>
        <link refid="_sequential_classifier_8h_source"/>
      </node>
      <node id="11">
        <label>bolt/src/auto_classifiers/sequential_classifier/SequentialUtils.h</label>
        <link refid="_sequential_utils_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>bolt/src/graph/CommonNetworks.h</label>
        <link refid="_common_networks_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>bolt/src/graph/DatasetContext.h</label>
        <link refid="_dataset_context_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>bolt/src/graph/DistributedTrainingWrapper.h</label>
        <link refid="_distributed_training_wrapper_8h_source"/>
      </node>
      <node id="20">
        <label>bolt/src/graph/ExecutionConfig.h</label>
        <link refid="_execution_config_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>bolt/src/graph/Graph.h</label>
        <link refid="_graph_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>bolt/src/graph/GraphPropertyChecks.h</label>
        <link refid="_graph_property_checks_8h_source"/>
      </node>
      <node id="17">
        <label>bolt/src/graph/callbacks/EarlyStopCheckpoint.h</label>
        <link refid="_early_stop_checkpoint_8h_source"/>
      </node>
      <node id="18">
        <label>bolt/src/graph/callbacks/LearningRateScheduler.h</label>
        <link refid="_learning_rate_scheduler_8h_source"/>
      </node>
      <node id="8">
        <label>bolt/src/graph/nodes/DlrmAttention.h</label>
        <link refid="_dlrm_attention_8h_source"/>
      </node>
      <node id="2">
        <label>bolt/src/graph/nodes/FullyConnected.h</label>
        <link refid="_fully_connected_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>bolt/src/graph/nodes/Switch.h</label>
        <link refid="_switch_8h_source"/>
      </node>
      <node id="19">
        <label>bolt/src/root_cause_analysis/RootCauseAnalysis.h</label>
        <link refid="_root_cause_analysis_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>dataset/src/DataLoader.h</label>
        <link refid="_data_loader_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dataset/src/DatasetLoaders.h</label>
        <link refid="_dataset_loaders_8h_source"/>
      </node>
      <node id="14">
        <label>dataset/src/Datasets.h</label>
        <link refid="_datasets_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>dataset/src/InMemoryDataset.h</label>
        <link refid="_in_memory_dataset_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>dataset/src/NumpyDataset.h</label>
        <link refid="_numpy_dataset_8h_source"/>
      </node>
      <node id="22">
        <label>dataset/src/ShuffleBatchBuffer.h</label>
        <link refid="_shuffle_batch_buffer_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>dataset/src/StreamingDataset.h</label>
        <link refid="_streaming_dataset_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>dataset/src/StreamingGenericDatasetLoader.h</label>
        <link refid="_streaming_generic_dataset_loader_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>dataset/src/core/BlockBatchProcessor.h</label>
        <link refid="_block_batch_processor_8h_source"/>
      </node>
      <node id="1">
        <label>dataset/src/utils/SafeFileIO.h</label>
        <link refid="_safe_file_i_o_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>search/src/DocSearch.h</label>
        <link refid="_doc_search_8h_source"/>
      </node>
      <node id="26">
        <label>search/src/MaxFlash.h</label>
        <link refid="_max_flash_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>search/src/MaxFlashArray.h</label>
        <link refid="_max_flash_array_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classthirdai_1_1dataset_1_1_safe_file_i_o" prot="public">thirdai::dataset::SafeFileIO</innerclass>
    <innernamespace refid="namespacethirdai">thirdai</innernamespace>
    <innernamespace refid="namespacethirdai_1_1dataset">thirdai::dataset</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">thirdai::dataset<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classthirdai_1_1dataset_1_1_safe_file_i_o" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classthirdai_1_1dataset_1_1_safe_file_i_o" kindref="compound">SafeFileIO</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ifstream<sp/>ifstream(</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ios_base::openmode<sp/>mode<sp/>=<sp/>std::ios_base::in)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>file(filename,<sp/>mode);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.bad()<sp/>||<sp/>file.fail()<sp/>||<sp/>!file.good()<sp/>||<sp/>!file.is_open())<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>input<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ofstream<sp/>ofstream(</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ios_base::openmode<sp/>mode<sp/>=<sp/>std::ios_base::out)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>file(filename,<sp/>mode);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.bad()<sp/>||<sp/>file.fail()<sp/>||<sp/>!file.good()<sp/>||<sp/>!file.is_open())<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>output<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::fstream<sp/>fstream(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ios_base::openmode<sp/>mode<sp/>=<sp/>std::ios_base::in<sp/>|<sp/>std::ios_base::out)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>file(filename,<sp/>mode);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.bad()<sp/>||<sp/>file.fail()<sp/>||<sp/>!file.good()<sp/>||<sp/>!file.is_open())<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>thirdai::dataset</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dataset/src/utils/SafeFileIO.h"/>
  </compounddef>
</doxygen>
