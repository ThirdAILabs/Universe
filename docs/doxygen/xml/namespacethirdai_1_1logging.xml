<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacethirdai_1_1logging" kind="namespace" language="C++">
    <compoundname>thirdai::logging</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_logging_8h_1a5be0f3051dd41bacb32e10f7ac61bcb7" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto thirdai::logging::NAME</definition>
        <argsstring></argsstring>
        <name>NAME</name>
        <qualifiedname>thirdai::logging::NAME</qualifiedname>
        <initializer>= &quot;thirdai&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="11" column="16" bodyfile="utils/Logging.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_logging_8h_1ab951eb790b2bda3a77a75075de32a48a" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto thirdai::logging::DEFAULT_LOG_TO_STDERR</definition>
        <argsstring></argsstring>
        <name>DEFAULT_LOG_TO_STDERR</name>
        <qualifiedname>thirdai::logging::DEFAULT_LOG_TO_STDERR</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="12" column="16" bodyfile="utils/Logging.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_logging_8h_1a78cfd3e6516ed224ad0b67dfa8961a5e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto thirdai::logging::DEFAULT_LOG_PATH</definition>
        <argsstring></argsstring>
        <name>DEFAULT_LOG_PATH</name>
        <qualifiedname>thirdai::logging::DEFAULT_LOG_PATH</qualifiedname>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="13" column="16" bodyfile="utils/Logging.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_logging_8h_1a3763ee1c0bb3defbc45a6cbe25cbe5e1" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto thirdai::logging::DEFAULT_LOG_LEVEL</definition>
        <argsstring></argsstring>
        <name>DEFAULT_LOG_LEVEL</name>
        <qualifiedname>thirdai::logging::DEFAULT_LOG_LEVEL</qualifiedname>
        <initializer>= &quot;info&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="14" column="16" bodyfile="utils/Logging.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_logging_8h_1afe8bfda85855498dcde8aefcd2c01021" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto thirdai::logging::DEFAULT_LOG_PATTERN</definition>
        <argsstring></argsstring>
        <name>DEFAULT_LOG_PATTERN</name>
        <qualifiedname>thirdai::logging::DEFAULT_LOG_PATTERN</qualifiedname>
        <initializer>= &quot;[%Y-%m-%dT%T] [%l] | %v&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="15" column="16" bodyfile="utils/Logging.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_logging_8h_1ae6e55d76bad8c62e24b2e0561bb711b3" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto thirdai::logging::DEFAULT_LOG_FLUSH_INTERVAL</definition>
        <argsstring></argsstring>
        <name>DEFAULT_LOG_FLUSH_INTERVAL</name>
        <qualifiedname>thirdai::logging::DEFAULT_LOG_FLUSH_INTERVAL</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="16" column="16" bodyfile="utils/Logging.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_logging_8cc_1ae5a7bbba3959bac89623b550f18e53e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::logging::setup</definition>
        <argsstring>(bool log_to_stderr, const std::string &amp;path, const std::string &amp;level, const std::string &amp;pattern, uint32_t flush_interval)</argsstring>
        <name>setup</name>
        <qualifiedname>thirdai::logging::setup</qualifiedname>
        <param>
          <type>bool</type>
          <declname>log_to_stderr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flush_interval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.cc" line="13" column="6" bodyfile="utils/Logging.cc" bodystart="13" bodyend="79" declfile="utils/Logging.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_logging_8h_1a008cbdbb88f9b526e21becf2644952bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::logging::trace</definition>
        <argsstring>(Args... args)</argsstring>
        <name>trace</name>
        <qualifiedname>thirdai::logging::trace</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="46" column="21" bodyfile="utils/Logging.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="_logging_8h_1a09d374f6247b101313959c0b60e75cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::logging::debug</definition>
        <argsstring>(Args... args)</argsstring>
        <name>debug</name>
        <qualifiedname>thirdai::logging::debug</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="47" column="21" bodyfile="utils/Logging.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_logging_8h_1a72e22aa69cf63501e8596f528e266b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::logging::info</definition>
        <argsstring>(Args... args)</argsstring>
        <name>info</name>
        <qualifiedname>thirdai::logging::info</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="48" column="21" bodyfile="utils/Logging.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_logging_8h_1a95b4a262d27c3a1b1ed2e00a0424418f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::logging::warn</definition>
        <argsstring>(Args... args)</argsstring>
        <name>warn</name>
        <qualifiedname>thirdai::logging::warn</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="49" column="21" bodyfile="utils/Logging.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="_logging_8h_1a5145cf71d801fc47023a4287f56c0e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::logging::error</definition>
        <argsstring>(Args... args)</argsstring>
        <name>error</name>
        <qualifiedname>thirdai::logging::error</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="50" column="21" bodyfile="utils/Logging.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="_logging_8h_1a6d13271eecdbe1ea501466c9d7dd94b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::logging::critical</definition>
        <argsstring>(Args... args)</argsstring>
        <name>critical</name>
        <qualifiedname>thirdai::logging::critical</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="51" column="21" bodyfile="utils/Logging.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_logging_8h_1aeea9b2cfbe9141f61e2ca7205c7410ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::logging::flush</definition>
        <argsstring>(Args... args)</argsstring>
        <name>flush</name>
        <qualifiedname>thirdai::logging::flush</qualifiedname>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utils/Logging.h" line="53" column="21" bodyfile="utils/Logging.h" bodystart="53" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="utils/Logging.cc" line="11" column="1"/>
  </compounddef>
</doxygen>
