<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classthirdai_1_1compression_1_1_count_sketch" kind="class" language="C++" prot="public" final="yes">
    <compoundname>thirdai::compression::CountSketch</compoundname>
    <basecompoundref refid="classthirdai_1_1compression_1_1_compressed_vector" prot="public" virt="non-virtual">thirdai::compression::CompressedVector&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classthirdai_1_1compression_1_1_count_sketch_1a01cc2e7b32884cf71d7a0446ec715ba2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; T &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;T&gt; &gt; thirdai::compression::CountSketch&lt; T &gt;::_count_sketches</definition>
        <argsstring></argsstring>
        <name>_count_sketches</name>
        <qualifiedname>thirdai::compression::CountSketch::_count_sketches</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="72" column="15" bodyfile="compression/src/CountSketch.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthirdai_1_1compression_1_1_count_sketch_1a97feac7a328f2b70efe164a038c5106b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classthirdai_1_1hashing_1_1_universal_hash" kindref="compound">UniversalHash</ref> &gt;</type>
        <definition>std::vector&lt;UniversalHash&gt; thirdai::compression::CountSketch&lt; T &gt;::_hasher_index</definition>
        <argsstring></argsstring>
        <name>_hasher_index</name>
        <qualifiedname>thirdai::compression::CountSketch::_hasher_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="73" column="15" bodyfile="compression/src/CountSketch.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthirdai_1_1compression_1_1_count_sketch_1aed83b57e6b57b7f089c89b358850bd74" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classthirdai_1_1hashing_1_1_universal_hash" kindref="compound">UniversalHash</ref> &gt;</type>
        <definition>std::vector&lt;UniversalHash&gt; thirdai::compression::CountSketch&lt; T &gt;::_hasher_sign</definition>
        <argsstring></argsstring>
        <name>_hasher_sign</name>
        <qualifiedname>thirdai::compression::CountSketch::_hasher_sign</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="74" column="15" bodyfile="compression/src/CountSketch.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthirdai_1_1compression_1_1_count_sketch_1a90e2283d9178956d8a9509a2161b5188" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t thirdai::compression::CountSketch&lt; T &gt;::_uncompressed_size</definition>
        <argsstring></argsstring>
        <name>_uncompressed_size</name>
        <qualifiedname>thirdai::compression::CountSketch::_uncompressed_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="75" column="12" bodyfile="compression/src/CountSketch.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a232730c9d5df839f8759ddc74a18392d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>thirdai::compression::CountSketch&lt; T &gt;::CountSketch</definition>
        <argsstring>()</argsstring>
        <name>CountSketch</name>
        <qualifiedname>thirdai::compression::CountSketch::CountSketch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="30" column="3" bodyfile="compression/src/CountSketch.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1aff7607ffd99c99ba1774d5f05cc52532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>thirdai::compression::CountSketch&lt; T &gt;::CountSketch</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;vector_to_compress, float compression_density, uint32_t num_sketches, const std::vector&lt; uint32_t &gt; &amp;seed_for_hashing_indices, const std::vector&lt; uint32_t &gt; &amp;seed_for_sign)</argsstring>
        <name>CountSketch</name>
        <qualifiedname>thirdai::compression::CountSketch::CountSketch</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vector_to_compress</declname>
        </param>
        <param>
          <type>float</type>
          <declname>compression_density</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num_sketches</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>seed_for_hashing_indices</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>seed_for_sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="33" column="3" bodyfile="compression/src/CountSketch.cc" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1acf897e3bdab349afcfcd57547f8e78c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>thirdai::compression::CountSketch&lt; T &gt;::CountSketch</definition>
        <argsstring>(const T *values_to_compress, uint32_t size, float compression_density, uint32_t num_sketches, const std::vector&lt; uint32_t &gt; &amp;seed_for_hashing_indices, const std::vector&lt; uint32_t &gt; &amp;seed_for_sign)</argsstring>
        <name>CountSketch</name>
        <qualifiedname>thirdai::compression::CountSketch::CountSketch</qualifiedname>
        <param>
          <type>const T *</type>
          <declname>values_to_compress</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>compression_density</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num_sketches</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>seed_for_hashing_indices</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>seed_for_sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="38" column="3" bodyfile="compression/src/CountSketch.cc" bodystart="30" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1ad8eeb218bd8a99382d816d1e3f2affe7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>thirdai::compression::CountSketch&lt; T &gt;::CountSketch</definition>
        <argsstring>(const char *serialized_data)</argsstring>
        <name>CountSketch</name>
        <qualifiedname>thirdai::compression::CountSketch::CountSketch</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>serialized_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="43" column="12" bodyfile="compression/src/CountSketch.cc" bodystart="222" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a5258146adf63c333036aa322fafd1861" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>T</type>
        <definition>T thirdai::compression::CountSketch&lt; T &gt;::get</definition>
        <argsstring>(uint32_t index) const final</argsstring>
        <name>get</name>
        <qualifiedname>thirdai::compression::CountSketch::get</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a6da0f4103a7b8cccc3c714a023b55ec1">get</reimplements>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="45" column="5" bodyfile="compression/src/CountSketch.cc" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1afb136639e67c61f03c6ea0503510babe" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void thirdai::compression::CountSketch&lt; T &gt;::set</definition>
        <argsstring>(uint32_t index, T value) final</argsstring>
        <name>set</name>
        <qualifiedname>thirdai::compression::CountSketch::set</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a3af71cf93ecff56348e32d72c26991d8">set</reimplements>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="47" column="8" bodyfile="compression/src/CountSketch.cc" bodystart="86" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a740d06ab731dd3af3fcffd265471a8e8" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void thirdai::compression::CountSketch&lt; T &gt;::clear</definition>
        <argsstring>() final</argsstring>
        <name>clear</name>
        <qualifiedname>thirdai::compression::CountSketch::clear</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1aa6e9cec24fc7e0c610429ac6a6bef9db">clear</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="49" column="8" bodyfile="compression/src/CountSketch.cc" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1af85f78ef33519b04657104760ead2295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::compression::CountSketch&lt; T &gt;::extend</definition>
        <argsstring>(const CountSketch&lt; T &gt; &amp;other_sketch)</argsstring>
        <name>extend</name>
        <qualifiedname>thirdai::compression::CountSketch::extend</qualifiedname>
        <param>
          <type>const <ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &amp;</type>
          <declname>other_sketch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="51" column="8" bodyfile="compression/src/CountSketch.cc" bodystart="103" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a1d898594722a097f4ef2ccbe87a3793a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::compression::CountSketch&lt; T &gt;::add</definition>
        <argsstring>(const CountSketch&lt; T &gt; &amp;other_sketch)</argsstring>
        <name>add</name>
        <qualifiedname>thirdai::compression::CountSketch::add</qualifiedname>
        <param>
          <type>const <ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &amp;</type>
          <declname>other_sketch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="53" column="8" bodyfile="compression/src/CountSketch.cc" bodystart="125" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a42b60c3f62908e9ecacbe540e6d14626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t thirdai::compression::CountSketch&lt; T &gt;::numSketches</definition>
        <argsstring>() const</argsstring>
        <name>numSketches</name>
        <qualifiedname>thirdai::compression::CountSketch::numSketches</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="55" column="12" bodyfile="compression/src/CountSketch.cc" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1af0ee30933b83028ff5bdaea660df167c" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t thirdai::compression::CountSketch&lt; T &gt;::size</definition>
        <argsstring>() const final</argsstring>
        <name>size</name>
        <qualifiedname>thirdai::compression::CountSketch::size</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a78c35dba3c7ed7cd801a01c7c83358ab">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="57" column="12" bodyfile="compression/src/CountSketch.cc" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a72d5483e8f1cb2826d121a280d49fc2a" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>CompressionScheme</type>
        <definition>CompressionScheme thirdai::compression::CountSketch&lt; T &gt;::type</definition>
        <argsstring>() const final</argsstring>
        <name>type</name>
        <qualifiedname>thirdai::compression::CountSketch::type</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a6d2b109a3fa11c059faa1d244ce11e5f">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="59" column="21" bodyfile="compression/src/CountSketch.cc" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1ab13770851e79a70f65a9a76fea5c56fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; T &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; T &gt; &gt; thirdai::compression::CountSketch&lt; T &gt;::sketches</definition>
        <argsstring>() const</argsstring>
        <name>sketches</name>
        <qualifiedname>thirdai::compression::CountSketch::sketches</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="61" column="15" bodyfile="compression/src/CountSketch.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1acde0ec16d3a8e8d15379b5550547eb22" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t thirdai::compression::CountSketch&lt; T &gt;::uncompressedSize</definition>
        <argsstring>() const final</argsstring>
        <name>uncompressedSize</name>
        <qualifiedname>thirdai::compression::CountSketch::uncompressedSize</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a330e6e04aff6318af877112bdb8e2d42">uncompressedSize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="63" column="12" bodyfile="compression/src/CountSketch.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a296e39aac01d9f333d0ae5700442ea31" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt; T &gt; thirdai::compression::CountSketch&lt; T &gt;::decompress</definition>
        <argsstring>() const final</argsstring>
        <name>decompress</name>
        <qualifiedname>thirdai::compression::CountSketch::decompress</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a2bedb8405b027b71cfb7d6b47fd4d90e">decompress</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="65" column="15" bodyfile="compression/src/CountSketch.cc" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a4180fae7c1fea45c71f6ffad76e91c77" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void thirdai::compression::CountSketch&lt; T &gt;::serialize</definition>
        <argsstring>(char *serialized_data) const final</argsstring>
        <name>serialize</name>
        <qualifiedname>thirdai::compression::CountSketch::serialize</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a8e0dbf7a71124b4faae63fd58c887387">serialize</reimplements>
        <param>
          <type>char *</type>
          <declname>serialized_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="67" column="8" bodyfile="compression/src/CountSketch.cc" bodystart="185" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a42cde871c40565a0ea9fbd6f05761a8f" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t thirdai::compression::CountSketch&lt; T &gt;::serialized_size</definition>
        <argsstring>() const final</argsstring>
        <name>serialized_size</name>
        <qualifiedname>thirdai::compression::CountSketch::serialized_size</qualifiedname>
        <reimplements refid="classthirdai_1_1compression_1_1_compressed_vector_1a19d5825d6f10469657b0376393b732d2">serialized_size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="69" column="12" bodyfile="compression/src/CountSketch.cc" bodystart="259" bodyend="279"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1ab2803e894dfe67469ee38a896fb64063" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::compression::CountSketch&lt; T &gt;::sketch</definition>
        <argsstring>(const T *values_to_compress, uint32_t size)</argsstring>
        <name>sketch</name>
        <qualifiedname>thirdai::compression::CountSketch::sketch</qualifiedname>
        <param>
          <type>const T *</type>
          <declname>values_to_compress</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="77" column="8" bodyfile="compression/src/CountSketch.cc" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1acb4cb8bc43ab985b5c30fed3f7af55d0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int thirdai::compression::CountSketch&lt; T &gt;::hash_sign</definition>
        <argsstring>(uint32_t sketch_id, uint32_t index) const</argsstring>
        <name>hash_sign</name>
        <qualifiedname>thirdai::compression::CountSketch::hash_sign</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>sketch_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="79" column="7" bodyfile="compression/src/CountSketch.cc" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_count_sketch_1a871be4f5a47e4004326825d4ffb544dc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t thirdai::compression::CountSketch&lt; T &gt;::hash_index</definition>
        <argsstring>(uint32_t sketch_id, uint32_t index) const</argsstring>
        <name>hash_index</name>
        <qualifiedname>thirdai::compression::CountSketch::hash_index</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>sketch_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CountSketch.h" line="81" column="12" bodyfile="compression/src/CountSketch.cc" bodystart="69" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>thirdai::compression::CompressedVector&lt; T &gt;</label>
        <link refid="classthirdai_1_1compression_1_1_compressed_vector"/>
      </node>
      <node id="1">
        <label>thirdai::compression::CountSketch&lt; T &gt;</label>
        <link refid="classthirdai_1_1compression_1_1_count_sketch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>thirdai::compression::CompressedVector&lt; T &gt;</label>
        <link refid="classthirdai_1_1compression_1_1_compressed_vector"/>
      </node>
      <node id="1">
        <label>thirdai::compression::CountSketch&lt; T &gt;</label>
        <link refid="classthirdai_1_1compression_1_1_count_sketch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="compression/src/CountSketch.h" line="28" column="1" bodyfile="compression/src/CountSketch.h" bodystart="28" bodyend="82"/>
    <listofallmembers>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a01cc2e7b32884cf71d7a0446ec715ba2" prot="private" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>_count_sketches</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a97feac7a328f2b70efe164a038c5106b" prot="private" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>_hasher_index</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1aed83b57e6b57b7f089c89b358850bd74" prot="private" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>_hasher_sign</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a90e2283d9178956d8a9509a2161b5188" prot="private" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>_uncompressed_size</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a1d898594722a097f4ef2ccbe87a3793a" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>add</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a740d06ab731dd3af3fcffd265471a8e8" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>clear</name></member>
      <member refid="classthirdai_1_1compression_1_1_compressed_vector_1a95227a93560eaf18584e521ff5487d2a" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>CompressedVector</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a232730c9d5df839f8759ddc74a18392d" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>CountSketch</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1aff7607ffd99c99ba1774d5f05cc52532" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>CountSketch</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1acf897e3bdab349afcfcd57547f8e78c5" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>CountSketch</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1ad8eeb218bd8a99382d816d1e3f2affe7" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>CountSketch</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a296e39aac01d9f333d0ae5700442ea31" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>decompress</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1af85f78ef33519b04657104760ead2295" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>extend</name></member>
      <member refid="classthirdai_1_1compression_1_1_compressed_vector_1a2c7a0062270a52be9c870c4cce943a06" prot="public" virt="non-virtual" ambiguityscope="thirdai::compression::CompressedVector::"><scope>thirdai::compression::CountSketch</scope><name>extend</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a5258146adf63c333036aa322fafd1861" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>get</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a871be4f5a47e4004326825d4ffb544dc" prot="private" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>hash_index</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1acb4cb8bc43ab985b5c30fed3f7af55d0" prot="private" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>hash_sign</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a42b60c3f62908e9ecacbe540e6d14626" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>numSketches</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a4180fae7c1fea45c71f6ffad76e91c77" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>serialize</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a42cde871c40565a0ea9fbd6f05761a8f" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>serialized_size</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1afb136639e67c61f03c6ea0503510babe" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>set</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1af0ee30933b83028ff5bdaea660df167c" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>size</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1ab2803e894dfe67469ee38a896fb64063" prot="private" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>sketch</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1ab13770851e79a70f65a9a76fea5c56fa" prot="public" virt="non-virtual"><scope>thirdai::compression::CountSketch</scope><name>sketches</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1a72d5483e8f1cb2826d121a280d49fc2a" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>type</name></member>
      <member refid="classthirdai_1_1compression_1_1_count_sketch_1acde0ec16d3a8e8d15379b5550547eb22" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>uncompressedSize</name></member>
      <member refid="classthirdai_1_1compression_1_1_compressed_vector_1a61f99ea6ddcc088d132102af37e48a85" prot="public" virt="virtual"><scope>thirdai::compression::CountSketch</scope><name>~CompressedVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
