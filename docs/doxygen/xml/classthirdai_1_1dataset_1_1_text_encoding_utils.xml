<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classthirdai_1_1dataset_1_1_text_encoding_utils" kind="class" language="C++" prot="public">
    <compoundname>thirdai::dataset::TextEncodingUtils</compoundname>
    <includes refid="_text_encoding_utils_8h" local="no">TextEncodingUtils.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1a56da946bcff623a04a209609e20832c8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t thirdai::dataset::TextEncodingUtils::HASH_SEED</definition>
        <argsstring></argsstring>
        <name>HASH_SEED</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::HASH_SEED</qualifiedname>
        <initializer>= 341</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="18" column="29" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1aa1babfe88524c24f0ed6e7bbb6abd7f0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t thirdai::dataset::TextEncodingUtils::DEFAULT_TEXT_ENCODING_DIM</definition>
        <argsstring></argsstring>
        <name>DEFAULT_TEXT_ENCODING_DIM</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::DEFAULT_TEXT_ENCODING_DIM</qualifiedname>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="19" column="29" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1aba846ca56cf3a0da280935eaa1b541b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t thirdai::dataset::TextEncodingUtils::computeUnigram</definition>
        <argsstring>(const char *key, uint32_t len)</argsstring>
        <name>computeUnigram</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computeUnigram</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="21" column="19" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1abb9e38095adea030a88063fccc6d84c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>static std::vector&lt; uint32_t &gt; thirdai::dataset::TextEncodingUtils::computeRawUnigrams</definition>
        <argsstring>(const std::string_view sentence)</argsstring>
        <name>computeRawUnigrams</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computeRawUnigrams</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>sentence</declname>
        </param>
        <briefdescription>
<para>Unigrams in a vector with possible repeated indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="28" column="22" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1a5b6ccc28b5b2e67907e0c8c12965d467" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>static std::vector&lt; uint32_t &gt; thirdai::dataset::TextEncodingUtils::computeRawUnigramsWithRange</definition>
        <argsstring>(const std::string_view sentence, uint32_t output_range)</argsstring>
        <name>computeRawUnigramsWithRange</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computeRawUnigramsWithRange</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>sentence</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
<para>Unigrams in a vector with possible repeated indices (modded to a range) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="42" column="22" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="42" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1a0537b20c200a726576f6d0de00c82b1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; uint32_t, std::string &gt;</type>
        <definition>static std::unordered_map&lt; uint32_t, std::string &gt; thirdai::dataset::TextEncodingUtils::buildUnigramHashToWordMap</definition>
        <argsstring>(const std::string_view sentence, uint32_t output_range)</argsstring>
        <name>buildUnigramHashToWordMap</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::buildUnigramHashToWordMap</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>sentence</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
<para>Get the word_hash to word map, which we can use it for RCA. </para>
        </briefdescription>
        <detaileddescription>
<para>Its better to write seperate function than to overload the already existing function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="57" column="29" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="57" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1a5772a4964ea5c0db9016d5b7c93b5188" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structthirdai_1_1_bolt_vector" kindref="compound">BoltVector</ref></type>
        <definition>static BoltVector thirdai::dataset::TextEncodingUtils::computeUnigrams</definition>
        <argsstring>(const std::string_view sentence, uint32_t output_range)</argsstring>
        <name>computeUnigrams</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computeUnigrams</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>sentence</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
<para>Unigrams in a <ref refid="structthirdai_1_1_bolt_vector" kindref="compound">BoltVector</ref> with possible repeated indices summed up. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="71" column="21" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="71" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1aee3cd24ade8f5fa3edf8368da15ae5c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>static std::vector&lt; uint32_t &gt; thirdai::dataset::TextEncodingUtils::computeRawPairgramsFromUnigrams</definition>
        <argsstring>(std::vector&lt; uint32_t &gt; unigram_hashes, uint32_t output_range)</argsstring>
        <name>computeRawPairgramsFromUnigrams</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computeRawPairgramsFromUnigrams</qualifiedname>
        <param>
          <type>std::vector&lt; uint32_t &gt;</type>
          <declname>unigram_hashes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
<para>Pairgrams in a vector with possible repeated indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="91" column="22" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="91" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1a2219ee99d25fad65807d3bcdb53129a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>static std::vector&lt; uint32_t &gt; thirdai::dataset::TextEncodingUtils::computeRawPairgrams</definition>
        <argsstring>(std::string_view sentence, uint32_t output_range)</argsstring>
        <name>computeRawPairgrams</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computeRawPairgrams</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>sentence</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
<para>Pairgrams in a vector with possible repeated indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="110" column="22" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1af29aad07e4560f4e9f0ebd2c9ee6ae6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structthirdai_1_1_bolt_vector" kindref="compound">BoltVector</ref></type>
        <definition>static BoltVector thirdai::dataset::TextEncodingUtils::computePairgrams</definition>
        <argsstring>(std::string_view sentence, uint32_t output_range)</argsstring>
        <name>computePairgrams</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computePairgrams</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>sentence</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
<para>Pairgrams in a <ref refid="structthirdai_1_1_bolt_vector" kindref="compound">BoltVector</ref> with possible repeated indices summed up. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="120" column="21" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="120" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1aed5f9c85ce6482d3d6bce86d27d5cc2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structthirdai_1_1_bolt_vector" kindref="compound">BoltVector</ref></type>
        <definition>static BoltVector thirdai::dataset::TextEncodingUtils::computePairgramsFromUnigrams</definition>
        <argsstring>(std::vector&lt; uint32_t &gt; &amp;unigrams, uint32_t output_range)</argsstring>
        <name>computePairgramsFromUnigrams</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::computePairgramsFromUnigrams</qualifiedname>
        <param>
          <type>std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>unigrams</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
<para>Pairgrams in a <ref refid="structthirdai_1_1_bolt_vector" kindref="compound">BoltVector</ref> with possible repeated indices summed up. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="140" column="21" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="140" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1ad8ec1ecc04befa24a0fd25b30c07a6d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename WORD_PROCESSOR_T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void thirdai::dataset::TextEncodingUtils::forEachWordHash</definition>
        <argsstring>(const std::string_view sentence, WORD_PROCESSOR_T word_processor)</argsstring>
        <name>forEachWordHash</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::forEachWordHash</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>sentence</declname>
        </param>
        <param>
          <type>WORD_PROCESSOR_T</type>
          <declname>word_processor</declname>
        </param>
        <briefdescription>
<para>Parses through a sentence and applies a function to the hash of each word. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="162" column="22" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="162" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_text_encoding_utils_1a5896e3626bfad395ce7165ac77d174e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename INDEX_VAL_PROCESSOR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void thirdai::dataset::TextEncodingUtils::sumRepeatedIndices</definition>
        <argsstring>(std::vector&lt; uint32_t &gt; &amp;indices, float base_value, INDEX_VAL_PROCESSOR idx_val_processor)</argsstring>
        <name>sumRepeatedIndices</name>
        <qualifiedname>thirdai::dataset::TextEncodingUtils::sumRepeatedIndices</qualifiedname>
        <param>
          <type>std::vector&lt; uint32_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>base_value</declname>
        </param>
        <param>
          <type>INDEX_VAL_PROCESSOR</type>
          <declname>idx_val_processor</declname>
        </param>
        <briefdescription>
<para>Sorts the given indices and deduplicates them by adding base_value for each instance of that index. </para>
        </briefdescription>
        <detaileddescription>
<para>Applies a lambda to the resulting idx, summed_value pair. </para>
        </detaileddescription>
        <inbodydescription>
<para>If current index is the same as the next index, keep accumulating summed_val. Otherwise, add sparse feature at the current index with the accumulated base_value and reset summed_val.</para>
<para>If we&apos;re looking at the last element, the next element is clearly &quot;different&quot;, so we add a sparse feature accordingly.</para>
        </inbodydescription>
        <location file="dataset/src/utils/TextEncodingUtils.h" line="210" column="15" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="210" bodyend="249"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class should be the source of all text encodings in the codebase to ensure no mismatches in hashes or implementations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="dataset/src/utils/TextEncodingUtils.h" line="16" column="1" bodyfile="dataset/src/utils/TextEncodingUtils.h" bodystart="16" bodyend="250"/>
    <listofallmembers>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1a0537b20c200a726576f6d0de00c82b1a" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>buildUnigramHashToWordMap</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1af29aad07e4560f4e9f0ebd2c9ee6ae6f" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computePairgrams</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1aed5f9c85ce6482d3d6bce86d27d5cc2f" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computePairgramsFromUnigrams</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1a2219ee99d25fad65807d3bcdb53129a2" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computeRawPairgrams</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1aee3cd24ade8f5fa3edf8368da15ae5c7" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computeRawPairgramsFromUnigrams</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1abb9e38095adea030a88063fccc6d84c7" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computeRawUnigrams</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1a5b6ccc28b5b2e67907e0c8c12965d467" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computeRawUnigramsWithRange</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1aba846ca56cf3a0da280935eaa1b541b6" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computeUnigram</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1a5772a4964ea5c0db9016d5b7c93b5188" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>computeUnigrams</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1aa1babfe88524c24f0ed6e7bbb6abd7f0" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>DEFAULT_TEXT_ENCODING_DIM</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1ad8ec1ecc04befa24a0fd25b30c07a6d4" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>forEachWordHash</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1a56da946bcff623a04a209609e20832c8" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>HASH_SEED</name></member>
      <member refid="classthirdai_1_1dataset_1_1_text_encoding_utils_1a5896e3626bfad395ce7165ac77d174e5" prot="public" virt="non-virtual"><scope>thirdai::dataset::TextEncodingUtils</scope><name>sumRepeatedIndices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
