<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacethirdai_1_1compression" kind="namespace" language="C++">
    <compoundname>thirdai::compression</compoundname>
    <innerclass refid="classthirdai_1_1compression_1_1_compressed_vector" prot="public">thirdai::compression::CompressedVector</innerclass>
    <innerclass refid="classthirdai_1_1compression_1_1_count_sketch" prot="public">thirdai::compression::CountSketch</innerclass>
    <innerclass refid="classthirdai_1_1compression_1_1_decompress_visitor" prot="public">thirdai::compression::DecompressVisitor</innerclass>
    <innerclass refid="classthirdai_1_1compression_1_1_dragon_vector" prot="public">thirdai::compression::DragonVector</innerclass>
    <innerclass refid="classthirdai_1_1compression_1_1_extend_visitor" prot="public">thirdai::compression::ExtendVisitor</innerclass>
    <innerclass refid="classthirdai_1_1compression_1_1_serialize_visitor" prot="public">thirdai::compression::SerializeVisitor</innerclass>
    <innerclass refid="classthirdai_1_1compression_1_1_size_visitor" prot="public">thirdai::compression::SizeVisitor</innerclass>
    <innernamespace refid="namespacethirdai_1_1compression_1_1serializer">thirdai::compression::serializer</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_compressed_vector_8h_1af8404c08a093f3ecd2df9291cda3de19" prot="public" static="no" strong="yes">
        <type></type>
        <name>CompressionScheme</name>
        <qualifiedname>thirdai::compression::CompressionScheme</qualifiedname>
        <enumvalue id="_compressed_vector_8h_1af8404c08a093f3ecd2df9291cda3de19a583f4be146b6127f9e4f3f036ce7df43" prot="public">
          <name>Dragon</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_compressed_vector_8h_1af8404c08a093f3ecd2df9291cda3de19a03e50e8d0900cf3b202fd80c446dd36b" prot="public">
          <name>CountSketch</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressedVector.h" line="11" column="1" bodyfile="compression/src/CompressedVector.h" bodystart="11" bodyend="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_compressed_vector_8h_1acfd71414b21e94c9b426c2852d700d1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CompressionScheme</type>
        <definition>CompressionScheme thirdai::compression::convertStringToEnum</definition>
        <argsstring>(const std::string &amp;compression_scheme)</argsstring>
        <name>convertStringToEnum</name>
        <qualifiedname>thirdai::compression::convertStringToEnum</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression_scheme</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressedVector.h" line="13" column="26" bodyfile="compression/src/CompressedVector.h" bodystart="13" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="_compression_factory_8h_1a9199ae56e615ecfedbbede7e52b4a39e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::variant&lt; <ref refid="classthirdai_1_1compression_1_1_dragon_vector" kindref="compound">DragonVector</ref>&lt; T &gt;, <ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &gt;</type>
        <definition>std::variant&lt; DragonVector&lt; T &gt;, CountSketch&lt; T &gt; &gt; thirdai::compression::compress</definition>
        <argsstring>(const T *values, uint32_t size, const std::string &amp;compression_scheme, float compression_density, uint32_t seed_for_hashing, uint32_t sample_population_size)</argsstring>
        <name>compress</name>
        <qualifiedname>thirdai::compression::compress</qualifiedname>
        <param>
          <type>const T *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>compression_scheme</declname>
        </param>
        <param>
          <type>float</type>
          <declname>compression_density</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>seed_for_hashing</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sample_population_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressionFactory.h" line="89" column="21" bodyfile="compression/src/CompressionFactory.h" bodystart="89" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_compression_factory_8h_1adec22f9b5be6d1f7f256601075642cb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::variant&lt; <ref refid="classthirdai_1_1compression_1_1_dragon_vector" kindref="compound">DragonVector</ref>&lt; T &gt;, <ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &gt;</type>
        <definition>std::variant&lt; DragonVector&lt; T &gt;, CountSketch&lt; T &gt; &gt; thirdai::compression::concat</definition>
        <argsstring>(std::vector&lt; std::variant&lt; DragonVector&lt; T &gt;, CountSketch&lt; T &gt; &gt; &gt; compressed_vectors)</argsstring>
        <name>concat</name>
        <qualifiedname>thirdai::compression::concat</qualifiedname>
        <param>
          <type>std::vector&lt; std::variant&lt; <ref refid="classthirdai_1_1compression_1_1_dragon_vector" kindref="compound">DragonVector</ref>&lt; T &gt;, <ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &gt; &gt;</type>
          <declname>compressed_vectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressionFactory.h" line="127" column="21" bodyfile="compression/src/CompressionFactory.h" bodystart="127" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="_compression_utils_8h_1a23b012c215da5d2c52972fc5edad4566" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T thirdai::compression::estimateTopKThreshold</definition>
        <argsstring>(const T *values, uint32_t size, float threshold_ratio, uint32_t seed_for_sampling, uint32_t sample_population_size)</argsstring>
        <name>estimateTopKThreshold</name>
        <qualifiedname>thirdai::compression::estimateTopKThreshold</qualifiedname>
        <param>
          <type>const T *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>threshold_ratio</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>seed_for_sampling</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sample_population_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressionUtils.h" line="17" column="10" bodyfile="compression/src/CompressionUtils.h" bodystart="17" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="compression/src/CompressedVector.h" line="9" column="1"/>
  </compounddef>
</doxygen>
