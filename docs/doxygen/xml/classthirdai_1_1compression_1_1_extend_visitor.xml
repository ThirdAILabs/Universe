<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classthirdai_1_1compression_1_1_extend_visitor" kind="class" language="C++" prot="public">
    <compoundname>thirdai::compression::ExtendVisitor</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_extend_visitor_1a62a826faa9712ca75c7c2558b4547880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::compression::ExtendVisitor&lt; T &gt;::operator()</definition>
        <argsstring>(DragonVector&lt; T &gt; &amp;vector_to_extend, const DragonVector&lt; T &gt; &amp;vector_to_extend_with)</argsstring>
        <name>operator()</name>
        <qualifiedname>thirdai::compression::ExtendVisitor::operator()</qualifiedname>
        <param>
          <type><ref refid="classthirdai_1_1compression_1_1_dragon_vector" kindref="compound">DragonVector</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend</declname>
        </param>
        <param>
          <type>const <ref refid="classthirdai_1_1compression_1_1_dragon_vector" kindref="compound">DragonVector</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend_with</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressionFactory.h" line="25" column="8" bodyfile="compression/src/CompressionFactory.h" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_extend_visitor_1aed0f6eabe469abbabed161d2fd83e1bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::compression::ExtendVisitor&lt; T &gt;::operator()</definition>
        <argsstring>(CountSketch&lt; T &gt; &amp;vector_to_extend, const CountSketch&lt; T &gt; &amp;vector_to_extend_with)</argsstring>
        <name>operator()</name>
        <qualifiedname>thirdai::compression::ExtendVisitor::operator()</qualifiedname>
        <param>
          <type><ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend</declname>
        </param>
        <param>
          <type>const <ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend_with</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressionFactory.h" line="29" column="8" bodyfile="compression/src/CompressionFactory.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_extend_visitor_1a3800400e874926ceb1b63f76e8b8d682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::compression::ExtendVisitor&lt; T &gt;::operator()</definition>
        <argsstring>(DragonVector&lt; T &gt; &amp;vector_to_extend, const CountSketch&lt; T &gt; &amp;vector_to_extend_with)</argsstring>
        <name>operator()</name>
        <qualifiedname>thirdai::compression::ExtendVisitor::operator()</qualifiedname>
        <param>
          <type><ref refid="classthirdai_1_1compression_1_1_dragon_vector" kindref="compound">DragonVector</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend</declname>
        </param>
        <param>
          <type>const <ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend_with</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressionFactory.h" line="33" column="8" bodyfile="compression/src/CompressionFactory.h" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1compression_1_1_extend_visitor_1a3c1f8ab70769c25498933d6dc1900e9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void thirdai::compression::ExtendVisitor&lt; T &gt;::operator()</definition>
        <argsstring>(CountSketch&lt; T &gt; &amp;vector_to_extend, const DragonVector&lt; T &gt; &amp;vector_to_extend_with)</argsstring>
        <name>operator()</name>
        <qualifiedname>thirdai::compression::ExtendVisitor::operator()</qualifiedname>
        <param>
          <type><ref refid="classthirdai_1_1compression_1_1_count_sketch" kindref="compound">CountSketch</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend</declname>
        </param>
        <param>
          <type>const <ref refid="classthirdai_1_1compression_1_1_dragon_vector" kindref="compound">DragonVector</ref>&lt; T &gt; &amp;</type>
          <declname>vector_to_extend_with</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="compression/src/CompressionFactory.h" line="40" column="8" bodyfile="compression/src/CompressionFactory.h" bodystart="40" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="compression/src/CompressionFactory.h" line="23" column="1" bodyfile="compression/src/CompressionFactory.h" bodystart="23" bodyend="47"/>
    <listofallmembers>
      <member refid="classthirdai_1_1compression_1_1_extend_visitor_1a62a826faa9712ca75c7c2558b4547880" prot="public" virt="non-virtual"><scope>thirdai::compression::ExtendVisitor</scope><name>operator()</name></member>
      <member refid="classthirdai_1_1compression_1_1_extend_visitor_1aed0f6eabe469abbabed161d2fd83e1bb" prot="public" virt="non-virtual"><scope>thirdai::compression::ExtendVisitor</scope><name>operator()</name></member>
      <member refid="classthirdai_1_1compression_1_1_extend_visitor_1a3800400e874926ceb1b63f76e8b8d682" prot="public" virt="non-virtual"><scope>thirdai::compression::ExtendVisitor</scope><name>operator()</name></member>
      <member refid="classthirdai_1_1compression_1_1_extend_visitor_1a3c1f8ab70769c25498933d6dc1900e9e" prot="public" virt="non-virtual"><scope>thirdai::compression::ExtendVisitor</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
