<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classthirdai_1_1dataset_1_1_block" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>thirdai::dataset::Block</compoundname>
    <derivedcompoundref refid="classthirdai_1_1dataset_1_1_categorical_block" prot="public" virt="non-virtual">thirdai::dataset::CategoricalBlock</derivedcompoundref>
    <derivedcompoundref refid="classthirdai_1_1dataset_1_1_date_block" prot="public" virt="non-virtual">thirdai::dataset::DateBlock</derivedcompoundref>
    <derivedcompoundref refid="classthirdai_1_1dataset_1_1_dense_array_block" prot="public" virt="non-virtual">thirdai::dataset::DenseArrayBlock</derivedcompoundref>
    <derivedcompoundref refid="classthirdai_1_1dataset_1_1_tabular_pair_gram" prot="public" virt="non-virtual">thirdai::dataset::TabularPairGram</derivedcompoundref>
    <derivedcompoundref refid="classthirdai_1_1dataset_1_1_text_block" prot="public" virt="non-virtual">thirdai::dataset::TextBlock</derivedcompoundref>
    <derivedcompoundref refid="classthirdai_1_1dataset_1_1_user_count_history_block" prot="public" virt="non-virtual">thirdai::dataset::UserCountHistoryBlock</derivedcompoundref>
    <derivedcompoundref refid="classthirdai_1_1dataset_1_1_user_item_history_block" prot="public" virt="non-virtual">thirdai::dataset::UserItemHistoryBlock</derivedcompoundref>
    <includes refid="_block_interface_8h" local="no">BlockInterface.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1a67f4a42a2c11c4a403e0adeff8e5be3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::exception_ptr</type>
        <definition>std::exception_ptr thirdai::dataset::Block::addVectorSegment</definition>
        <argsstring>(const std::vector&lt; std::string_view &gt; &amp;input_row, SegmentedFeatureVector &amp;vec)</argsstring>
        <name>addVectorSegment</name>
        <qualifiedname>thirdai::dataset::Block::addVectorSegment</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string_view &gt; &amp;</type>
          <declname>input_row</declname>
        </param>
        <param>
          <type><ref refid="classthirdai_1_1dataset_1_1_segmented_feature_vector" kindref="compound">SegmentedFeatureVector</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Encodes a sequence of strings as a vector and concatenates the given vector with this encoding. </para>
        </briefdescription>
        <detaileddescription>
<para>Arguments: input_row: input sample; the sequence of strings to encoded. vec: the vector to be concatenated with the vector encoding of input_row.</para>
<para>Returns: exception_ptr: Since blocks can run in parallel in pragma threads, they can&apos;t throw their own exceptions. To fail in a block, return any exception_ptr and proceed with program execution without failing. The error should then be caught. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="133" column="22" bodyfile="dataset/src/blocks/BlockInterface.h" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1a5859698b5d80c130f745e66be3173eac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint32_t</type>
        <definition>virtual uint32_t thirdai::dataset::Block::featureDim</definition>
        <argsstring>() const =0</argsstring>
        <name>featureDim</name>
        <qualifiedname>thirdai::dataset::Block::featureDim</qualifiedname>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_categorical_block_1a21cff869aa317945641b9b0e5c9ae2b9">featureDim</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_date_block_1a68b9f0688d5154e283863df5d0181cf9">featureDim</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_dense_array_block_1a1e5ab09fe1c2b3f323f32de15d577bcd">featureDim</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_tabular_pair_gram_1a8c4977f537a77554836f20fedb377621">featureDim</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_text_block_1ab11d61fcff3671e91a416134d1e4ef49">featureDim</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_count_history_block_1a8a26508a7ba652de81a9381bba3ce133">featureDim</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_item_history_block_1a2dca87bb1bcae48e1ef6ce3c36942bf3">featureDim</reimplementedby>
        <briefdescription>
<para>Returns the dimension of the vector encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="143" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1a9fc5f3b16e9044149d90dfa61e2506e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool thirdai::dataset::Block::isDense</definition>
        <argsstring>() const =0</argsstring>
        <name>isDense</name>
        <qualifiedname>thirdai::dataset::Block::isDense</qualifiedname>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_categorical_block_1ab348bb0c80ed9b57f2aeb230bd009892">isDense</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_date_block_1a6f7bb7f6c1942e8f9f7574fce8e2bba7">isDense</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_dense_array_block_1a28cbcf916624acb522ae79bc70b5d578">isDense</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_tabular_pair_gram_1aaa532304ced20f017344e2013da80a8f">isDense</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_text_block_1a11c09b2a465c9b6ee2e3d47c4039e6c0">isDense</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_count_history_block_1a9128c38fe9f5d02132c442bcebc297ee">isDense</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_item_history_block_1afb26db2bc0310d28de8bf23d70094900">isDense</reimplementedby>
        <briefdescription>
<para>True if the block produces dense features, False otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="148" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1a58bc2809a20117b3d8c9ca59ef5c3757" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint32_t</type>
        <definition>virtual uint32_t thirdai::dataset::Block::expectedNumColumns</definition>
        <argsstring>() const =0</argsstring>
        <name>expectedNumColumns</name>
        <qualifiedname>thirdai::dataset::Block::expectedNumColumns</qualifiedname>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_categorical_block_1ad6f2bba282be5220f90ea156fe291879">expectedNumColumns</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_date_block_1acb1a8f4633fc99f1e0ab0dd4458b009b">expectedNumColumns</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_dense_array_block_1aad7f56433f3ad1874ddab33d375c63dc">expectedNumColumns</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_tabular_pair_gram_1abfe6baef153d8e681a0f386032ce0680">expectedNumColumns</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_text_block_1ab41d5baa51103c97f582ee66432ae5b8">expectedNumColumns</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_count_history_block_1a57b52d47f7ee49dd06bf4488a1c04659">expectedNumColumns</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_item_history_block_1a51059c137aa2f9e42a384e31e5a98605">expectedNumColumns</reimplementedby>
        <briefdescription>
<para>Returns the minimum number of columns that the block expects to see in each row of the dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="154" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1a9411d9a3c22f805810489c4b29bbb0bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void thirdai::dataset::Block::prepareForBatch</definition>
        <argsstring>(const std::vector&lt; std::string_view &gt; &amp;first_row)</argsstring>
        <name>prepareForBatch</name>
        <qualifiedname>thirdai::dataset::Block::prepareForBatch</qualifiedname>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_count_history_block_1a6d66e1c4866dfee95f1b11a2911035a8">prepareForBatch</reimplementedby>
        <param>
          <type>const std::vector&lt; std::string_view &gt; &amp;</type>
          <declname>first_row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="156" column="16" bodyfile="dataset/src/blocks/BlockInterface.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1a74f791cba8e885b30ae102124ab237d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structthirdai_1_1dataset_1_1_explanation" kindref="compound">Explanation</ref></type>
        <definition>virtual Explanation thirdai::dataset::Block::explainIndex</definition>
        <argsstring>(uint32_t index_within_block, const std::vector&lt; std::string_view &gt; &amp;input_row)=0</argsstring>
        <name>explainIndex</name>
        <qualifiedname>thirdai::dataset::Block::explainIndex</qualifiedname>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_tabular_pair_gram_1a8b677ddf32e243d8d1879c37078c0add">explainIndex</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_categorical_block_1a9223a7dd8b74b614e93a6be9234b10b2">explainIndex</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_date_block_1a18f3f7d55f5b2830e5103e8339fd8ed4">explainIndex</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_dense_array_block_1ac0986309676681a4ffde820f1a2e8b8a">explainIndex</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_text_block_1a76eff03a3c6cbee19897c42382629870">explainIndex</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_count_history_block_1ae4ade2fe7abc9aff81f32447f5f398d7">explainIndex</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_item_history_block_1a50c732b96581a0fd7c8e9a744ffcba92">explainIndex</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>index_within_block</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string_view &gt; &amp;</type>
          <declname>input_row</declname>
        </param>
        <briefdescription>
<para>For a given index, get the keyword which falls in that index when building the segmented feature vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Arguments: index_within_block : index within the block so that we can get exact keyword responsible. input_row: the string_view of input string so that we process the keywords when we call explainIndex method rather than storing that in buildsegment , which may affect thread safety.</para>
<para>Returns: column number and keyword responsible for the given index from that column. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="174" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1aa63fcaa97e225720801526fb1b7799b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual thirdai::dataset::Block::~Block</definition>
        <argsstring>()=default</argsstring>
        <name>~Block</name>
        <qualifiedname>thirdai::dataset::Block::~Block</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="178" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classthirdai_1_1dataset_1_1_block_1af8e3d79b348482e033852b415a4dfaad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::exception_ptr</type>
        <definition>virtual std::exception_ptr thirdai::dataset::Block::buildSegment</definition>
        <argsstring>(const std::vector&lt; std::string_view &gt; &amp;input_row, SegmentedFeatureVector &amp;vec)=0</argsstring>
        <name>buildSegment</name>
        <qualifiedname>thirdai::dataset::Block::buildSegment</qualifiedname>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_categorical_block_1a9e130f6029370db99ea56e26900bd3d4">buildSegment</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_date_block_1aa8892d29020816829e940d702b7ba925">buildSegment</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_dense_array_block_1a457463e481de1f7ad3c313d0c5679af0">buildSegment</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_tabular_pair_gram_1abd3f9e383dfa8e6f628e0ec26408dced">buildSegment</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_text_block_1a426c8e954cb04c7c3a9b4e35d11846cf">buildSegment</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_count_history_block_1a6a429a74d4db332a9c75e5df9f7e82d6">buildSegment</reimplementedby>
        <reimplementedby refid="classthirdai_1_1dataset_1_1_user_item_history_block_1a3e67dc0a75e0912378f8cf6999a2b385">buildSegment</reimplementedby>
        <param>
          <type>const std::vector&lt; std::string_view &gt; &amp;</type>
          <declname>input_row</declname>
        </param>
        <param>
          <type><ref refid="classthirdai_1_1dataset_1_1_segmented_feature_vector" kindref="compound">SegmentedFeatureVector</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Derived class-specific implementation of how input rows get encoded (and what ends up in the vector segment). </para>
        </briefdescription>
        <detaileddescription>
<para>WARNING: This function may be called in many threads simultaneously, so it should be thread-safe or robust to data races. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dataset/src/blocks/BlockInterface.h" line="188" column="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classthirdai_1_1dataset_1_1_block" kindref="compound">Block</ref> abstract class. </para>
    </briefdescription>
    <detaileddescription>
<para>A block accepts an input sample in the form of a sequence of strings then encodes this sequence as a vector. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>thirdai::dataset::Block</label>
        <link refid="classthirdai_1_1dataset_1_1_block"/>
      </node>
      <node id="2">
        <label>thirdai::dataset::CategoricalBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_categorical_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>thirdai::dataset::CharKGramTextBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_char_k_gram_text_block"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>thirdai::dataset::DateBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_date_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>thirdai::dataset::DenseArrayBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_dense_array_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>thirdai::dataset::NumericalCategoricalBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_numerical_categorical_block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>thirdai::dataset::PairGramTextBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_pair_gram_text_block"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>thirdai::dataset::StringLookupCategoricalBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_string_lookup_categorical_block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>thirdai::dataset::TabularPairGram</label>
        <link refid="classthirdai_1_1dataset_1_1_tabular_pair_gram"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>thirdai::dataset::TextBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_text_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>thirdai::dataset::UniGramTextBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_uni_gram_text_block"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>thirdai::dataset::UserCountHistoryBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_user_count_history_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>thirdai::dataset::UserItemHistoryBlock</label>
        <link refid="classthirdai_1_1dataset_1_1_user_item_history_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="dataset/src/blocks/BlockInterface.h" line="116" column="1" bodyfile="dataset/src/blocks/BlockInterface.h" bodystart="116" bodyend="191"/>
    <listofallmembers>
      <member refid="classthirdai_1_1dataset_1_1_block_1a67f4a42a2c11c4a403e0adeff8e5be3b" prot="public" virt="non-virtual"><scope>thirdai::dataset::Block</scope><name>addVectorSegment</name></member>
      <member refid="classthirdai_1_1dataset_1_1_block_1af8e3d79b348482e033852b415a4dfaad" prot="protected" virt="pure-virtual"><scope>thirdai::dataset::Block</scope><name>buildSegment</name></member>
      <member refid="classthirdai_1_1dataset_1_1_block_1a58bc2809a20117b3d8c9ca59ef5c3757" prot="public" virt="pure-virtual"><scope>thirdai::dataset::Block</scope><name>expectedNumColumns</name></member>
      <member refid="classthirdai_1_1dataset_1_1_block_1a74f791cba8e885b30ae102124ab237d3" prot="public" virt="pure-virtual"><scope>thirdai::dataset::Block</scope><name>explainIndex</name></member>
      <member refid="classthirdai_1_1dataset_1_1_block_1a5859698b5d80c130f745e66be3173eac" prot="public" virt="pure-virtual"><scope>thirdai::dataset::Block</scope><name>featureDim</name></member>
      <member refid="classthirdai_1_1dataset_1_1_block_1a9fc5f3b16e9044149d90dfa61e2506e6" prot="public" virt="pure-virtual"><scope>thirdai::dataset::Block</scope><name>isDense</name></member>
      <member refid="classthirdai_1_1dataset_1_1_block_1a9411d9a3c22f805810489c4b29bbb0bc" prot="public" virt="virtual"><scope>thirdai::dataset::Block</scope><name>prepareForBatch</name></member>
      <member refid="classthirdai_1_1dataset_1_1_block_1aa63fcaa97e225720801526fb1b7799b3" prot="public" virt="virtual"><scope>thirdai::dataset::Block</scope><name>~Block</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
