<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="namespacethirdai_1_1search" kind="namespace" language="C++">
    <compoundname>thirdai::search</compoundname>
    <innerclass refid="classthirdai_1_1search_1_1_doc_search" prot="public">thirdai::search::DocSearch</innerclass>
    <innerclass refid="classthirdai_1_1search_1_1_max_flash" prot="public">thirdai::search::MaxFlash</innerclass>
    <innerclass refid="classthirdai_1_1search_1_1_max_flash_array" prot="public">thirdai::search::MaxFlashArray</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_utils_8h_1acf20653805d5452cd04549db275f3fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void thirdai::search::removeDuplicates</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>removeDuplicates</name>
        <qualifiedname>thirdai::search::removeDuplicates</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="search/src/Utils.h" line="11" column="6" bodyfile="search/src/Utils.h" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="_utils_8h_1ae454b08b11d7c9649480cfac61a9dbf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>std::vector&lt; uint32_t &gt; thirdai::search::minHeapPairsToDescending</definition>
        <argsstring>(std::priority_queue&lt; std::pair&lt; T, uint32_t &gt; &gt; &amp;min_heap)</argsstring>
        <name>minHeapPairsToDescending</name>
        <qualifiedname>thirdai::search::minHeapPairsToDescending</qualifiedname>
        <param>
          <type>std::priority_queue&lt; std::pair&lt; T, uint32_t &gt; &gt; &amp;</type>
          <declname>min_heap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="search/src/Utils.h" line="21" column="13" bodyfile="search/src/Utils.h" bodystart="21" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_utils_8h_1ae8c94acf24230b074c7d103fa3fa0531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>std::vector&lt; uint32_t &gt; thirdai::search::argmax</definition>
        <argsstring>(const Eigen::VectorXf &amp;input, uint32_t top_k)</argsstring>
        <name>argmax</name>
        <qualifiedname>thirdai::search::argmax</qualifiedname>
        <param>
          <type>const Eigen::VectorXf &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>top_k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="search/src/Utils.h" line="38" column="20" bodyfile="search/src/Utils.h" bodystart="38" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_utils_8h_1a4ff887b2b5046ef4fea6a048652f45ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>std::vector&lt; uint32_t &gt; thirdai::search::argsort_descending</definition>
        <argsstring>(const std::vector&lt; T &gt; to_argsort)</argsstring>
        <name>argsort_descending</name>
        <qualifiedname>thirdai::search::argsort_descending</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt;</type>
          <declname>to_argsort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="search/src/Utils.h" line="59" column="13" bodyfile="search/src/Utils.h" bodystart="59" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="search/src/DocSearch.h" line="21" column="1"/>
  </compounddef>
</doxygen>
